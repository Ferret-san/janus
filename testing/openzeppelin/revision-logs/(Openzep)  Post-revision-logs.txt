Contract: AccessControl
    default admin
      1) deployer has default admin role

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      2) other roles's admin is the default admin role

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      3) default admin role's admin is itself

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
    granting
      4) admin can grant role to other accounts

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xed9ea7bc2a13bc59432ab07436e7f7f5450f82d4b48c401bed177bfaf36b1873 (type: bytes32),
      account: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
@openzeppelin/test-helpers WARN expectRevert: Assertions may yield false negatives!

Revert reason checks are only known to work on Ganache >=2.2.0 and Hardhat, and the current node is QTUM ETHTestRPC/ethereum-js.

If your node does support revert reasons, please let us know: https://github.com/OpenZeppelin/openzeppelin-test-helpers/issues/new
      5) non-admin cannot grant role to other accounts

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      ✓ accounts can be granted a role multiple times (467ms)
    revoking
      6) roles that are not had can be revoked

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      with granted role
        7) admin can revoke role

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xed9ea7bc2a13bc59432ab07436e7f7f5450f82d4b48c401bed177bfaf36b1873 (type: bytes32),
      account: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleRevoked(
      role: <indexed> 0xed9ea7bc2a13bc59432ab07436e7f7f5450f82d4b48c401bed177bfaf36b1873 (type: bytes32),
      account: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
        8) non-admin cannot revoke role

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xed9ea7bc2a13bc59432ab07436e7f7f5450f82d4b48c401bed177bfaf36b1873 (type: bytes32),
      account: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
        ✓ a role can be revoked multiple times (299ms)
    renouncing
      ✓ roles that are not had can be renounced (110ms)
      with granted role
        9) bearer can renounce role

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xed9ea7bc2a13bc59432ab07436e7f7f5450f82d4b48c401bed177bfaf36b1873 (type: bytes32),
      account: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleRevoked(
      role: <indexed> 0xed9ea7bc2a13bc59432ab07436e7f7f5450f82d4b48c401bed177bfaf36b1873 (type: bytes32),
      account: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      sender: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address)
    )


    ---------------------------
        10) only the sender can renounce their roles

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xed9ea7bc2a13bc59432ab07436e7f7f5450f82d4b48c401bed177bfaf36b1873 (type: bytes32),
      account: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
        ✓ a role can be renounced multiple times (222ms)
    enumerating
      11) role bearers can be enumerated

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xed9ea7bc2a13bc59432ab07436e7f7f5450f82d4b48c401bed177bfaf36b1873 (type: bytes32),
      account: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xed9ea7bc2a13bc59432ab07436e7f7f5450f82d4b48c401bed177bfaf36b1873 (type: bytes32),
      account: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
    setting role admin
      12) a role's admin role can be changed

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xed9ea7bc2a13bc59432ab07436e7f7f5450f82d4b48c401bed177bfaf36b1873 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x879ce0d4bfd332649ca3552efe772a38d64a315eb70ab69689fd309c735946b5 (type: bytes32)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x879ce0d4bfd332649ca3552efe772a38d64a315eb70ab69689fd309c735946b5 (type: bytes32),
      account: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      13) the new admin can grant roles

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xed9ea7bc2a13bc59432ab07436e7f7f5450f82d4b48c401bed177bfaf36b1873 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x879ce0d4bfd332649ca3552efe772a38d64a315eb70ab69689fd309c735946b5 (type: bytes32)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x879ce0d4bfd332649ca3552efe772a38d64a315eb70ab69689fd309c735946b5 (type: bytes32),
      account: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      14) the new admin can revoke roles

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xed9ea7bc2a13bc59432ab07436e7f7f5450f82d4b48c401bed177bfaf36b1873 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x879ce0d4bfd332649ca3552efe772a38d64a315eb70ab69689fd309c735946b5 (type: bytes32)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x879ce0d4bfd332649ca3552efe772a38d64a315eb70ab69689fd309c735946b5 (type: bytes32),
      account: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      15) a role's previous admins no longer grant roles

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xed9ea7bc2a13bc59432ab07436e7f7f5450f82d4b48c401bed177bfaf36b1873 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x879ce0d4bfd332649ca3552efe772a38d64a315eb70ab69689fd309c735946b5 (type: bytes32)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x879ce0d4bfd332649ca3552efe772a38d64a315eb70ab69689fd309c735946b5 (type: bytes32),
      account: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      16) a role's previous admins no longer revoke roles

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xed9ea7bc2a13bc59432ab07436e7f7f5450f82d4b48c401bed177bfaf36b1873 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x879ce0d4bfd332649ca3552efe772a38d64a315eb70ab69689fd309c735946b5 (type: bytes32)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x879ce0d4bfd332649ca3552efe772a38d64a315eb70ab69689fd309c735946b5 (type: bytes32),
      account: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------

  Contract: Ownable
    17) "before each" hook for "has an owner"

  Contract: TimelockController
    18) initial state

    Events emitted during test:
    ---------------------------

    AccessControl.RoleAdminChanged(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      account: <indexed> 0xA65185B76eC48E13E95B671Ff1556A15c515b5e8 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1 (type: bytes32),
      account: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63 (type: bytes32),
      account: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    TimelockController.MinDelayChange(
      oldDuration: 0 (type: uint256),
      newDuration: 86400 (type: uint256)
    )


    ---------------------------
    methods
      operation hashing
        19) hashOperation

    Events emitted during test:
    ---------------------------

    AccessControl.RoleAdminChanged(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      account: <indexed> 0xe959116901A8e8c5E550e3c85451a7E9E97Ee48e (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1 (type: bytes32),
      account: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63 (type: bytes32),
      account: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    TimelockController.MinDelayChange(
      oldDuration: 0 (type: uint256),
      newDuration: 86400 (type: uint256)
    )


    ---------------------------
        20) hashOperationBatch

    Events emitted during test:
    ---------------------------

    AccessControl.RoleAdminChanged(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      account: <indexed> 0xE0bB8eADEd6180E27f5e5C9602E00960a19A62c8 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1 (type: bytes32),
      account: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63 (type: bytes32),
      account: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    TimelockController.MinDelayChange(
      oldDuration: 0 (type: uint256),
      newDuration: 86400 (type: uint256)
    )


    ---------------------------
      simple
        schedule
          21) proposer can schedule

    Events emitted during test:
    ---------------------------

    AccessControl.RoleAdminChanged(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      account: <indexed> 0xffC4F313d1809151de07d275234CaCD504cE3f1d (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1 (type: bytes32),
      account: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63 (type: bytes32),
      account: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    TimelockController.MinDelayChange(
      oldDuration: 0 (type: uint256),
      newDuration: 86400 (type: uint256)
    )

    TimelockController.CallScheduled(
      id: <indexed> 0x13334509e29c8851983eeb6aaea568a5c4a11d9105355a9af039420c716f3b59 (type: bytes32),
      index: <indexed> 0 (type: uint256),
      target: 0x31754f590B97fD975Eb86938f18Cc304E264D2F2 (type: address),
      value: 0 (type: uint256),
      data: hex'3bf92ccc' (type: bytes),
      predecessor: 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      delay: 86400 (type: uint256)
    )


    ---------------------------
          22) prevent overwritting active operation

    Events emitted during test:
    ---------------------------

    AccessControl.RoleAdminChanged(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      account: <indexed> 0xcD0DA9D737007898760Ba35baCA8476941BE6c43 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1 (type: bytes32),
      account: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63 (type: bytes32),
      account: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    TimelockController.MinDelayChange(
      oldDuration: 0 (type: uint256),
      newDuration: 86400 (type: uint256)
    )

    TimelockController.CallScheduled(
      id: <indexed> 0x13334509e29c8851983eeb6aaea568a5c4a11d9105355a9af039420c716f3b59 (type: bytes32),
      index: <indexed> 0 (type: uint256),
      target: 0x31754f590B97fD975Eb86938f18Cc304E264D2F2 (type: address),
      value: 0 (type: uint256),
      data: hex'3bf92ccc' (type: bytes),
      predecessor: 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      delay: 86400 (type: uint256)
    )


    ---------------------------
          23) prevent non-proposer from commiting

    Events emitted during test:
    ---------------------------

    AccessControl.RoleAdminChanged(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      account: <indexed> 0x7Fb54301D183a8E53C437f47ec05D6B1d446eA5a (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1 (type: bytes32),
      account: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63 (type: bytes32),
      account: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    TimelockController.MinDelayChange(
      oldDuration: 0 (type: uint256),
      newDuration: 86400 (type: uint256)
    )


    ---------------------------
          24) enforce minimum delay

    Events emitted during test:
    ---------------------------

    AccessControl.RoleAdminChanged(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      account: <indexed> 0x6f380b8Ac0B9BBa76fe4bbb9f1665905e5dDD948 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1 (type: bytes32),
      account: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63 (type: bytes32),
      account: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    TimelockController.MinDelayChange(
      oldDuration: 0 (type: uint256),
      newDuration: 86400 (type: uint256)
    )


    ---------------------------
        execute
          25) revert if operation is not scheduled

    Events emitted during test:
    ---------------------------

    AccessControl.RoleAdminChanged(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      account: <indexed> 0x154b77C4273288fFbA20639edcDEf4DA829E5B95 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1 (type: bytes32),
      account: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63 (type: bytes32),
      account: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    TimelockController.MinDelayChange(
      oldDuration: 0 (type: uint256),
      newDuration: 86400 (type: uint256)
    )


    ---------------------------
          with scheduled operation
            26) revert if execution comes too early 1/2

    Events emitted during test:
    ---------------------------

    AccessControl.RoleAdminChanged(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      account: <indexed> 0x97Dbb93a30f1e4dfb94bE37A2e8c60f773464dec (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1 (type: bytes32),
      account: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63 (type: bytes32),
      account: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    TimelockController.MinDelayChange(
      oldDuration: 0 (type: uint256),
      newDuration: 86400 (type: uint256)
    )

    TimelockController.CallScheduled(
      id: <indexed> 0x8537b9b52849981845c6ae6e5010a31c83bbf0ae08f0a9a51f4b59e372f2e897 (type: bytes32),
      index: <indexed> 0 (type: uint256),
      target: 0xAe22104DCD970750610E6FE15E623468A98b15f7 (type: address),
      value: 0 (type: uint256),
      data: hex'13e414de' (type: bytes),
      predecessor: 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      delay: 86400 (type: uint256)
    )


    ---------------------------
            27) revert if execution comes too early 2/2

    Events emitted during test:
    ---------------------------

    AccessControl.RoleAdminChanged(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      account: <indexed> 0x11Cef45A6e9f5E46c17b2Bef305C8055Af3bC77E (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1 (type: bytes32),
      account: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63 (type: bytes32),
      account: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    TimelockController.MinDelayChange(
      oldDuration: 0 (type: uint256),
      newDuration: 86400 (type: uint256)
    )

    TimelockController.CallScheduled(
      id: <indexed> 0x8537b9b52849981845c6ae6e5010a31c83bbf0ae08f0a9a51f4b59e372f2e897 (type: bytes32),
      index: <indexed> 0 (type: uint256),
      target: 0xAe22104DCD970750610E6FE15E623468A98b15f7 (type: address),
      value: 0 (type: uint256),
      data: hex'13e414de' (type: bytes),
      predecessor: 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      delay: 86400 (type: uint256)
    )


    ---------------------------
            on time
              28) "before each" hook for "executor can reveal"
      batch
        schedule
          29) proposer can schedule

    Events emitted during test:
    ---------------------------

    AccessControl.RoleAdminChanged(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      account: <indexed> 0xCdC7E0b2C44ACc36956Fed57575c6b82115803f8 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1 (type: bytes32),
      account: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63 (type: bytes32),
      account: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    TimelockController.MinDelayChange(
      oldDuration: 0 (type: uint256),
      newDuration: 86400 (type: uint256)
    )

    TimelockController.CallScheduled(
      id: <indexed> 0x3cb8aca3a43af8ea4dc26ea816a4b779ac2b958377645214640ba8429e5e9ae1 (type: bytes32),
      index: <indexed> 0 (type: uint256),
      target: 0xEd912250835c812D4516BBD80BdaEA1bB63a293C (type: address),
      value: 0 (type: uint256),
      data: hex'2fcb7a88' (type: bytes),
      predecessor: 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      delay: 86400 (type: uint256)
    )

    TimelockController.CallScheduled(
      id: <indexed> 0x3cb8aca3a43af8ea4dc26ea816a4b779ac2b958377645214640ba8429e5e9ae1 (type: bytes32),
      index: <indexed> 1 (type: uint256),
      target: 0xEd912250835c812D4516BBD80BdaEA1bB63a293C (type: address),
      value: 0 (type: uint256),
      data: hex'2fcb7a88' (type: bytes),
      predecessor: 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      delay: 86400 (type: uint256)
    )

    TimelockController.CallScheduled(
      id: <indexed> 0x3cb8aca3a43af8ea4dc26ea816a4b779ac2b958377645214640ba8429e5e9ae1 (type: bytes32),
      index: <indexed> 2 (type: uint256),
      target: 0xEd912250835c812D4516BBD80BdaEA1bB63a293C (type: address),
      value: 0 (type: uint256),
      data: hex'2fcb7a88' (type: bytes),
      predecessor: 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      delay: 86400 (type: uint256)
    )

    TimelockController.CallScheduled(
      id: <indexed> 0x3cb8aca3a43af8ea4dc26ea816a4b779ac2b958377645214640ba8429e5e9ae1 (type: bytes32),
      index: <indexed> 3 (type: uint256),
      target: 0xEd912250835c812D4516BBD80BdaEA1bB63a293C (type: address),
      value: 0 (type: uint256),
      data: hex'2fcb7a88' (type: bytes),
      predecessor: 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      delay: 86400 (type: uint256)
    )

    TimelockController.CallScheduled(
      id: <indexed> 0x3cb8aca3a43af8ea4dc26ea816a4b779ac2b958377645214640ba8429e5e9ae1 (type: bytes32),
      index: <indexed> 4 (type: uint256),
      target: 0xEd912250835c812D4516BBD80BdaEA1bB63a293C (type: address),
      value: 0 (type: uint256),
      data: hex'2fcb7a88' (type: bytes),
      predecessor: 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      delay: 86400 (type: uint256)
    )

    TimelockController.CallScheduled(
      id: <indexed> 0x3cb8aca3a43af8ea4dc26ea816a4b779ac2b958377645214640ba8429e5e9ae1 (type: bytes32),
      index: <indexed> 5 (type: uint256),
      target: 0xEd912250835c812D4516BBD80BdaEA1bB63a293C (type: address),
      value: 0 (type: uint256),
      data: hex'2fcb7a88' (type: bytes),
      predecessor: 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      delay: 86400 (type: uint256)
    )

    TimelockController.CallScheduled(
      id: <indexed> 0x3cb8aca3a43af8ea4dc26ea816a4b779ac2b958377645214640ba8429e5e9ae1 (type: bytes32),
      index: <indexed> 6 (type: uint256),
      target: 0xEd912250835c812D4516BBD80BdaEA1bB63a293C (type: address),
      value: 0 (type: uint256),
      data: hex'2fcb7a88' (type: bytes),
      predecessor: 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      delay: 86400 (type: uint256)
    )

    TimelockController.CallScheduled(
      id: <indexed> 0x3cb8aca3a43af8ea4dc26ea816a4b779ac2b958377645214640ba8429e5e9ae1 (type: bytes32),
      index: <indexed> 7 (type: uint256),
      target: 0xEd912250835c812D4516BBD80BdaEA1bB63a293C (type: address),
      value: 0 (type: uint256),
      data: hex'2fcb7a88' (type: bytes),
      predecessor: 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      delay: 86400 (type: uint256)
    )


    ---------------------------
          30) prevent overwritting active operation

    Events emitted during test:
    ---------------------------

    AccessControl.RoleAdminChanged(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      account: <indexed> 0x74D9613A8263B09f78bf9b95F3d40dF9a16f5472 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1 (type: bytes32),
      account: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63 (type: bytes32),
      account: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    TimelockController.MinDelayChange(
      oldDuration: 0 (type: uint256),
      newDuration: 86400 (type: uint256)
    )

    TimelockController.CallScheduled(
      id: <indexed> 0x3cb8aca3a43af8ea4dc26ea816a4b779ac2b958377645214640ba8429e5e9ae1 (type: bytes32),
      index: <indexed> 0 (type: uint256),
      target: 0xEd912250835c812D4516BBD80BdaEA1bB63a293C (type: address),
      value: 0 (type: uint256),
      data: hex'2fcb7a88' (type: bytes),
      predecessor: 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      delay: 86400 (type: uint256)
    )

    TimelockController.CallScheduled(
      id: <indexed> 0x3cb8aca3a43af8ea4dc26ea816a4b779ac2b958377645214640ba8429e5e9ae1 (type: bytes32),
      index: <indexed> 1 (type: uint256),
      target: 0xEd912250835c812D4516BBD80BdaEA1bB63a293C (type: address),
      value: 0 (type: uint256),
      data: hex'2fcb7a88' (type: bytes),
      predecessor: 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      delay: 86400 (type: uint256)
    )

    TimelockController.CallScheduled(
      id: <indexed> 0x3cb8aca3a43af8ea4dc26ea816a4b779ac2b958377645214640ba8429e5e9ae1 (type: bytes32),
      index: <indexed> 2 (type: uint256),
      target: 0xEd912250835c812D4516BBD80BdaEA1bB63a293C (type: address),
      value: 0 (type: uint256),
      data: hex'2fcb7a88' (type: bytes),
      predecessor: 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      delay: 86400 (type: uint256)
    )

    TimelockController.CallScheduled(
      id: <indexed> 0x3cb8aca3a43af8ea4dc26ea816a4b779ac2b958377645214640ba8429e5e9ae1 (type: bytes32),
      index: <indexed> 3 (type: uint256),
      target: 0xEd912250835c812D4516BBD80BdaEA1bB63a293C (type: address),
      value: 0 (type: uint256),
      data: hex'2fcb7a88' (type: bytes),
      predecessor: 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      delay: 86400 (type: uint256)
    )

    TimelockController.CallScheduled(
      id: <indexed> 0x3cb8aca3a43af8ea4dc26ea816a4b779ac2b958377645214640ba8429e5e9ae1 (type: bytes32),
      index: <indexed> 4 (type: uint256),
      target: 0xEd912250835c812D4516BBD80BdaEA1bB63a293C (type: address),
      value: 0 (type: uint256),
      data: hex'2fcb7a88' (type: bytes),
      predecessor: 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      delay: 86400 (type: uint256)
    )

    TimelockController.CallScheduled(
      id: <indexed> 0x3cb8aca3a43af8ea4dc26ea816a4b779ac2b958377645214640ba8429e5e9ae1 (type: bytes32),
      index: <indexed> 5 (type: uint256),
      target: 0xEd912250835c812D4516BBD80BdaEA1bB63a293C (type: address),
      value: 0 (type: uint256),
      data: hex'2fcb7a88' (type: bytes),
      predecessor: 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      delay: 86400 (type: uint256)
    )

    TimelockController.CallScheduled(
      id: <indexed> 0x3cb8aca3a43af8ea4dc26ea816a4b779ac2b958377645214640ba8429e5e9ae1 (type: bytes32),
      index: <indexed> 6 (type: uint256),
      target: 0xEd912250835c812D4516BBD80BdaEA1bB63a293C (type: address),
      value: 0 (type: uint256),
      data: hex'2fcb7a88' (type: bytes),
      predecessor: 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      delay: 86400 (type: uint256)
    )

    TimelockController.CallScheduled(
      id: <indexed> 0x3cb8aca3a43af8ea4dc26ea816a4b779ac2b958377645214640ba8429e5e9ae1 (type: bytes32),
      index: <indexed> 7 (type: uint256),
      target: 0xEd912250835c812D4516BBD80BdaEA1bB63a293C (type: address),
      value: 0 (type: uint256),
      data: hex'2fcb7a88' (type: bytes),
      predecessor: 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      delay: 86400 (type: uint256)
    )


    ---------------------------
          31) prevent non-proposer from commiting

    Events emitted during test:
    ---------------------------

    AccessControl.RoleAdminChanged(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      account: <indexed> 0x6Cf7c76152791bdEfC839090EAFdF603E6084156 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1 (type: bytes32),
      account: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63 (type: bytes32),
      account: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    TimelockController.MinDelayChange(
      oldDuration: 0 (type: uint256),
      newDuration: 86400 (type: uint256)
    )


    ---------------------------
          32) enforce minimum delay

    Events emitted during test:
    ---------------------------

    AccessControl.RoleAdminChanged(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      account: <indexed> 0x82082a77b6D3B106cfd44058cf7FD5a3cE30af54 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1 (type: bytes32),
      account: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63 (type: bytes32),
      account: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    TimelockController.MinDelayChange(
      oldDuration: 0 (type: uint256),
      newDuration: 86400 (type: uint256)
    )


    ---------------------------
        execute
          33) revert if operation is not scheduled

    Events emitted during test:
    ---------------------------

    AccessControl.RoleAdminChanged(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      account: <indexed> 0x9d458905d606D1F840D9cF0ED4ffA431A6614C98 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1 (type: bytes32),
      account: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63 (type: bytes32),
      account: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    TimelockController.MinDelayChange(
      oldDuration: 0 (type: uint256),
      newDuration: 86400 (type: uint256)
    )


    ---------------------------
          34) partial execution

    Events emitted during test:
    ---------------------------

    AccessControl.RoleAdminChanged(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      account: <indexed> 0x7fCaA6988279207Dfb78b8808FAaacE8Db741Ab1 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1 (type: bytes32),
      account: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63 (type: bytes32),
      account: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    TimelockController.MinDelayChange(
      oldDuration: 0 (type: uint256),
      newDuration: 86400 (type: uint256)
    )

    TimelockController.CallScheduled(
      id: <indexed> 0x12ca582e15f7bd0340bce5544a0a8ffaf2f25c5410ad2a14c6141249b6eb141b (type: bytes32),
      index: <indexed> 0 (type: uint256),
      target: 0x8Ba49dae7e276400797648b0D05E14527541923b (type: address),
      value: 0 (type: uint256),
      data: hex'3e6fec04' (type: bytes),
      predecessor: 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      delay: 86400 (type: uint256)
    )

    TimelockController.CallScheduled(
      id: <indexed> 0x12ca582e15f7bd0340bce5544a0a8ffaf2f25c5410ad2a14c6141249b6eb141b (type: bytes32),
      index: <indexed> 1 (type: uint256),
      target: 0x8Ba49dae7e276400797648b0D05E14527541923b (type: address),
      value: 0 (type: uint256),
      data: hex'3bcfaa14' (type: bytes),
      predecessor: 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      delay: 86400 (type: uint256)
    )

    TimelockController.CallScheduled(
      id: <indexed> 0x12ca582e15f7bd0340bce5544a0a8ffaf2f25c5410ad2a14c6141249b6eb141b (type: bytes32),
      index: <indexed> 2 (type: uint256),
      target: 0x8Ba49dae7e276400797648b0D05E14527541923b (type: address),
      value: 0 (type: uint256),
      data: hex'3e6fec04' (type: bytes),
      predecessor: 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      delay: 86400 (type: uint256)
    )


    ---------------------------
          with scheduled operation
            35) revert if execution comes too early 1/2

    Events emitted during test:
    ---------------------------

    AccessControl.RoleAdminChanged(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleAdminChanged(
      role: <indexed> 0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63 (type: bytes32),
      previousAdminRole: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      newAdminRole: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5 (type: bytes32),
      account: <indexed> 0xEa1dC163dc21A5e49448844b759A8074f92A0Ca2 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1 (type: bytes32),
      account: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63 (type: bytes32),
      account: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    TimelockController.MinDelayChange(
      oldDuration: 0 (type: uint256),
      newDuration: 86400 (type: uint256)
    )

    TimelockController.CallScheduled(
      id: <indexed> 0x3c84508c1189b877eb6b181da50058d350bf60e2049f402d46de7c00f28a696e (type: bytes32),
      index: <indexed> 0 (type: uint256),
      target: 0x76E53CcEb05131Ef5248553bEBDb8F70536830b1 (type: address),
      value: 0 (type: uint256),
      data: hex'58a60f63' (type: bytes),
      predecessor: 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      delay: 86400 (type: uint256)
    )

    TimelockController.CallScheduled(
      id: <indexed> 0x3c84508c1189b877eb6b181da50058d350bf60e2049f402d46de7c00f28a696e (type: bytes32),
      index: <indexed> 1 (type: uint256),
      target: 0x76E53CcEb05131Ef5248553bEBDb8F70536830b1 (type: address),
      value: 0 (type: uint256),
      data: hex'58a60f63' (type: bytes),
      predecessor: 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      delay: 86400 (type: uint256)
    )

    TimelockController.CallScheduled(
      id: <indexed> 0x3c84508c1189b877eb6b181da50058d350bf60e2049f402d46de7c00f28a696e (type: bytes32),
      index: <indexed> 2 (type: uint256),
      target: 0x76E53CcEb05131Ef5248553bEBDb8F70536830b1 (type: address),
      value: 0 (type: uint256),
      data: hex'58a60f63' (type: bytes),
      predecessor: 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      delay: 86400 (type: uint256)
    )

    TimelockController.CallScheduled(
      id: <indexed> 0x3c84508c1189b877eb6b181da50058d350bf60e2049f402d46de7c00f28a696e (type: bytes32),
      index: <indexed> 3 (type: uint256),
      target: 0x76E53CcEb05131Ef5248553bEBDb8F70536830b1 (type: address),
      value: 0 (type: uint256),
      data: hex'58a60f63' (type: bytes),
      predecessor: 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      delay: 86400 (type: uint256)
    )

    TimelockController.CallScheduled(
      id: <indexed> 0x3c84508c1189b877eb6b181da50058d350bf60e2049f402d46de7c00f28a696e (type: bytes32),
      index: <indexed> 4 (type: uint256),
      target: 0x76E53CcEb05131Ef5248553bEBDb8F70536830b1 (type: address),
      value: 0 (type: uint256),
      data: hex'58a60f63' (type: bytes),
      predecessor: 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      delay: 86400 (type: uint256)
    )

    TimelockController.CallScheduled(
      id: <indexed> 0x3c84508c1189b877eb6b181da50058d350bf60e2049f402d46de7c00f28a696e (type: bytes32),
      index: <indexed> 5 (type: uint256),
      target: 0x76E53CcEb05131Ef5248553bEBDb8F70536830b1 (type: address),
      value: 0 (type: uint256),
      data: hex'58a60f63' (type: bytes),
      predecessor: 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      delay: 86400 (type: uint256)
    )

    TimelockController.CallScheduled(
      id: <indexed> 0x3c84508c1189b877eb6b181da50058d350bf60e2049f402d46de7c00f28a696e (type: bytes32),
      index: <indexed> 6 (type: uint256),
      target: 0x76E53CcEb05131Ef5248553bEBDb8F70536830b1 (type: address),
      value: 0 (type: uint256),
      data: hex'58a60f63' (type: bytes),
      predecessor: 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      delay: 86400 (type: uint256)
    )

    TimelockController.CallScheduled(
      id: <indexed> 0x3c84508c1189b877eb6b181da50058d350bf60e2049f402d46de7c00f28a696e (type: bytes32),
      index: <indexed> 7 (type: uint256),
      target: 0x76E53CcEb05131Ef5248553bEBDb8F70536830b1 (type: address),
      value: 0 (type: uint256),
      data: hex'58a60f63' (type: bytes),
      predecessor: 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      delay: 86400 (type: uint256)
    )


    ---------------------------
            36) "before each" hook for "revert if execution comes too early 2/2"

  Contract: ECDSA
    recover with invalid signature
      37) with short signature
    > No events were emitted
      38) with long signature
    > No events were emitted
    recover with valid signature
      with v0 signature
        with 00 as version value
          39) reverts
    > No events were emitted
        with 27 as version value
          40) works
    > No events were emitted
        with wrong version
          41) reverts
    > No events were emitted
      with v1 signature
        with 01 as version value
          42) reverts
    > No events were emitted
        with 28 as version value
          43) works
    > No events were emitted
        with wrong version
          44) reverts
    > No events were emitted
      with high-s value signature
        45) reverts
    > No events were emitted
      using web3.eth.sign
        with correct signature
          46) returns signer address
    > No events were emitted
        with wrong message
          47) returns a different address
    > No events were emitted
        with invalid signature
          48) reverts
    > No events were emitted
    toEthSignedMessage
      49) should prefix hashes correctly
    > No events were emitted

  Contract: MerkleProof
    verify
      50) "before each" hook: before test for "returns true for a valid Merkle proof"

  Contract: EIP712
    51) "before each" hook: deploying for "domain separator"

  Contract: ERC20Permit
    52) "before each" hook for "initial nonce is 0"

  Contract: ERC165
    53) does not allow 0xffffffff
    > No events were emitted
    Contract interface
      ERC165
        ERC165's supportsInterface(bytes4)
          ✓ uses less than 30k gas [skip-on-coverage]
          54) claims support
    > No events were emitted
        supportsInterface(bytes4)
          ✓ has to be implemented

  Contract: ERC165Checker
    ERC165 not supported
      55) does not support ERC165
    > No events were emitted
      56) does not support mock interface via supportsInterface
    > No events were emitted
      57) does not support mock interface via supportsAllInterfaces
    > No events were emitted
      58) does not support mock interface via getSupportedInterfaces
    > No events were emitted
    ERC165 supported
      59) supports ERC165
    > No events were emitted
      60) does not support mock interface via supportsInterface
    > No events were emitted
      61) does not support mock interface via supportsAllInterfaces
    > No events were emitted
      62) does not support mock interface via getSupportedInterfaces
    > No events were emitted
    ERC165 and single interface supported
      63) supports ERC165
    > No events were emitted
      64) supports mock interface via supportsInterface
    > No events were emitted
      65) supports mock interface via supportsAllInterfaces
    > No events were emitted
      66) supports mock interface via getSupportedInterfaces
    > No events were emitted
    ERC165 and many interfaces supported
      67) supports ERC165
    > No events were emitted
      68) supports each interfaceId via supportsInterface
    > No events were emitted
      69) supports all interfaceIds via supportsAllInterfaces
    > No events were emitted
      70) supports none of the interfaces queried via supportsAllInterfaces
    > No events were emitted
      71) supports not all of the interfaces queried via supportsAllInterfaces
    > No events were emitted
      72) supports all interfaceIds via getSupportedInterfaces
    > No events were emitted
      73) supports none of the interfaces queried via getSupportedInterfaces
    > No events were emitted
      74) supports not all of the interfaces queried via getSupportedInterfaces
    > No events were emitted
    account address does not support ERC165
      75) does not support ERC165
    > No events were emitted
      76) does not support mock interface via supportsInterface
    > No events were emitted
      77) does not support mock interface via supportsAllInterfaces
    > No events were emitted
      78) does not support mock interface via getSupportedInterfaces
    > No events were emitted

  Contract: ERC1820Implementer
    with no registered interfaces
      79) "before each" hook for "returns false when interface implementation is queried"

  Contract: Math
    max
      80) is correctly detected in first argument position
    > No events were emitted
      81) is correctly detected in second argument position
    > No events were emitted
    min
      82) is correctly detected in first argument position
    > No events were emitted
      83) is correctly detected in second argument position
    > No events were emitted
    average
      84) is correctly calculated with two odd numbers
    > No events were emitted
      85) is correctly calculated with two even numbers
    > No events were emitted
      86) is correctly calculated with one even and one odd number
    > No events were emitted

  Contract: SafeMath
    with flag
      add
        ✓ adds correctly
Error: Returned error: VM exception: OutOfGasIntrinsic
Error: Returned error: VM exception: OutOfGasIntrinsic
        87) "before each" hook for "reverts on addition overflow"

  Contract: SignedSafeMath
    add
      88) "before each" hook for "adds correctly if it does not overflow and the result is positive"
      89) "before each" hook for "reverts on addition overflow"

  Contract: ConditionalEscrow
    when withdrawal is allowed
      as an escrow
        deposits
          90) can accept a single deposit

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
          ✓ can accept an empty deposit (132ms)
          91) only the owner can deposit

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
          92) emits a deposited event

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
          93) can add multiple deposits on a single account

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
          94) can track deposits to multiple accounts

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
        withdrawals
          95) can withdraw payments

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
          96) can do an empty withdrawal

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
          97) only the owner can withdraw

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
          98) emits a withdrawn event

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
    when withdrawal is disallowed
      99) reverts on withdrawals

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------

  Contract: Escrow
    as an escrow
      deposits
        100) can accept a single deposit

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
        ✓ can accept an empty deposit (136ms)
        101) only the owner can deposit

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
        102) emits a deposited event

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
        103) can add multiple deposits on a single account

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
        104) can track deposits to multiple accounts

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      withdrawals
        105) can withdraw payments

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
        106) can do an empty withdrawal

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
        107) only the owner can withdraw

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
        108) emits a withdrawn event

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------

  Contract: RefundEscrow
    109) "before each" hook: before test for "requires a non-null beneficiary"

  Contract: PaymentSplitter
    110) "before each" hook: before test for "rejects an empty set of payees"

  Contract: PullPayment
    payments
      111) can record an async payment correctly

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x1c6C623725a735F04f700Ef587e6B237b2C759A2 (type: address)
    )


    ---------------------------
      112) can add multiple balances on one account

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7C2021Bc03e2D68C6E580e70aA98f41EF5498E0E (type: address)
    )


    ---------------------------
      113) can add balances on multiple accounts

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x120b1411df89f2AE3F036f102c3C3C51495836e5 (type: address)
    )


    ---------------------------
    withdrawPayments
      114) "before each" hook for "can withdraw payment"

  Contract: ERC1155PresetMinterPauser
    115) deployer has the default admin role

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
    116) deployer has the minter role

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
    117) deployer has the pauser role

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
    118) minter and pauser role admin is the default admin

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
    minting
      119) deployer can mint tokens

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    IERC1155.TransferSingle(
      operator: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      id: 845 (type: uint256),
      value: 5000 (type: uint256)
    )


    ---------------------------
      120) other accounts cannot mint tokens

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
    batched minting
      121) deployer can batch mint tokens

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    IERC1155.TransferBatch(
      operator: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      ids: [ 845, 48324 ] (type: uint256[]),
      values: [ 5000, 77875 ] (type: uint256[])
    )


    ---------------------------
      122) other accounts cannot batch mint tokens

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
    pausing
      123) deployer can pause

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    Pausable.Paused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      124) deployer can unpause

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    Pausable.Paused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    Pausable.Unpaused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      125) cannot mint while paused

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    Pausable.Paused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      126) other accounts cannot pause

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
    burning
      127) holders can burn their tokens

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    IERC1155.TransferSingle(
      operator: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      id: 845 (type: uint256),
      value: 5000 (type: uint256)
    )

    IERC1155.TransferSingle(
      operator: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      from: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      to: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      id: 845 (type: uint256),
      value: 4999 (type: uint256)
    )


    ---------------------------

  Contract: ERC20PresetFixedSupply
    128) "before all" hook for "deployer has the balance equal to initial supply"

  Contract: ERC20PresetMinterPauser
    129) deployer has the default admin role

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
    130) deployer has the minter role

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
    131) deployer has the pauser role

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
    132) minter and pauser role admin is the default admin

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
    minting
      133) deployer can mint tokens

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      value: 5000 (type: uint256)
    )


    ---------------------------
      134) other accounts cannot mint tokens

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
    pausing
      135) deployer can pause

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    Pausable.Paused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      136) deployer can unpause

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    Pausable.Paused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    Pausable.Unpaused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      137) cannot mint while paused

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    Pausable.Paused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      138) other accounts cannot pause

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
    burning
      139) holders can burn their tokens

    Events emitted during test:
    ---------------------------

    AccessControl.RoleGranted(
      role: <indexed> 0x0000000000000000000000000000000000000000000000000000000000000000 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6 (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    AccessControl.RoleGranted(
      role: <indexed> 0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a (type: bytes32),
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      sender: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------

  Contract: ERC721PresetMinterPauserAutoId
    140) "before each" hook for "token has correct name"

  Contract: ERC777PresetFixedSupply
    141) "before all" hook for "returns the name"

  Contract: BeaconProxy
    142) upgrade a proxy by upgrading its beacon

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
    143) upgrade 2 proxies by upgrading shared beacon

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
    bad beacon is not accepted
      144) non-contract beacon
    > No events were emitted
    145) non-compliant beacon
    > No events were emitted
      146) non-contract implementation
    > No events were emitted
    initialization
      147) no initialization

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      148) non-payable initialization

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      149) payable initialization

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      150) reverting initialization

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------

  Contract: Clones
    clone
      initialization without parameters
        non payable
          when not sending balance
            151) "before each" hook: creating proxy for "initializes the proxy"
          when sending some balance
            152) reverts
    > No events were emitted
        payable
          when not sending balance
            153) "before each" hook: creating proxy for "initializes the proxy"
          when sending some balance
            154) "before each" hook: creating proxy for "initializes the proxy"
      initialization with parameters
        non payable
          when not sending balance
            155) "before each" hook: creating proxy for "initializes the proxy"
          when sending some balance
            156) reverts
    > No events were emitted
        payable
          when not sending balance
            157) "before each" hook: creating proxy for "initializes the proxy"
          when sending some balance
            158) "before each" hook: creating proxy for "initializes the proxy"
    cloneDeterministic
      159) address already used

    Events emitted during test:
    ---------------------------

    ClonesMock.NewInstance(
      instance: 0x0d6217d17BC7f6FFa8539eFa0705dA90d8880964 (type: address)
    )


    ---------------------------
      160) address prediction
    > No events were emitted
      initialization without parameters
        non payable
          when not sending balance
            161) "before each" hook: creating proxy for "initializes the proxy"
          when sending some balance
            162) reverts
    > No events were emitted
        payable
          when not sending balance
            163) "before each" hook: creating proxy for "initializes the proxy"
          when sending some balance
            164) "before each" hook: creating proxy for "initializes the proxy"
      initialization with parameters
        non payable
          when not sending balance
            165) "before each" hook: creating proxy for "initializes the proxy"
          when sending some balance
            166) reverts
    > No events were emitted
        payable
          when not sending balance
            167) "before each" hook: creating proxy for "initializes the proxy"
          when sending some balance
            168) "before each" hook: creating proxy for "initializes the proxy"

  Contract: Initializable
    basic testing without inheritance
      before initialize
        169) initializer has not run
    > No events were emitted
      after initialize
        170) initializer has run
    > No events were emitted
        171) initializer does not run again
    > No events were emitted
      after nested initialize
        172) initializer has run
    > No events were emitted
    complex testing with inheritance
      173) initializes human
    > No events were emitted
      174) initializes mother
    > No events were emitted
      175) initializes gramps
    > No events were emitted
      176) initializes father
    > No events were emitted
      177) initializes child
    > No events were emitted

  Contract: ProxyAdmin
    178) has an owner

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
    #getProxyAdmin
      179) returns proxyAdmin as admin of the proxy

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
    #changeProxyAdmin
      180) fails to change proxy admin if its not the proxy owner

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      181) changes proxy admin

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    TransparentUpgradeableProxy.AdminChanged(
      previousAdmin: 0xdF9641fEf5670ccBF5B5C30515fE62075b568507 (type: address),
      newAdmin: 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address)
    )


    ---------------------------
    #getProxyImplementation
      182) returns proxy implementation address

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
    #upgrade
      with unauthorized account
        183) fails to upgrade

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      with authorized account
        184) upgrades implementation

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    UpgradeableProxy.Upgraded(
      implementation: <indexed> 0xE346e389fc138f27616DDe7C1f4AF8cC9E1956A1 (type: address)
    )


    ---------------------------
    #upgradeAndCall
      with unauthorized account
        185) fails to upgrade

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      with authorized account
        with invalid callData
          ✓ fails to upgrade (241ms)
        with valid callData
          186) upgrades implementation

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    UpgradeableProxy.Upgraded(
      implementation: <indexed> 0xE346e389fc138f27616DDe7C1f4AF8cC9E1956A1 (type: address)
    )


    ---------------------------

  Contract: TransparentUpgradeableProxy
    187) cannot be initialized with a non-contract address
    > No events were emitted
    without initialization
      when not sending balance
        188) sets the implementation address
    > No events were emitted
        189) initializes the proxy
    > No events were emitted
        ✓ has expected balance
      when sending some balance
        190) sets the implementation address
    > No events were emitted
        191) initializes the proxy
    > No events were emitted
        192) has expected balance
    > No events were emitted
    initialization without parameters
      non payable
        when not sending balance
          193) sets the implementation address
    > No events were emitted
          194) initializes the proxy
    > No events were emitted
          ✓ has expected balance
        when sending some balance
          195) reverts
    > No events were emitted
      payable
        when not sending balance
          196) sets the implementation address
    > No events were emitted
          197) initializes the proxy
    > No events were emitted
          ✓ has expected balance
        when sending some balance
          198) sets the implementation address
    > No events were emitted
          199) initializes the proxy
    > No events were emitted
          200) has expected balance
    > No events were emitted
    initialization with parameters
      non payable
        when not sending balance
          201) sets the implementation address
    > No events were emitted
          202) initializes the proxy
    > No events were emitted
          ✓ has expected balance
        when sending some balance
          203) reverts
    > No events were emitted
      payable
        when not sending balance
          204) sets the implementation address
    > No events were emitted
          205) initializes the proxy
    > No events were emitted
          ✓ has expected balance
        when sending some balance
          206) sets the implementation address
    > No events were emitted
          207) initializes the proxy
    > No events were emitted
          208) has expected balance
   > No events were emitted
      reverting initialization
        209) reverts
    > No events were emitted
    implementation
      210) returns the current implementation address
    > No events were emitted
      211) delegates to the implementation
    > No events were emitted
    upgradeTo
      when the sender is the admin
        when the given implementation is different from the current one
          212) upgrades to the requested implementation

    Events emitted during test:
    ---------------------------

    UpgradeableProxy.Upgraded(
      implementation: <indexed> 0x80A65985c37A53b8E7D1679f5f91B7538E2bC572 (type: address)
    )


    ---------------------------
          ✓ emits an event (555ms)
        when the given implementation is the zero address
          213) reverts
    > No events were emitted
      when the sender is not the admin
        214) reverts
    > No events were emitted
    upgradeToAndCall
      without migrations
        when the call does not fail
          when the sender is the admin
            215) upgrades to the requested implementation

    Events emitted during test:
    ---------------------------

    UpgradeableProxy.Upgraded(
      implementation: <indexed> 0x030f2015E47D6367f3EC0DeC014eB6563992a6eD (type: address)
    )


    ---------------------------
            ✓ emits an event
            216) calls the initializer function

    Events emitted during test:
    ---------------------------

    UpgradeableProxy.Upgraded(
      implementation: <indexed> 0x760730fd06aBA90dee431aB08828a205c1Dd157E (type: address)
    )


    ---------------------------
            ✓ sends given value to the proxy
            - uses the storage of the proxy
          when the sender is not the admin
            217) reverts
    > No events were emitted
        when the call does fail
          ✓ reverts (625ms)
      with migrations
        when the sender is the admin
          when upgrading to V1
            218) upgrades to the requested version and emits an event

    Events emitted during test:
    ---------------------------

    UpgradeableProxy.Upgraded(
      implementation: <indexed> 0xfc51995A2e24243237E917D5cd31c878ccef037E (type: address)
    )


    ---------------------------
            219) calls the 'initialize' function and sends given value to the proxy

    Events emitted during test:
    ---------------------------

    UpgradeableProxy.Upgraded(
      implementation: <indexed> 0x1298AE6cF261e46Eb665788CEddb1111281b21aF (type: address)
    )


    ---------------------------
            when upgrading to V2
              220) upgrades to the requested version and emits an event

    Events emitted during test:
    ---------------------------

    UpgradeableProxy.Upgraded(
      implementation: <indexed> 0xF38f8196ecdD249E65ba3e4fDd903Cc091BD59a5 (type: address)
    )

    UpgradeableProxy.Upgraded(
      implementation: <indexed> 0xA81421137F3E697F793D7A0D10B143cc9f716f4f (type: address)
    )


    ---------------------------
              221) calls the 'migrate' function and sends given value to the proxy

    Events emitted during test:
    ---------------------------

    UpgradeableProxy.Upgraded(
      implementation: <indexed> 0xed5D74CAeeA7F56cc29C565021Ab4aB5BE117EDe (type: address)
    )

    UpgradeableProxy.Upgraded(
      implementation: <indexed> 0xB9ecA28B6a198C503F5cd4EcA7C39B79Ba22534C (type: address)
    )


    ---------------------------
              when upgrading to V3
                222) upgrades to the requested version and emits an event

    Events emitted during test:
    ---------------------------

    UpgradeableProxy.Upgraded(
      implementation: <indexed> 0xb554f81aaE0094A7E16a78C2068DB1731C83C736 (type: address)
    )

    UpgradeableProxy.Upgraded(
      implementation: <indexed> 0xE3557ba77882c5D552c3E99F5f0797c6a11F4496 (type: address)
    )

    UpgradeableProxy.Upgraded(
      implementation: <indexed> 0x6CFF723EBc3D5187EC32C8ccCd5e1F72D17D6002 (type: address)
    )


    ---------------------------
                223) calls the 'migrate' function and sends given value to the proxy

    Events emitted during test:
    ---------------------------

    UpgradeableProxy.Upgraded(
      implementation: <indexed> 0xCc724cAB5841A4c1F52173281Ad4c03E96376dD8 (type: address)
    )

    UpgradeableProxy.Upgraded(
      implementation: <indexed> 0xf37A06829Aff111c03E4b8C0629c07Cf57c48760 (type: address)
    )

    UpgradeableProxy.Upgraded(
      implementation: <indexed> 0xe6Ba282a6430067811e09BF5F95176b4e9965319 (type: address)
    )


    ---------------------------
        when the sender is not the admin
          224) reverts
    > No events were emitted
    changeAdmin
      when the new proposed admin is not the zero address
        when the sender is the admin
          225) assigns new proxy admin

    Events emitted during test:
    ---------------------------

    TransparentUpgradeableProxy.AdminChanged(
      previousAdmin: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      newAdmin: 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address)
    )


    ---------------------------
          ✓ emits an event
        when the sender is not the admin
          226) reverts
    > No events were emitted
      when the new proposed admin is the zero address
        227) reverts
    > No events were emitted
    storage
      228) should store the implementation address in specified location
    > No events were emitted
      229) should store the admin proxy in specified location
    > No events were emitted
    transparent proxy
      230) proxy admin cannot call delegated functions
    > No events were emitted
      when function names clash
        231) when sender is proxy admin should run the proxy function
    > No events were emitted
        232) when sender is other should delegate to implementation
    > No events were emitted
    regression
      233) should add new function
    > No events were emitted
      234) should remove function
    > No events were emitted
      235) should change function signature
    > No events were emitted
      236) should add fallback function

    Events emitted during test:
    ---------------------------

    UpgradeableProxy.Upgraded(
      implementation: <indexed> 0x5D9Bc37f3a8d4203C919F42EE23a4bA9f729D2C9 (type: address)
    )


    ---------------------------
      237) should remove fallback function

    Events emitted during test:
    ---------------------------

    UpgradeableProxy.Upgraded(
      implementation: <indexed> 0xea5f66D4243891fDC0a3bb2c6Fd5F01644926248 (type: address)
    )


    ---------------------------

  Contract: UpgradeableBeacon
  238) cannot be created with non-contract implementation
    > No events were emitted
    once deployed
      239) returns implementation

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      240) can be upgraded by the owner

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    UpgradeableBeacon.Upgraded(
      implementation: <indexed> 0xE2696BC1Fa1C7Bb9decaba76eDF84477D0bfbd7c (type: address)
    )


    ---------------------------
      241) cannot be upgraded to a non-contract

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      242) cannot be upgraded by other account

    Events emitted during test:
    ---------------------------

    Ownable.OwnershipTransferred(
      previousOwner: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      newOwner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------

   Contract: UpgradeableProxy
    243) cannot be initialized with a non-contract address
    > No events were emitted
    without initialization
      when not sending balance
        244) sets the implementation address
    > No events were emitted
        245) initializes the proxy
    > No events were emitted
        ✓ has expected balance
      when sending some balance
        246) sets the implementation address
    > No events were emitted
        247) initializes the proxy
    > No events were emitted
        248) has expected balance
    > No events were emitted
    initialization without parameters
      non payable
        when not sending balance
          249) sets the implementation address
    > No events were emitted
          250) initializes the proxy
    > No events were emitted
          ✓ has expected balance
        when sending some balance
          251) reverts
    > No events were emitted
      payable
        when not sending balance
          252) sets the implementation address
    > No events were emitted
          253) initializes the proxy
    > No events were emitted
          ✓ has expected balance
        when sending some balance
          254) sets the implementation address
    > No events were emitted
          255) initializes the proxy
    > No events were emitted
          256) has expected balance
    > No events were emitted
    initialization with parameters
      non payable
        when not sending balance
          257) sets the implementation address
    > No events were emitted
          258) initializes the proxy
    > No events were emitted
          ✓ has expected balance
        when sending some balance
          259) reverts
    > No events were emitted
      payable
        when not sending balance
          260) sets the implementation address
    > No events were emitted
          261) initializes the proxy
    > No events were emitted
          ✓ has expected balance
        when sending some balance
          262) sets the implementation address
    > No events were emitted
          263) initializes the proxy
    > No events were emitted
          264) has expected balance
    > No events were emitted
      reverting initialization
      265) reverts
    > No events were emitted

  Contract: ERC1155
    like an ERC1155
      balanceOf
        266) reverts when queried about the zero address
    > No events were emitted
        when accounts don't own tokens
          267) returns zero for given addresses
    > No events were emitted
        when accounts own some tokens
          268) "before each" hook for "returns the amount of tokens owned by the given addresses"
      balanceOfBatch
        269) reverts when input arrays don't match up
    > No events were emitted
        270) reverts when one of the addresses is the zero address
    > No events were emitted
        when accounts don't own tokens
          271) returns zeros for each account
    > No events were emitted
        when accounts own some tokens
          272) "before each" hook for "returns amounts owned by each account in order passed"
      setApprovalForAll
        273) "before each" hook for "sets approval status which can be queried via isApprovedForAll"
      safeTransferFrom
        274) "before each" hook for "reverts when transferring more than balance"
      safeBatchTransferFrom
        275) "before each" hook for "reverts when transferring amount more than any of balances"
      Contract interface
        ERC165
          ERC165's supportsInterface(bytes4)
            ✓ uses less than 30k gas [skip-on-coverage]
            276) claims support
    > No events were emitted
          supportsInterface(bytes4)
            ✓ has to be implemented
        ERC1155
          ERC165's supportsInterface(bytes4)
            ✓ uses less than 30k gas [skip-on-coverage]
            277) claims support
    > No events were emitted
          balanceOf(address,uint256)
            ✓ has to be implemented
          balanceOfBatch(address[],uint256[])
            ✓ has to be implemented
          setApprovalForAll(address,bool)
            ✓ has to be implemented
          isApprovedForAll(address,address)
            ✓ has to be implemented
          safeTransferFrom(address,address,uint256,uint256,bytes)
            ✓ has to be implemented
          safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)
            ✓ has to be implemented
    internal functions
      _mint
        278) reverts with a zero destination address
    > No events were emitted
        with minted tokens
          ✓ emits a TransferSingle event
          279) credits the minted amount of tokens

    Events emitted during test:
    ---------------------------

    IERC1155.TransferSingle(
      operator: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      id: 1990 (type: uint256),
      value: 9001 (type: uint256)
    )


    ---------------------------
      _mintBatch
        280) reverts with a zero destination address
    > No events were emitted
        281) reverts if length of inputs do not match
    > No events were emitted
        with minted batch of tokens
          ✓ emits a TransferBatch event
          282) credits the minted batch of tokens

    Events emitted during test:
    ---------------------------

    IERC1155.TransferBatch(
      operator: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      ids: [ 2000, 2010, 2020 ] (type: uint256[]),
      values: [ 5000, 10000, 42195 ] (type: uint256[])
    )


    ---------------------------
      _burn
        283) reverts when burning the zero account's tokens
    > No events were emitted
        284) reverts when burning a non-existent token id
    > No events were emitted
        285) reverts when burning more than available tokens

    Events emitted during test:
    ---------------------------

    IERC1155.TransferSingle(
      operator: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      id: 1990 (type: uint256),
      value: 9001 (type: uint256)
    )


    ---------------------------
        with minted-then-burnt tokens
          ✓ emits a TransferSingle event
          286) accounts for both minting and burning

    Events emitted during test:
    ---------------------------

    IERC1155.TransferSingle(
      operator: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      id: 1990 (type: uint256),
      value: 9001 (type: uint256)
    )

    IERC1155.TransferSingle(
      operator: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      from: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      to: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      id: 1990 (type: uint256),
      value: 3000 (type: uint256)
    )


    ---------------------------
      _burnBatch
        287) reverts when burning the zero account's tokens
    > No events were emitted
        288) reverts if length of inputs do not match
    > No events were emitted
        289) reverts when burning a non-existent token id
    > No events were emitted
        with minted-then-burnt tokens
          ✓ emits a TransferBatch event
          290) accounts for both minting and burning

    Events emitted during test:
    ---------------------------

    IERC1155.TransferBatch(
      operator: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      ids: [ 2000, 2010, 2020 ] (type: uint256[]),
      values: [ 5000, 10000, 42195 ] (type: uint256[])
    )

    IERC1155.TransferBatch(
      operator: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      from: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      to: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      ids: [ 2000, 2010, 2020 ] (type: uint256[]),
      values: [ 5000, 9001, 195 ] (type: uint256[])
    )


    ---------------------------
    ERC1155MetadataURI
      ✓ emits no URI event in constructor
      291) sets the initial URI for all token types
    > No events were emitted
      _setURI
        ✓ emits no URI event (223ms)
        292) sets the new URI for all token types
    > No events were emitted

  Contract: ERC1155Burnable
    burn
      293) "before each" hook: before test for "holder can burn their tokens"

  Contract: ERC1155Holder
    294) receives ERC1155 tokens from a single ID

    Events emitted during test:
    ---------------------------

    IERC1155.TransferBatch(
      operator: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      ids: [ 1, 2, 3 ] (type: uint256[]),
      values: [ 1000, 2000, 3000 ] (type: uint256[])
    )

    IERC1155.TransferSingle(
      operator: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x9F732F4AA3Cf4aBECFcB8e65be560bD74078Bc2a (type: address),
      id: 1 (type: uint256),
      value: 1000 (type: uint256)
    )


    ---------------------------
    295) receives ERC1155 tokens from a multiple IDs

    Events emitted during test:
    ---------------------------

    IERC1155.TransferBatch(
      operator: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      ids: [ 1, 2, 3 ] (type: uint256[]),
      values: [ 1000, 2000, 3000 ] (type: uint256[])
    )


    ---------------------------
    Contract interface
      ERC165
        ERC165's supportsInterface(bytes4)
          ✓ uses less than 30k gas [skip-on-coverage]
          296) claims support

    Events emitted during test:
    ---------------------------

    IERC1155.TransferBatch(
      operator: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      ids: [ 1, 2, 3 ] (type: uint256[]),
      values: [ 1000, 2000, 3000 ] (type: uint256[])
    )


    ---------------------------
        supportsInterface(bytes4)
          ✓ has to be implemented
      ERC1155Receiver
        ERC165's supportsInterface(bytes4)
          ✓ uses less than 30k gas [skip-on-coverage]
          297) claims support

    Events emitted during test:
    ---------------------------

    IERC1155.TransferBatch(
      operator: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      ids: [ 1, 2, 3 ] (type: uint256[]),
      values: [ 1000, 2000, 3000 ] (type: uint256[])
    )


    ---------------------------
        onERC1155Received(address,address,uint256,uint256,bytes)
          ✓ has to be implemented
        onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)
          ✓ has to be implemented

  Contract: ERC1155Pausable
    when token is paused
      298) reverts when trying to safeTransferFrom from holder

    Events emitted during test:
    ---------------------------

    IERC1155.ApprovalForAll(
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      approved: true (type: bool)
    )

    IERC1155.TransferSingle(
      operator: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      id: 37 (type: uint256),
      value: 42 (type: uint256)
    )

    Pausable.Paused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      299) reverts when trying to safeTransferFrom from operator

    Events emitted during test:
    ---------------------------

    IERC1155.ApprovalForAll(
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      approved: true (type: bool)
    )

    IERC1155.TransferSingle(
      operator: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      id: 37 (type: uint256),
      value: 42 (type: uint256)
    )

    Pausable.Paused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      300) reverts when trying to safeBatchTransferFrom from holder

    Events emitted during test:
    ---------------------------

    IERC1155.ApprovalForAll(
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      approved: true (type: bool)
    )

    IERC1155.TransferSingle(
      operator: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      id: 37 (type: uint256),
      value: 42 (type: uint256)
    )

    Pausable.Paused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      301) reverts when trying to safeBatchTransferFrom from operator

    Events emitted during test:
    ---------------------------

    IERC1155.ApprovalForAll(
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      approved: true (type: bool)
    )

    IERC1155.TransferSingle(
      operator: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      id: 37 (type: uint256),
      value: 42 (type: uint256)
    )

    Pausable.Paused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      302) reverts when trying to mint

    Events emitted during test:
    ---------------------------

    IERC1155.ApprovalForAll(
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      approved: true (type: bool)
    )

    IERC1155.TransferSingle(
      operator: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      id: 37 (type: uint256),
      value: 42 (type: uint256)
    )

    Pausable.Paused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      303) reverts when trying to mintBatch

    Events emitted during test:
    ---------------------------

    IERC1155.ApprovalForAll(
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      approved: true (type: bool)
    )

    IERC1155.TransferSingle(
      operator: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      id: 37 (type: uint256),
      value: 42 (type: uint256)
    )

    Pausable.Paused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      304) reverts when trying to burn

    Events emitted during test:
    ---------------------------

    IERC1155.ApprovalForAll(
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      approved: true (type: bool)
    )

    IERC1155.TransferSingle(
      operator: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      id: 37 (type: uint256),
      value: 42 (type: uint256)
    )

    Pausable.Paused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      305) reverts when trying to burnBatch

    Events emitted during test:
    ---------------------------

    IERC1155.ApprovalForAll(
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      approved: true (type: bool)
    )

    IERC1155.TransferSingle(
      operator: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      id: 37 (type: uint256),
      value: 42 (type: uint256)
    )

    Pausable.Paused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      setApprovalForAll
        306) approves an operator

    Events emitted during test:
    ---------------------------

    IERC1155.ApprovalForAll(
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      approved: true (type: bool)
    )

    IERC1155.TransferSingle(
      operator: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      id: 37 (type: uint256),
      value: 42 (type: uint256)
    )

    Pausable.Paused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    IERC1155.ApprovalForAll(
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x8C647515F03daeefD09872d7530Fa8d8450f069A (type: address),
      approved: true (type: bool)
    )


    ---------------------------
      balanceOf
        307) returns the amount of tokens owned by the given address

    Events emitted during test:
    ---------------------------

    IERC1155.ApprovalForAll(
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      approved: true (type: bool)
    )

    IERC1155.TransferSingle(
      operator: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      id: 37 (type: uint256),
      value: 42 (type: uint256)
    )

    Pausable.Paused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      isApprovedForAll
        308) returns the approval of the operator

    Events emitted during test:
    ---------------------------

    IERC1155.ApprovalForAll(
      account: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      approved: true (type: bool)
    )

    IERC1155.TransferSingle(
      operator: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      id: 37 (type: uint256),
      value: 42 (type: uint256)
    )

    Pausable.Paused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------

  Contract: ERC20
    309) has a name

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 100 (type: uint256)
    )


    ---------------------------
    310) has a symbol

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 100 (type: uint256)
    )


    ---------------------------
    311) has 18 decimals

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 100 (type: uint256)
    )


    ---------------------------
    _setupDecimals
      312) can set decimals during construction

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 100 (type: uint256)
    )


    ---------------------------
    total supply
      313) returns the total amount of tokens

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 100 (type: uint256)
    )


    ---------------------------
    balanceOf
      when the requested account has no tokens
        314) returns zero

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 100 (type: uint256)
    )


    ---------------------------
      when the requested account has some tokens
        315) returns the total amount of tokens

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 100 (type: uint256)
    )


    ---------------------------
    transfer
      when the recipient is not the zero address
        when the sender does not have enough balance
          316) reverts

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 100 (type: uint256)
    )


    ---------------------------
        when the sender transfers all balance
          317) transfers the requested amount
          318) "after each" hook: after test for "transfers the requested amount"

  Contract: ERC20Burnable
    burn
      when the given amount is not greater than balance of the sender
        for a zero amount
          319) burns the requested amount

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 1000 (type: uint256)
    )

    IERC20.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      value: 0 (type: uint256)
    )


    ---------------------------
          320) "before each" hook for "emits a transfer event"
        for a non-zero amount
          321) burns the requested amount

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 1000 (type: uint256)
    )

    IERC20.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      value: 100 (type: uint256)
    )


    ---------------------------
          ✓ emits a transfer event
      when the given amount is greater than the balance of the sender
        322) reverts

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 1000 (type: uint256)
    )


    ---------------------------
    burnFrom
      on success
        for a zero amount
          323) burns the requested amount

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 1000 (type: uint256)
    )

    IERC20.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      spender: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      value: 0 (type: uint256)
    )

    IERC20.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      spender: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      value: 0 (type: uint256)
    )

    IERC20.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      value: 0 (type: uint256)
    )


    ---------------------------
          324) decrements allowance

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 1000 (type: uint256)
    )

    IERC20.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      spender: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      value: 0 (type: uint256)
    )

    IERC20.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      spender: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      value: 0 (type: uint256)
    )

    IERC20.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      value: 0 (type: uint256)
    )


    ---------------------------
          ✓ emits a transfer event
        for a non-zero amount
          325) burns the requested amount

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 1000 (type: uint256)
    )

    IERC20.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      spender: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      value: 300 (type: uint256)
    )

    IERC20.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      spender: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      value: 200 (type: uint256)
    )

    IERC20.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      value: 100 (type: uint256)
    )


    ---------------------------
          326) decrements allowance

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 1000 (type: uint256)
    )

    IERC20.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      spender: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      value: 300 (type: uint256)
    )

    IERC20.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      spender: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      value: 200 (type: uint256)
    )

    IERC20.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      value: 100 (type: uint256)
    )


    ---------------------------
          ✓ emits a transfer event
      when the given amount is greater than the balance of the sender
         327) "before each" hook for "reverts"

  Contract: ERC20Capped
    328) requires a non-zero cap
    > No events were emitted
    once deployed
      capped token
        329) starts with the correct cap
    > No events were emitted
        330) mints when amount is less than cap

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      value: 999999999999999999999 (type: uint256)
    )


    ---------------------------
        331) fails to mint if the amount exceeds the cap

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      value: 999999999999999999999 (type: uint256)
    )


    ---------------------------
        332) fails to mint after cap is reached

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      value: 1000000000000000000000 (type: uint256)
    )


    ---------------------------

  Contract: ERC20Pausable
    pausable token
      transfer
        333) allows to transfer when unpaused

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 100 (type: uint256)
    )

    IERC20.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      value: 100 (type: uint256)
    )


    ---------------------------
        334) allows to transfer when paused and then unpaused

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 100 (type: uint256)
    )

    Pausable.Paused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    Pausable.Unpaused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    IERC20.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      value: 100 (type: uint256)
    )


    ---------------------------
        335) reverts when trying to transfer when paused

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 100 (type: uint256)
    )

    Pausable.Paused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      transfer from
        336) allows to transfer from when unpaused

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 100 (type: uint256)
    )

    IERC20.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      spender: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      value: 40 (type: uint256)
    )


    ---------------------------
        337) allows to transfer when paused and then unpaused

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 100 (type: uint256)
    )

    IERC20.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      spender: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      value: 40 (type: uint256)
    )

    Pausable.Paused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    Pausable.Unpaused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
        338) reverts when trying to transfer from when paused

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 100 (type: uint256)
    )

    IERC20.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      spender: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      value: 40 (type: uint256)
    )

    Pausable.Paused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      mint
        339) allows to mint when unpaused

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 100 (type: uint256)
    )

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      value: 42 (type: uint256)
    )


    ---------------------------
        340) allows to mint when paused and then unpaused

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 100 (type: uint256)
    )

    Pausable.Paused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    Pausable.Unpaused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      value: 42 (type: uint256)
    )


    ---------------------------
        341) reverts when trying to mint when paused

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 100 (type: uint256)
    )

    Pausable.Paused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      burn
        342) allows to burn when unpaused

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 100 (type: uint256)
    )

    IERC20.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      value: 42 (type: uint256)
    )


    ---------------------------
        343) allows to burn when paused and then unpaused

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 100 (type: uint256)
    )

    Pausable.Paused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    Pausable.Unpaused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )

    IERC20.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      value: 42 (type: uint256)
    )


    ---------------------------
        344) reverts when trying to burn when paused

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 100 (type: uint256)
    )

    Pausable.Paused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------

  Contract: ERC20Snapshot
    snapshot
      ✓ emits a snapshot event (229ms)
      ✓ creates increasing snapshots ids, starting from 1 (1319ms)
    totalSupplyAt
      345) reverts with a snapshot id of 0

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 100 (type: uint256)
    )


    ---------------------------
      346) reverts with a not-yet-created snapshot id

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 100 (type: uint256)
    )


    ---------------------------
      with initial snapshot
        with no supply changes after the snapshot
          347) returns the current total supply

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 100 (type: uint256)
    )

    ERC20Snapshot.Snapshot(
      id: 1 (type: uint256)
    )


    ---------------------------
        with supply changes after the snapshot
          348) returns the total supply before the changes

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 100 (type: uint256)
    )

    ERC20Snapshot.Snapshot(
      id: 1 (type: uint256)
    )

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      value: 50 (type: uint256)
    )

    IERC20.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      value: 20 (type: uint256)
    )


    ---------------------------
          with a second snapshot after supply changes
            349) snapshots return the supply before and after the changes

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 100 (type: uint256)
    )

    ERC20Snapshot.Snapshot(
      id: 1 (type: uint256)
    )

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      value: 50 (type: uint256)
    )

    IERC20.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      value: 20 (type: uint256)
    )

    ERC20Snapshot.Snapshot(
      id: 2 (type: uint256)
    )


    ---------------------------
          with multiple snapshots after supply changes
            350) all posterior snapshots return the supply after the changes

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 100 (type: uint256)
    )

    ERC20Snapshot.Snapshot(
      id: 1 (type: uint256)
    )

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      value: 50 (type: uint256)
    )

    IERC20.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      value: 20 (type: uint256)
    )

    ERC20Snapshot.Snapshot(
      id: 2 (type: uint256)
    )

    ERC20Snapshot.Snapshot(
      id: 3 (type: uint256)
    )

    ERC20Snapshot.Snapshot(
      id: 4 (type: uint256)
    )


    ---------------------------
    balanceOfAt
      351) reverts with a snapshot id of 0

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 100 (type: uint256)
    )


    ---------------------------
      352) reverts with a not-yet-created snapshot id

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 100 (type: uint256)
    )


    ---------------------------
      with initial snapshot
        with no balance changes after the snapshot
          353) returns the current balance for all accounts

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 100 (type: uint256)
    )

    ERC20Snapshot.Snapshot(
      id: 1 (type: uint256)
    )


    ---------------------------
        with balance changes after the snapshot
          354) returns the balances before the changes

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 100 (type: uint256)
    )

    ERC20Snapshot.Snapshot(
      id: 1 (type: uint256)
    )

    IERC20.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      value: 10 (type: uint256)
    )

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      value: 50 (type: uint256)
    )

    IERC20.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      value: 20 (type: uint256)
    )


    ---------------------------
          with a second snapshot after supply changes
            355) snapshots return the balances before and after the changes

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 100 (type: uint256)
    )

    ERC20Snapshot.Snapshot(
      id: 1 (type: uint256)
    )

    IERC20.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      value: 10 (type: uint256)
    )

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      value: 50 (type: uint256)
    )

    IERC20.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      value: 20 (type: uint256)
    )

    ERC20Snapshot.Snapshot(
      id: 2 (type: uint256)
    )


    ---------------------------
          with multiple snapshots after supply changes
            356) all posterior snapshots return the supply after the changes

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 100 (type: uint256)
    )

    ERC20Snapshot.Snapshot(
      id: 1 (type: uint256)
    )

    IERC20.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      value: 10 (type: uint256)
    )

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      value: 50 (type: uint256)
    )

    IERC20.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      value: 20 (type: uint256)
    )

    ERC20Snapshot.Snapshot(
      id: 2 (type: uint256)
    )

    ERC20Snapshot.Snapshot(
      id: 3 (type: uint256)
    )

    ERC20Snapshot.Snapshot(
      id: 4 (type: uint256)
    )


    ---------------------------

  Contract: SafeERC20
    with address that has no contract code
      357) reverts on transfer
    > No events were emitted
      358) reverts on transferFrom
    > No events were emitted
      359) reverts on approve
    > No events were emitted
      ✓ reverts on increaseAllowance (249ms)
      ✓ reverts on decreaseAllowance (246ms)
    with token that returns false on all calls
      360) reverts on transfer
    > No events were emitted
      361) reverts on transferFrom
    > No events were emitted
      362) reverts on approve
    > No events were emitted
      363) reverts on increaseAllowance
    > No events were emitted
      364) reverts on decreaseAllowance
    > No events were emitted
    with token that returns true on all calls
      365) doesn't revert on transfer
    > No events were emitted
      366) doesn't revert on transferFrom
    > No events were emitted
      approvals
        with zero allowance
          367) doesn't revert when approving a non-zero allowance
    > No events were emitted
          368) doesn't revert when approving a zero allowance
    > No events were emitted
          369) doesn't revert when increasing the allowance
    > No events were emitted
          370) reverts when decreasing the allowance
    > No events were emitted
        with non-zero allowance
          371) reverts when approving a non-zero allowance
    > No events were emitted
          372) doesn't revert when approving a zero allowance
    > No events were emitted
          373) doesn't revert when increasing the allowance
    > No events were emitted
          374) doesn't revert when decreasing the allowance to a positive value
    > No events were emitted
          375) reverts when decreasing the allowance to a negative value
    > No events were emitted
    with token that returns no boolean values
      376) doesn't revert on transfer
    > No events were emitted
      377) doesn't revert on transferFrom
    > No events were emitted
      approvals
        with zero allowance
          378) doesn't revert when approving a non-zero allowance
    > No events were emitted
          379) doesn't revert when approving a zero allowance
    > No events were emitted
          380) doesn't revert when increasing the allowance
    > No events were emitted
          381) reverts when decreasing the allowance
    > No events were emitted
        with non-zero allowance
          382) reverts when approving a non-zero allowance
    > No events were emitted
          383) doesn't revert when approving a zero allowance
    > No events were emitted
          384) doesn't revert when increasing the allowance
    > No events were emitted
          385) doesn't revert when decreasing the allowance to a positive value
    > No events were emitted
          386) reverts when decreasing the allowance to a negative value
    > No events were emitted

  Contract: TokenTimelock
    with token
      387) rejects a release time in the past

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 0 (type: uint256)
    )


    ---------------------------
      once deployed
        388) can get state

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 0 (type: uint256)
    )

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x0030074E3b323e2d52C408C8CDb4614fdbfD5B06 (type: address),
      value: 100 (type: uint256)
    )


    ---------------------------
        389) cannot be released before time limit

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 0 (type: uint256)
    )

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0xbC44931F8beE7e3127D2Cb22dfC76Aaf5F637c9f (type: address),
      value: 100 (type: uint256)
    )


    ---------------------------
        390) cannot be released just before time limit

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 0 (type: uint256)
    )

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x51F0a8A5FB459c60897b8daa05c23F131De6e2ac (type: address),
      value: 100 (type: uint256)
    )


    ---------------------------
        391) can be released just after limit

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 0 (type: uint256)
    )

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x472CEc81421540670f2236fAF6A968f8A6607285 (type: address),
      value: 100 (type: uint256)
    )


    ---------------------------
        392) can be released after time limit

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 0 (type: uint256)
    )

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x96a0f32eE05858e3296953C94c8b417047E7eb10 (type: address),
      value: 100 (type: uint256)
    )


    ---------------------------
        393) cannot be released twice

    Events emitted during test:
    ---------------------------

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      value: 0 (type: uint256)
    )

    IERC20.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x80649018283CFfc38fe4710c094E7d488338b832 (type: address),
      value: 100 (type: uint256)
    )


    ---------------------------

  Contract: ERC721
    Contract interface
      ERC165
        ERC165's supportsInterface(bytes4)
          ✓ uses less than 30k gas [skip-on-coverage]
          394) claims support
    > No events were emitted
        supportsInterface(bytes4)
          ✓ has to be implemented
      ERC721
        ERC165's supportsInterface(bytes4)
          ✓ uses less than 30k gas [skip-on-coverage]
          395) claims support
    > No events were emitted
        balanceOf(address)
          ✓ has to be implemented
        ownerOf(uint256)
          ✓ has to be implemented
        approve(address,uint256)
          ✓ has to be implemented
        getApproved(uint256)
          ✓ has to be implemented
        setApprovalForAll(address,bool)
          ✓ has to be implemented
        isApprovedForAll(address,address)
          ✓ has to be implemented
        transferFrom(address,address,uint256)
          ✓ has to be implemented
        safeTransferFrom(address,address,uint256)
          ✓ has to be implemented
        safeTransferFrom(address,address,uint256,bytes)
          ✓ has to be implemented
      ERC721Enumerable
        ERC165's supportsInterface(bytes4)
          ✓ uses less than 30k gas [skip-on-coverage]
          396) claims support
    > No events were emitted
        totalSupply()
          ✓ has to be implemented
        tokenOfOwnerByIndex(address,uint256)
          ✓ has to be implemented
        tokenByIndex(uint256)
          ✓ has to be implemented
      ERC721Metadata
        ERC165's supportsInterface(bytes4)
          ✓ uses less than 30k gas [skip-on-coverage]
          397) claims support
    > No events were emitted
        name()
          ✓ has to be implemented
        symbol()
          ✓ has to be implemented
        tokenURI(uint256)
          ✓ has to be implemented
    metadata
      398) has a name
    > No events were emitted
      399) has a symbol
    > No events were emitted
      token URI
        400) it is empty by default

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
        401) reverts when queried for non existent token id

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
        402) can be set for a token id

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
        403) reverts when setting for non existent token id

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
        404) base URI can be set

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
        405) base URI is added as a prefix to the token URI

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
        406) token URI can be changed by changing the base URI

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
        407) tokenId is appended to base URI for tokens with no URI

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
        408) tokens with URI can be burnt

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
    with minted tokens
      balanceOf
        when the given address owns some tokens
          409) returns the amount of tokens owned by the given address

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )


    ---------------------------
        when the given address does not own any tokens
          410) returns 0

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )


    ---------------------------
        when querying the zero address
          411) throws

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )


    ---------------------------
      ownerOf
        when the given token ID was tracked by this token
          412) returns the owner of the given token ID

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )


    ---------------------------
        when the given token ID was not tracked by this token
          413) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )


    ---------------------------
      transfers
        via transferFrom
          when called by the owner
            414) transfers the ownership of the given token ID to the given address

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x88b0BF4b301C21f8a47BE2188BAd6467aD556DCf (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
            ✓ emits a Transfer event
            415) clears the approval for the token ID

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x88b0BF4b301C21f8a47BE2188BAd6467aD556DCf (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
            ✓ emits an Approval event
            416) adjusts owners balances

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x88b0BF4b301C21f8a47BE2188BAd6467aD556DCf (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
            417) adjusts owners tokens by index

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x88b0BF4b301C21f8a47BE2188BAd6467aD556DCf (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
          when called by the approved individual
            418) "before each" hook for "transfers the ownership of the given token ID to the given address"
          when called by the operator
            419) "before each" hook for "transfers the ownership of the given token ID to the given address"
          when called by the owner without an approved user
            420) "before each" hook for "transfers the ownership of the given token ID to the given address"
          when sent to the owner
            421) keeps ownership of the token

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
            422) clears the approval for the token ID

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
    ✓ emits only a transfer event
            423) keeps the owner balance

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
            424) keeps same tokens by index

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
          when the address of the previous owner is incorrect
            425) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )


    ---------------------------
          when the sender is not authorized for the token id
            426) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )


    ---------------------------
          when the given token ID does not exist
            427) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )


    ---------------------------
          when the address to transfer the token to is the zero address
            428) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )


    ---------------------------
        via safeTransferFrom
          with data
            to a user account
              when called by the owner
                429) transfers the ownership of the given token ID to the given address

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x88b0BF4b301C21f8a47BE2188BAd6467aD556DCf (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
                ✓ emits a Transfer event
                430) clears the approval for the token ID

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x88b0BF4b301C21f8a47BE2188BAd6467aD556DCf (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
                ✓ emits an Approval event
                431) adjusts owners balances

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x88b0BF4b301C21f8a47BE2188BAd6467aD556DCf (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
                432) adjusts owners tokens by index

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x88b0BF4b301C21f8a47BE2188BAd6467aD556DCf (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
              when called by the approved individual
                433) "before each" hook for "transfers the ownership of the given token ID to the given address"
              when called by the operator
               434) "before each" hook for "transfers the ownership of the given token ID to the given address"
              when called by the owner without an approved user
                435) "before each" hook for "transfers the ownership of the given token ID to the given address"
              when sent to the owner
                436) keeps ownership of the token

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
                437) clears the approval for the token ID

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
                ✓ emits only a transfer event
                438) keeps the owner balance

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
                439) keeps same tokens by index

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
              when the address of the previous owner is incorrect
                440) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )


    ---------------------------
              when the sender is not authorized for the token id
                441) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )


    ---------------------------
              when the given token ID does not exist
                442) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )


    ---------------------------
              when the address to transfer the token to is the zero address
                443) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )


    ---------------------------
            to a valid receiver contract
              ✓ calls onERC721Received (454ms)
              444) calls onERC721Received from approved

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )


    ---------------------------
              when called by the owner

              445) transfers the ownership of the given token ID to the given address

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0xd29beBe4d1fAAD5c0C50309685075fF1fD992d1E (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    ERC721ReceiverMock.Received(
      operator: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      from: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: 5042 (type: uint256),
      data: hex'42' (type: bytes),
      gas: 6481654 (type: uint256)
    )


    ---------------------------
                ✓ emits a Transfer event
                446) clears the approval for the token ID

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x2550630a9fD31a7338F1C11b5ee2dd84b6FD8057 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    ERC721ReceiverMock.Received(
      operator: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      from: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: 5042 (type: uint256),
      data: hex'42' (type: bytes),
      gas: 6481654 (type: uint256)
    )


    ---------------------------
                ✓ emits an Approval event
                Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x2550630a9fD31a7338F1C11b5ee2dd84b6FD8057 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    ERC721ReceiverMock.Received(
      operator: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      from: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: 5042 (type: uint256),
      data: hex'42' (type: bytes),
      gas: 6481654 (type: uint256)
    )


    ---------------------------
                ✓ emits an Approval event
                447) adjusts owners balances

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0xEE9063caC42118D26124E923a7c28f0B80e04fbD (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    ERC721ReceiverMock.Received(
      operator: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      from: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: 5042 (type: uint256),
      data: hex'42' (type: bytes),
      gas: 6481654 (type: uint256)
    )


    ---------------------------
                448) adjusts owners tokens by index

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x9e0B8f794B41FB292D09070cB18B8483a31B3223 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    ERC721ReceiverMock.Received(
      operator: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      from: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: 5042 (type: uint256),
      data: hex'42' (type: bytes),
      gas: 6481654 (type: uint256)
    )


    ---------------------------
              when called by the approved individual
                449) "before each" hook for "transfers the ownership of the given token ID to the given address"
              when called by the operator
                450) "before each" hook for "transfers the ownership of the given token ID to the given address"
              when called by the owner without an approved user
                451) "before each" hook for "transfers the ownership of the given token ID to the given address"
              when sent to the owner
                452) keeps ownership of the token

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
                453) clears the approval for the token ID

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
                ✓ emits only a transfer event
                454) keeps the owner balance

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
    455) keeps same tokens by index

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
              when the address of the previous owner is incorrect
                456) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )


    ---------------------------
              when the sender is not authorized for the token id
                457) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )


    ---------------------------
              when the given token ID does not exist
                458) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )


    ---------------------------
              when the address to transfer the token to is the zero address
                459) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )


    ---------------------------
              with an invalid token id
                460) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )


    ---------------------------
          without data
            to a user account
              when called by the owner
                461) transfers the ownership of the given token ID to the given address

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x88b0BF4b301C21f8a47BE2188BAd6467aD556DCf (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
                ✓ emits a Transfer event
                462) clears the approval for the token ID

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x88b0BF4b301C21f8a47BE2188BAd6467aD556DCf (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
                ✓ emits an Approval event
                463) adjusts owners balances

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x88b0BF4b301C21f8a47BE2188BAd6467aD556DCf (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
                464) adjusts owners tokens by index

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x88b0BF4b301C21f8a47BE2188BAd6467aD556DCf (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
              when called by the approved individual
                465) "before each" hook for "transfers the ownership of the given token ID to the given address"
              when called by the operator
                466) "before each" hook for "transfers the ownership of the given token ID to the given address"
              when called by the owner without an approved user
                467) "before each" hook for "transfers the ownership of the given token ID to the given address"
              when sent to the owner
                468) keeps ownership of the token

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
                469) clears the approval for the token ID

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
                ✓ emits only a transfer event
                470) keeps the owner balance

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
                471) keeps same tokens by index

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
              when the address of the previous owner is incorrect
                472) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )


    ---------------------------
              when the sender is not authorized for the token id
                473) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )


    ---------------------------
              when the given token ID does not exist
                474) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )


    ---------------------------
              when the address to transfer the token to is the zero address
                475) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )


    ---------------------------
            to a valid receiver contract
              ✓ calls onERC721Received (392ms)
              476) calls onERC721Received from approved

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )


    ---------------------------
              when called by the owner
                477) transfers the ownership of the given token ID to the given address

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0xaE54A59C57F9FB8E6b013A43C691b1A396214eeb (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    ERC721ReceiverMock.Received(
      operator: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      from: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: 5042 (type: uint256),
      data: hex'' (type: bytes),
      gas: 6483036 (type: uint256)
    )


    ---------------------------
                ✓ emits a Transfer event
                478) clears the approval for the token ID

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x02893D487210F52Dd7EaF6A8Bcb741Cb007B6c2A (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    ERC721ReceiverMock.Received(
      operator: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      from: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: 5042 (type: uint256),
      data: hex'' (type: bytes),
      gas: 6483099 (type: uint256)
    )


    ---------------------------
                ✓ emits an Approval event
                479) adjusts owners balances

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x5C5Adb813d736896f6Ec31810c6504534Ac9CeD3 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    ERC721ReceiverMock.Received(
      operator: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      from: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: 5042 (type: uint256),
      data: hex'' (type: bytes),
      gas: 6483036 (type: uint256)
    )


    ---------------------------
                480) adjusts owners tokens by index

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0xfF22a508104ce812b11873157B382aAcAa60CE35 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    ERC721ReceiverMock.Received(
      operator: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      from: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: 5042 (type: uint256),
      data: hex'' (type: bytes),
      gas: 6483036 (type: uint256)
    )


    ---------------------------
              when called by the approved individual
                481) "before each" hook for "transfers the ownership of the given token ID to the given address"
              when called by the operator
                482) "before each" hook for "transfers the ownership of the given token ID to the given address"
              when called by the owner without an approved user
                483) "before each" hook for "transfers the ownership of the given token ID to the given address"
              when sent to the owner
                484) keeps ownership of the token

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
                485) clears the approval for the token ID

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
                ✓ emits only a transfer event
                486) keeps the owner balance

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
                487) keeps same tokens by index

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
              when the address of the previous owner is incorrect
                488) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )


    ---------------------------
              when the sender is not authorized for the token id
                489) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )


    ---------------------------
              when the given token ID does not exist
                490) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )


    ---------------------------
              when the address to transfer the token to is the zero address
                491) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )


    ---------------------------
              with an invalid token id
                492) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )


    ---------------------------
          to a receiver contract returning unexpected value
            493) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )


    ---------------------------
          to a receiver contract that throws
            494) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )


    ---------------------------
          to a contract that does not implement the required function
            495) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )


    ---------------------------
      safe mint
        via safeMint
          ✓ calls onERC721Received — with data (962ms)
          ✓ calls onERC721Received — without data (902ms)
          to a receiver contract returning unexpected value
            496) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )


    ---------------------------
          to a receiver contract that throws
            497) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )


    ---------------------------
          to a contract that does not implement the required function
            498) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )


    ---------------------------
      approve
        when clearing approval
          when there was no prior approval
            ved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
            ✓ emits an approval event
        when approving a non-zero address
          when there was no prior approval
            501) sets the approval for the target address

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
            ✓ emits an approval event
          when there was a prior approval to the same address
            502) sets the approval for the target address

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
            ✓ emits an approval event
          when there was a prior approval to a different address
            503) sets the approval for the target address

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x8C647515F03daeefD09872d7530Fa8d8450f069A (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x8C647515F03daeefD09872d7530Fa8d8450f069A (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
            ✓ emits an approval event
        when the address that receives the approval is the owner
          504) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )


    ---------------------------
        when the sender does not own the given token ID
          505) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )


    ---------------------------
        when the sender is approved for the given token ID
          506) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
        when the sender is an operator
          507) "before each" hook for "sets the approval for the target address"
        when the given token ID does not exist
          508) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )


    ---------------------------
      setApprovalForAll
        when the operator willing to approve is not the owner
          when there is no operator approval set by the sender
            509) approves the operator

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )


    ---------------------------
            ✓ emits an approval event (554ms)
          when the operator was set as not approved
            510) approves the operator

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: false (type: bool)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )


    ---------------------------
            ✓ emits an approval event (485ms)
            511) can unset the operator approval

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: false (type: bool)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: false (type: bool)
    )


    ---------------------------
          when the operator was already approved
            512) keeps the approval to the given address

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )

    IERC721.ApprovalForAll(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      operator: <indexed> 0x2191744eB5ebeac90e523A817B77a83A0058003b (type: address),
      approved: true (type: bool)
    )


    ---------------------------
            ✓ emits an approval event (448ms)
        when the operator is the owner
          513) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )


    ---------------------------
      getApproved
        when token is not minted
          514) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )


    ---------------------------
        when token has been minted
          515) should return the zero address

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )


    ---------------------------
          when account has been approved
            516) returns approved account

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x69B004ac2B3993BF2Fdf56b02746A1F57997420d (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
      totalSupply
        517) returns total token supply

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )


    ---------------------------
      tokenOfOwnerByIndex
        when the given index is lower than the amount of tokens owned by the given address
          518) returns the token ID placed at the given index

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )


    ---------------------------
        when the index is greater than or equal to the total tokens owned by the given address
          519) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )


    ---------------------------
        when the given address does not own any token
          520) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )


    ---------------------------
        after transferring all tokens to another user
          521) returns correct token IDs for target

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x88b0BF4b301C21f8a47BE2188BAd6467aD556DCf (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x88b0BF4b301C21f8a47BE2188BAd6467aD556DCf (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )


    ---------------------------
          522) returns empty collection for original owner

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x88b0BF4b301C21f8a47BE2188BAd6467aD556DCf (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x88b0BF4b301C21f8a47BE2188BAd6467aD556DCf (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )


    ---------------------------
      tokenByIndex
        523) returns all tokens

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )


    ---------------------------
        524) reverts if index is greater than supply

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )


    ---------------------------
        525) returns all tokens after burning token 5042 and minting new tokens

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      tokenId: <indexed> 300 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      tokenId: <indexed> 400 (type: uint256)
    )


    ---------------------------
        526) returns all tokens after burning token 79217 and minting new tokens

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      tokenId: <indexed> 300 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      tokenId: <indexed> 400 (type: uint256)
    )


    ---------------------------
    _mint(address, uint256)
      527) reverts with a null destination address
    > No events were emitted
      with minted token
        ✓ emits a Transfer event
        528) creates the token

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
        529) adjusts owner tokens by index

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
        530) adjusts all tokens list

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
        531) reverts when adding a token id that already exists

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
    _burn
      532) reverts when burning a non-existent token id
    > No events were emitted
      with minted tokens
        with burnt token
          ✓ emits a Transfer event
          ✓ emits an Approval event
          533) deletes the token

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
          534) removes that token from the token list of the owner

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
          535) adjusts all tokens list

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------
          536) burns all tokens

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )


    ---------------------------
          537) reverts when burning a token id that has been deleted

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 79217 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 5042 (type: uint256)
    )


    ---------------------------

  Contract: ERC721Burnable
    like a burnable ERC721
      burn
        when successful
          538) burns the given token ID and adjusts the balance of the owner

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 1 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 2 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 1 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 1 (type: uint256)
    )


    ---------------------------
          ✓ emits a burn event
        when there is a previous approval burned
          getApproved
            539) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 1 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 2 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x2352be3Db3177F0A07Efbe6DA5857615b8c9901D (type: address),
      tokenId: <indexed> 1 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 1 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 1 (type: uint256)
    )


    ---------------------------
        when the given token ID was not tracked by this contract
          540) reverts

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 1 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 2 (type: uint256)
    )


    ---------------------------

  Contract: ERC721Holder
    541) receives an ERC721 token

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 1 (type: uint256)
    )

    IERC721.Approval(
      owner: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      approved: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      tokenId: <indexed> 1 (type: uint256)
    )

    IERC721.Transfer(
      from: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      to: <indexed> 0xBb1A4f48aA82a63Aa5C92d750B62B32657C2535D (type: address),
      tokenId: <indexed> 1 (type: uint256)
    )


    ---------------------------

  Contract: ERC721Pausable
    when token is paused
      542) reverts when trying to transferFrom

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 1 (type: uint256)
    )

    Pausable.Paused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      543) reverts when trying to safeTransferFrom

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 1 (type: uint256)
    )

    Pausable.Paused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      544) reverts when trying to safeTransferFrom with data

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 1 (type: uint256)
    )

    Pausable.Paused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      545) reverts when trying to mint

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 1 (type: uint256)
    )

    Pausable.Paused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      546) reverts when trying to burn

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 1 (type: uint256)
    )

    Pausable.Paused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      getApproved
        547) returns approved address

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 1 (type: uint256)
    )

    Pausable.Paused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      balanceOf
        548) returns the amount of tokens owned by the given address

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 1 (type: uint256)
    )

    Pausable.Paused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      ownerOf
        549) returns the amount of tokens owned by the given address

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 1 (type: uint256)
    )

    Pausable.Paused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      exists
        550) returns token existence

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 1 (type: uint256)
    )

    Pausable.Paused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------
      isApprovedForAll
        551) returns the approval of the operator

    Events emitted during test:
    ---------------------------

    IERC721.Transfer(
      from: <indexed> 0x0000000000000000000000000000000000000000 (type: address),
      to: <indexed> 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address),
      tokenId: <indexed> 1 (type: uint256)
    )

    Pausable.Paused(
      account: 0x7926223070547D2D15b2eF5e7383E541c338FfE9 (type: address)
    )


    ---------------------------

  Contract: ERC777
    with default operators
      552) "before each" hook for "does not emit AuthorizedOperator events for default operators"

  Contract: Address
    isContract
      553) returns false for account address
    > No events were emitted
      554) returns true for contract address
    > No events were emitted
    sendValue
      when sender contract has no funds
        555) "before each" hook for "sends 0 wei"
    functionCall
      with valid contract receiver
        556) calls the requested function
    > No events were emitted
        557) reverts when the called function reverts with no reason
    > No events were emitted
        558) reverts when the called function reverts, bubbling up the revert reason
    > No events were emitted
        559) reverts when the called function runs out of gas
    > No events were emitted
        560) reverts when the called function throws
    > No events were emitted
        561) reverts when function does not exist
    > No events were emitted
      with non-contract receiver
        562) reverts when address is not a contract
    > No events were emitted
    functionCallWithValue
      with zero value
        563) calls the requested function
    > No events were emitted
      with non-zero value
        564) reverts if insufficient sender balance
    > No events were emitted
        565) calls the requested function with existing value
    > No events were emitted
        566) calls the requested function with transaction funds
    > No events were emitted
        567) reverts when calling non-payable functions
    > No events were emitted
    functionStaticCall
      ✓ calls the requested function (901ms)
      568) reverts on a non-static function
    > No events were emitted
      569) bubbles up revert reason
    > No events were emitted
      570) reverts when address is not a contract
    > No events were emitted
    functionDelegateCall
      571) delegate calls the requested function

    Events emitted during test:
    ---------------------------

    AddressImpl.CallReturnValue(
      data: '0x1234' (type: string)
    )


    ---------------------------
      572) bubbles up revert reason
    > No events were emitted
      573) reverts when address is not a contract
    > No events were emitted

  Contract: Arrays
    findUpperBound
      Even number of elements
        574) returns correct index for the basic case
    > No events were emitted
        575) returns 0 for the first element
    > No events were emitted
        576) returns index of the last element
    > No events were emitted
        577) returns first index after last element if searched value is over the upper boundary
    > No events were emitted
        578) returns 0 for the element under the lower boundary
    > No events were emitted
      Odd number of elements
        579) returns correct index for the basic case
    > No events were emitted
        580) returns 0 for the first element
    > No events were emitted
        581) returns index of the last element
    > No events were emitted
        582) returns first index after last element if searched value is over the upper boundary
    > No events were emitted
        583) returns 0 for the element under the lower boundary
    > No events were emitted
      Array with gap
        584) returns index of first element in next filled range
    > No events were emitted
      Empty array
        585) always returns 0 for empty array
    > No events were emitted

  Contract: Counters
    586) starts at zero
    > No events were emitted
    increment
      starting from 0
        587) increments the current value by one
    > No events were emitted
        588) can be called multiple times
    > No events were emitted
    decrement
      starting from 1
        589) "before each" hook for "decrements the current value by one"

  Contract: Create2
    computeAddress
      590) computes the correct contract address
    > No events were emitted
      591) computes the correct contract address with deployer
    > No events were emitted
    deploy
      592) deploys a ERC1820Implementer from inline assembly code
    > No events were emitted
      593) deploys a ERC20Mock with correct balances
    > No events were emitted
      594) deploys a contract with funds deposited in the factory
    > No events were emitted
      595) fails deploying a contract in an existent address
    > No events were emitted
      596) fails deploying a contract if the bytecode length is zero
    > No events were emitted
      597) fails deploying a contract if factory contract does not have sufficient balance
    > No events were emitted

  Contract: EnumerableMap
    598) starts empty
    > No events were emitted
    set
      599) adds a key

    Events emitted during test:
    ---------------------------

    EnumerableMapMock.OperationResult(
      result: true (type: bool)
    )


    ---------------------------
     600) adds several keys

    Events emitted during test:
    ---------------------------

    EnumerableMapMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableMapMock.OperationResult(
      result: true (type: bool)
    )


    ---------------------------
      601) returns false when adding keys already in the set

    Events emitted during test:
    ---------------------------

    EnumerableMapMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableMapMock.OperationResult(
      result: false (type: bool)
    )


    ---------------------------
      602) updates values for keys already in the set

    Events emitted during test:
    ---------------------------

    EnumerableMapMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableMapMock.OperationResult(
      result: false (type: bool)
    )


    ---------------------------
    remove
      603) removes added keys

    Events emitted during test:
    ---------------------------

    EnumerableMapMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableMapMock.OperationResult(
      result: true (type: bool)
    )


    ---------------------------
      604) returns false when removing keys not in the set

    Events emitted during test:
    ---------------------------

    EnumerableMapMock.OperationResult(
      result: false (type: bool)
    )


    ---------------------------
      605) adds and removes multiple keys

    Events emitted during test:
    ---------------------------

    EnumerableMapMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableMapMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableMapMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableMapMock.OperationResult(
      result: false (type: bool)
    )

    EnumerableMapMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableMapMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableMapMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableMapMock.OperationResult(
      result: false (type: bool)
    )

    EnumerableMapMock.OperationResult(
      result: false (type: bool)
    )

    EnumerableMapMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableMapMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableMapMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableMapMock.OperationResult(
      result: true (type: bool)
    )


    ---------------------------
    read
      get
        606) existing value

    Events emitted during test:
    ---------------------------

    EnumerableMapMock.OperationResult(
      result: true (type: bool)
    )


    ---------------------------
        607) missing value

    Events emitted during test:
    ---------------------------

    EnumerableMapMock.OperationResult(
      result: true (type: bool)
    )


    ---------------------------
      get with message
        608) existing value

    Events emitted during test:
    ---------------------------

    EnumerableMapMock.OperationResult(
      result: true (type: bool)
    )


    ---------------------------
        609) missing value

    Events emitted during test:
    ---------------------------

    EnumerableMapMock.OperationResult(
      result: true (type: bool)
    )


    ---------------------------
      tryGet
        610) existing value

    Events emitted during test:
    ---------------------------

    EnumerableMapMock.OperationResult(
      result: true (type: bool)
    )


    ---------------------------
        611) missing value

    Events emitted during test:
    ---------------------------

    EnumerableMapMock.OperationResult(
      result: true (type: bool)
    )


    ---------------------------

  Contract: EnumerableSet
    EnumerableBytes32Set
      612) starts empty
    > No events were emitted
      add
        613) adds a value

    Events emitted during test:
    ---------------------------

    EnumerableBytes32SetMock.OperationResult(
      result: true (type: bool)
    )


    ---------------------------
        614) adds several values

    Events emitted during test:
    ---------------------------

    EnumerableBytes32SetMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableBytes32SetMock.OperationResult(
      result: true (type: bool)
    )


    ---------------------------
        615) returns false when adding values already in the set

    Events emitted during test:
    ---------------------------

    EnumerableBytes32SetMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableBytes32SetMock.OperationResult(
      result: false (type: bool)
    )


    ---------------------------
      at
        616) reverts when retrieving non-existent elements
    > No events were emitted
      remove
        617) removes added values

    Events emitted during test:
    ---------------------------

    EnumerableBytes32SetMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableBytes32SetMock.OperationResult(
      result: true (type: bool)
    )


    ---------------------------
        618) returns false when removing values not in the set

    Events emitted during test:
    ---------------------------

    EnumerableBytes32SetMock.OperationResult(
      result: false (type: bool)
    )


    ---------------------------
        619) adds and removes multiple values

    Events emitted during test:
    ---------------------------

    EnumerableBytes32SetMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableBytes32SetMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableBytes32SetMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableBytes32SetMock.OperationResult(
      result: false (type: bool)
    )

    EnumerableBytes32SetMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableBytes32SetMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableBytes32SetMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableBytes32SetMock.OperationResult(
      result: false (type: bool)
    )

    EnumerableBytes32SetMock.OperationResult(
      result: false (type: bool)
    )

    EnumerableBytes32SetMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableBytes32SetMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableBytes32SetMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableBytes32SetMock.OperationResult(
      result: true (type: bool)
    )


    ---------------------------
    EnumerableAddressSet
      620) starts empty
    > No events were emitted
      add
        621) adds a value

    Events emitted during test:
    ---------------------------

    EnumerableAddressSetMock.OperationResult(
      result: true (type: bool)
    )


    ---------------------------
        622) adds several values

    Events emitted during test:
    ---------------------------

    EnumerableAddressSetMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableAddressSetMock.OperationResult(
      result: true (type: bool)
    )


    ---------------------------
        623) returns false when adding values already in the set

    Events emitted during test:
    ---------------------------

    EnumerableAddressSetMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableAddressSetMock.OperationResult(
      result: false (type: bool)
    )


    ---------------------------
      at
        624) reverts when retrieving non-existent elements
    > No events were emitted
      remove
        625) removes added values

    Events emitted during test:
    ---------------------------

    EnumerableAddressSetMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableAddressSetMock.OperationResult(
      result: true (type: bool)
    )


    ---------------------------
        626) returns false when removing values not in the set

    Events emitted during test:
    ---------------------------

    EnumerableAddressSetMock.OperationResult(
      result: false (type: bool)
    )


    ---------------------------
        627) adds and removes multiple values

    Events emitted during test:
    ---------------------------

    EnumerableAddressSetMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableAddressSetMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableAddressSetMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableAddressSetMock.OperationResult(
      result: false (type: bool)
    )

    EnumerableAddressSetMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableAddressSetMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableAddressSetMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableAddressSetMock.OperationResult(
      result: false (type: bool)
    )

    EnumerableAddressSetMock.OperationResult(
      result: false (type: bool)
    )

    EnumerableAddressSetMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableAddressSetMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableAddressSetMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableAddressSetMock.OperationResult(
      result: true (type: bool)
    )


    ---------------------------
    EnumerableUintSet
      628) starts empty
    > No events were emitted
      add
        629) adds a value

    Events emitted during test:
    ---------------------------

    EnumerableUintSetMock.OperationResult(
      result: true (type: bool)
    )


    ---------------------------
        630) adds several values

    Events emitted during test:
    ---------------------------

    EnumerableUintSetMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableUintSetMock.OperationResult(
      result: true (type: bool)
    )


    ---------------------------
        631) returns false when adding values already in the set

    Events emitted during test:
    ---------------------------

    EnumerableUintSetMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableUintSetMock.OperationResult(
      result: false (type: bool)
    )


    ---------------------------
      at
        632) reverts when retrieving non-existent elements
    > No events were emitted
      remove
        633) removes added values

    Events emitted during test:
    ---------------------------

    EnumerableUintSetMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableUintSetMock.OperationResult(
      result: true (type: bool)
    )


    ---------------------------
        634) returns false when removing values not in the set

    Events emitted during test:
    ---------------------------

    EnumerableUintSetMock.OperationResult(
      result: false (type: bool)
    )


    ---------------------------
        635) adds and removes multiple values

    Events emitted during test:
    ---------------------------

    EnumerableUintSetMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableUintSetMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableUintSetMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableUintSetMock.OperationResult(
      result: false (type: bool)
    )

    EnumerableUintSetMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableUintSetMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableUintSetMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableUintSetMock.OperationResult(
      result: false (type: bool)
    )

    EnumerableUintSetMock.OperationResult(
      result: false (type: bool)
    )

    EnumerableUintSetMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableUintSetMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableUintSetMock.OperationResult(
      result: true (type: bool)
    )

    EnumerableUintSetMock.OperationResult(
      result: true (type: bool)
    )


    ---------------------------

  Contract: Pausable
    when unpaused
      636) "before each" hook for "can perform normal process in non-pause"

  Contract: ReentrancyGuard
    637) "before each" hook for "does not allow remote callback"

  Contract: SafeCast
    toUint8
      638) "before each" hook: before test for "downcasts 0"

  Contract: Strings
    from uint256
      639) converts 0
    > No events were emitted
      640) converts a positive number
    > No events were emitted
      641) converts MAX_UINT256
    > No events were emitted


  104 passing (1h)
  1 pending
  641 failing

  1) Contract: AccessControl
       default admin
         deployer has default admin role:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/access/AccessControl.test.js:20:39)
      at processImmediate (internal/timers.js:461:21)

  2) Contract: AccessControl
       default admin
         other roles's admin is the default admin role:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/access/AccessControl.test.js:24:39)
      at processImmediate (internal/timers.js:461:21)

  3) Contract: AccessControl
       default admin
         default admin role's admin is itself:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/access/AccessControl.test.js:28:39)
      at processImmediate (internal/timers.js:461:21)

  4) Contract: AccessControl
       granting
         admin can grant role to other accounts:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/access/AccessControl.test.js:37:39)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  5) Contract: AccessControl
       granting
         non-admin cannot grant role to other accounts:

      Wrong kind of exception received
      + expected - actual

      -Returned error: qtum [code: -4] Private key not available
      +AccessControl: sender must be an admin to grant

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/access/AccessControl.test.js:41:7)

  6) Contract: AccessControl
       revoking
         roles that are not had can be revoked:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/access/AccessControl.test.js:56:39)
      at processImmediate (internal/timers.js:461:21)

  7) Contract: AccessControl
       revoking
         with granted role
           admin can revoke role:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/access/AccessControl.test.js:71:41)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  8) Contract: AccessControl
       revoking
         with granted role
           non-admin cannot revoke role:

      Wrong kind of exception received
      + expected - actual

      -Returned error: qtum [code: -4] Private key not available
      +AccessControl: sender must be an admin to revoke

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/access/AccessControl.test.js:75:9)

  9) Contract: AccessControl
       renouncing
         with granted role
           bearer can renounce role:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/access/AccessControl.test.js:105:41)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  10) Contract: AccessControl
       renouncing
         with granted role
           only the sender can renounce their roles:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x79b5dd9a2f38b4d95f04384c2ff6d700becaea2421aa60c04ffeba17fd95ceb9 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +AccessControl: can only renounce roles for self

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/access/AccessControl.test.js:109:9)

  11) Contract: AccessControl
       enumerating
         role bearers can be enumerated:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/access/AccessControl.test.js:129:52)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  12) Contract: AccessControl
       setting role admin
         a role's admin role can be changed:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/access/AccessControl.test.js:154:39)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  13) Contract: AccessControl
       setting role admin
         the new admin can grant roles:
     Error: Returned error: qtum [code: -4] Private key not available
      at Context.<anonymous> (test/access/AccessControl.test.js:158:48)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  14) Contract: AccessControl
       setting role admin
         the new admin can revoke roles:
     Error: Returned error: qtum [code: -4] Private key not available
      at Context.<anonymous> (test/access/AccessControl.test.js:163:32)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  15) Contract: AccessControl
       setting role admin
         a role's previous admins no longer grant roles:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x26e0bc39fbb7de340b7bd21af2e71e473d875275e26a53357736276aa29e5ac2 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +AccessControl: sender must be an admin to grant

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/access/AccessControl.test.js:169:7)

  16) Contract: AccessControl
       setting role admin
         a role's previous admins no longer revoke roles:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x2dd511706e5e4009e380e8847d6aac231bf121577fe527e7c451f9fb44471ec3 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +AccessControl: sender must be an admin to revoke

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/access/AccessControl.test.js:176:7)

  17) Contract: Ownable
       "before each" hook for "has an owner":
     Error: Returned error: invalid character 'W' looking for beginning of value
      at Context.<anonymous> (test/access/Ownable.test.js:12:37)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  18) Contract: TimelockController
       initial state:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/access/TimelockController.test.js:62:32)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  19) Contract: TimelockController
       methods
         operation hashing
           hashOperation:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/access/TimelockController.test.js:75:36)
      at processImmediate (internal/timers.js:461:21)

  20) Contract: TimelockController
       methods
         operation hashing
           hashOperationBatch:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/access/TimelockController.test.js:92:36)
      at processImmediate (internal/timers.js:461:21)

  21) Contract: TimelockController
       methods
         simple
           schedule
             proposer can schedule:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/access/TimelockController.test.js:135:38)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  22) Contract: TimelockController
       methods
         simple
           schedule
             prevent overwritting active operation:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xc821ecada1fc1d951449822d8052ad17080c577264aaf88b9a5999906ce74ed0 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +TimelockController: operation already scheduled

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/access/TimelockController.test.js:150:11)

  23) Contract: TimelockController
       methods
         simple
           schedule
             prevent non-proposer from commiting:

      Wrong kind of exception received
      + expected - actual

      -Returned error: qtum [code: -4] Private key not available
      +TimelockController: sender requires permission

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/access/TimelockController.test.js:165:11)

  24) Contract: TimelockController
       methods
         simple
           schedule
             enforce minimum delay:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x25763a62f79dd2ca233061e60bb7dabb404586b77ecd5020ddcf5557cd99d5ae exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +TimelockController: insufficient delay

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/access/TimelockController.test.js:180:11)

  25) Contract: TimelockController
       methods
         simple
           execute
             revert if operation is not scheduled:

      Wrong kind of exception received
      + expected - actual

      -Returned error: qtum [code: -4] Private key not available
      +TimelockController: operation is not ready

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/access/TimelockController.test.js:207:11)

  26) Contract: TimelockController
       methods
         simple
           execute
             with scheduled operation
               revert if execution comes too early 1/2:

      Wrong kind of exception received
      + expected - actual

      -Returned error: qtum [code: -4] Private key not available
      +TimelockController: operation is not ready

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/access/TimelockController.test.js:234:13)

  27) Contract: TimelockController
       methods
         simple
           execute
             with scheduled operation
               revert if execution comes too early 2/2:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/access/TimelockController.test.js:248:51)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  28) Contract: TimelockController
       methods
         simple
           execute
             with scheduled operation
               on time
                 "before each" hook for "executor can reveal":
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/access/TimelockController.test.js:266:53)
      at processImmediate (internal/timers.js:461:21)

  29) Contract: TimelockController
       methods
         batch
           schedule
             proposer can schedule:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/access/TimelockController.test.js:342:38)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  30) Contract: TimelockController
       methods
         batch
           schedule
             prevent overwritting active operation:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xcef7f72197ccfcbbe256dedb9cb31e0818ae5ddc3236caf9aab2ac6335af5d32 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +TimelockController: operation already scheduled

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/access/TimelockController.test.js:357:11)

  31) Contract: TimelockController
       methods
         batch
           schedule
             prevent non-proposer from commiting:

      Wrong kind of exception received
      + expected - actual

      -Returned error: qtum [code: -4] Private key not available
      +TimelockController: sender requires permission

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/access/TimelockController.test.js:372:11)

  32) Contract: TimelockController
       methods
         batch
           schedule
             enforce minimum delay:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x6931cdf3c8baad7336dcb0b61194f792b0b941552dd3c1dc8d8adc3bc6cfefcf exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +TimelockController: insufficient delay

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/access/TimelockController.test.js:387:11)

  33) Contract: TimelockController
       methods
         batch
           execute
             revert if operation is not scheduled:

      Wrong kind of exception received
      + expected - actual

      -Returned error: qtum [code: -4] Private key not available
      +TimelockController: operation is not ready

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/access/TimelockController.test.js:414:11)

  34) Contract: TimelockController
       methods
         batch
           execute
             partial execution:

      Wrong kind of exception received
      + expected - actual

      -Returned error: qtum [code: -4] Private key not available
      +TimelockController: underlying transaction reverted

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/access/TimelockController.test.js:586:11)

  35) Contract: TimelockController
       methods
         batch
           execute
             with scheduled operation
               revert if execution comes too early 1/2:

      Wrong kind of exception received
      + expected - actual

      -Returned error: qtum [code: -4] Private key not available
      +TimelockController: operation is not ready

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/access/TimelockController.test.js:441:13)

  36) Contract: TimelockController
       "before each" hook for "revert if execution comes too early 2/2":
     Error: Returned error: invalid character 'W' looking for beginning of value
      at Context.<anonymous> (test/access/TimelockController.test.js:58:53)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  37) Contract: ECDSA
       recover with invalid signature
         with short signature:

      Wrong kind of exception received
      + expected - actual

      -Returned error: VM exception: OutOfGasIntrinsic
      +ECDSA: invalid signature length

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/cryptography/ECDSA.test.js:20:7)

  38) Contract: ECDSA
       recover with invalid signature
         with long signature:

      Wrong kind of exception received
      + expected - actual

      -Returned error: VM exception: OutOfGasIntrinsic
      +ECDSA: invalid signature length

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/cryptography/ECDSA.test.js:24:7)

  39) Contract: ECDSA
       recover with valid signature
         with v0 signature
           with 00 as version value
             reverts:

      Wrong kind of exception received
      + expected - actual

      -Returned error: VM exception: OutOfGasIntrinsic
      +ECDSA: invalid signature 'v' value

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/cryptography/ECDSA.test.js:43:11)

  40) Contract: ECDSA
       recover with valid signature
         with v0 signature
           with 27 as version value
             works:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/cryptography/ECDSA.test.js:51:35)
      at processImmediate (internal/timers.js:461:21)

  41) Contract: ECDSA
       recover with valid signature
         with v0 signature
           with wrong version
             reverts:

      Wrong kind of exception received
      + expected - actual

      -Returned error: VM exception: OutOfGasIntrinsic
      +ECDSA: invalid signature 'v' value

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/cryptography/ECDSA.test.js:61:11)

  42) Contract: ECDSA
       recover with valid signature
         with v1 signature
           with 01 as version value
             reverts:

      Wrong kind of exception received
      + expected - actual

      -Returned error: VM exception: OutOfGasIntrinsic
      +ECDSA: invalid signature 'v' value

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/cryptography/ECDSA.test.js:75:11)

  43) Contract: ECDSA
       recover with valid signature
         with v1 signature
           with 28 as version value
             works:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/cryptography/ECDSA.test.js:83:35)
      at processImmediate (internal/timers.js:461:21)

  44) Contract: ECDSA
       recover with valid signature
         with v1 signature
           with wrong version
             reverts:

      Wrong kind of exception received
      + expected - actual

      -Returned error: VM exception: OutOfGasIntrinsic
      +ECDSA: invalid signature 'v' value

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/cryptography/ECDSA.test.js:93:11)

  45) Contract: ECDSA
       recover with valid signature
         with high-s value signature
           reverts:

      Wrong kind of exception received
      + expected - actual

      -Returned error: VM exception: OutOfGasIntrinsic
      +ECDSA: invalid signature 's' value

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/cryptography/ECDSA.test.js:104:9)

  46) Contract: ECDSA
       recover with valid signature
         using web3.eth.sign
           with correct signature
             returns signer address:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/cryptography/ECDSA.test.js:115:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  47) Contract: ECDSA
       recover with valid signature
         using web3.eth.sign
           with wrong message
             returns a different address:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/cryptography/ECDSA.test.js:125:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  48) Contract: ECDSA
       recover with valid signature
         using web3.eth.sign
           with invalid signature
             reverts:

      Wrong kind of exception received
      + expected - actual

      -Returned error: VM exception: OutOfGasIntrinsic
      +ECDSA: invalid signature

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/cryptography/ECDSA.test.js:133:11)

  49) Contract: ECDSA
       toEthSignedMessage
         should prefix hashes correctly:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/cryptography/ECDSA.test.js:141:31)
      at processImmediate (internal/timers.js:461:21)

  50) Contract: MerkleProof
       "before each" hook: before test for "returns true for a valid Merkle proof":
     Error: Returned error: invalid character 'W' looking for beginning of value
      at Object.ErrorResponse (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1
      at XMLHttpRequest.request.onreadystatechange (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (internal/streams/readable.js:1327:12)
      at processTicksAndRejections (internal/process/task_queues.js:80:21)

  51) Contract: EIP712
       "before each" hook: deploying for "domain separator":
     Error: Timeout of 300000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/drafts/EIP712.test.js)
      at listOnTimeout (internal/timers.js:554:17)
      at processTimers (internal/timers.js:497:7)

  52) Contract: ERC20Permit
       "before each" hook for "initial nonce is 0":
     Error: Timeout of 300000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/drafts/ERC20Permit.test.js)
      at listOnTimeout (internal/timers.js:554:17)
      at processTimers (internal/timers.js:497:7)

  53) Contract: ERC165
       does not allow 0xffffffff:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xd387acf961358b5aee8405a1b210dc3e6050513946d1a7685ab3881c35a70618 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC165: invalid interface id

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/introspection/ERC165.test.js:13:5)

  54) Contract: ERC165
       Contract interface
         ERC165
           ERC165's supportsInterface(bytes4)
             claims support:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/introspection/SupportsInterface.behavior.js:69:49)
      at processImmediate (internal/timers.js:461:21)

  55) Contract: ERC165Checker
       ERC165 not supported
         does not support ERC165:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/introspection/ERC165Checker.test.js:27:41)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  56) Contract: ERC165Checker
       ERC165 not supported
         does not support mock interface via supportsInterface:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/introspection/ERC165Checker.test.js:32:41)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  57) Contract: ERC165Checker
       ERC165 not supported
         does not support mock interface via supportsAllInterfaces:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/introspection/ERC165Checker.test.js:37:41)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  58) Contract: ERC165Checker
       ERC165 not supported
         does not support mock interface via getSupportedInterfaces:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/introspection/ERC165Checker.test.js:42:41)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  59) Contract: ERC165Checker
       ERC165 supported
         supports ERC165:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/introspection/ERC165Checker.test.js:54:41)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  60) Contract: ERC165Checker
       ERC165 supported
         does not support mock interface via supportsInterface:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/introspection/ERC165Checker.test.js:59:41)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  61) Contract: ERC165Checker
       ERC165 supported
         does not support mock interface via supportsAllInterfaces:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/introspection/ERC165Checker.test.js:64:41)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  62) Contract: ERC165Checker
       ERC165 supported
         does not support mock interface via getSupportedInterfaces:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/introspection/ERC165Checker.test.js:69:41)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  63) Contract: ERC165Checker
       ERC165 and single interface supported
         supports ERC165:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/introspection/ERC165Checker.test.js:81:41)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  64) Contract: ERC165Checker
       ERC165 and single interface supported
         supports mock interface via supportsInterface:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/introspection/ERC165Checker.test.js:86:41)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  65) Contract: ERC165Checker
       ERC165 and single interface supported
         supports mock interface via supportsAllInterfaces:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/introspection/ERC165Checker.test.js:91:41)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  66) Contract: ERC165Checker
       ERC165 and single interface supported
         supports mock interface via getSupportedInterfaces:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/introspection/ERC165Checker.test.js:96:41)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  67) Contract: ERC165Checker
       ERC165 and many interfaces supported
         supports ERC165:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/introspection/ERC165Checker.test.js:109:41)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  68) Contract: ERC165Checker
       ERC165 and many interfaces supported
         supports each interfaceId via supportsInterface:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/introspection/ERC165Checker.test.js:115:43)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  69) Contract: ERC165Checker
       ERC165 and many interfaces supported
         supports all interfaceIds via supportsAllInterfaces:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/introspection/ERC165Checker.test.js:121:41)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  70) Contract: ERC165Checker
       ERC165 and many interfaces supported
         supports none of the interfaces queried via supportsAllInterfaces:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/introspection/ERC165Checker.test.js:128:41)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  71) Contract: ERC165Checker
       ERC165 and many interfaces supported
         supports not all of the interfaces queried via supportsAllInterfaces:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/introspection/ERC165Checker.test.js:135:41)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  72) Contract: ERC165Checker
       ERC165 and many interfaces supported
         supports all interfaceIds via getSupportedInterfaces:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/introspection/ERC165Checker.test.js:140:41)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  73) Contract: ERC165Checker
       ERC165 and many interfaces supported
         supports none of the interfaces queried via getSupportedInterfaces:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/introspection/ERC165Checker.test.js:150:41)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  74) Contract: ERC165Checker
       ERC165 and many interfaces supported
         supports not all of the interfaces queried via getSupportedInterfaces:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/introspection/ERC165Checker.test.js:159:41)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  75) Contract: ERC165Checker
       account address does not support ERC165
         does not support ERC165:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/introspection/ERC165Checker.test.js:170:41)
      at processImmediate (internal/timers.js:461:21)

  76) Contract: ERC165Checker
       account address does not support ERC165
         does not support mock interface via supportsInterface:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/introspection/ERC165Checker.test.js:175:41)
      at processImmediate (internal/timers.js:461:21)

  77) Contract: ERC165Checker
       account address does not support ERC165
         does not support mock interface via supportsAllInterfaces:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/introspection/ERC165Checker.test.js:180:41)
      at processImmediate (internal/timers.js:461:21)

  78) Contract: ERC165Checker
       account address does not support ERC165
         does not support mock interface via getSupportedInterfaces:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/introspection/ERC165Checker.test.js:185:41)
      at processImmediate (internal/timers.js:461:21)

  79) Contract: ERC1820Implementer
       "before each" hook for "returns false when interface implementation is queried":
     Error: Returned error: invalid address
      at Object.ErrorResponse (node_modules/web3/node_modules/web3-core-helpers/lib/errors.js:28:19)
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/node_modules/web3/node_modules/web3-core-requestmanager/lib/index.js:303:36
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1
      at XMLHttpRequest.request.onreadystatechange (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (internal/streams/readable.js:1327:12)
      at processTicksAndRejections (internal/process/task_queues.js:80:21)

  80) Contract: Math
       max
         is correctly detected in first argument position:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/math/Math.test.js:17:30)
      at processImmediate (internal/timers.js:461:21)

  81) Contract: Math
       max
         is correctly detected in second argument position:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/math/Math.test.js:21:30)
      at processImmediate (internal/timers.js:461:21)

  82) Contract: Math
       min
         is correctly detected in first argument position:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/math/Math.test.js:27:30)
      at processImmediate (internal/timers.js:461:21)

  83) Contract: Math
       min
         is correctly detected in second argument position:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/math/Math.test.js:31:30)
      at processImmediate (internal/timers.js:461:21)

  84) Contract: Math
       average
         is correctly calculated with two odd numbers:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/math/Math.test.js:43:30)
      at processImmediate (internal/timers.js:461:21)

  85) Contract: Math
       average
         is correctly calculated with two even numbers:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/math/Math.test.js:49:30)
      at processImmediate (internal/timers.js:461:21)

  86) Contract: Math
       average
         is correctly calculated with one even and one odd number:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/math/Math.test.js:55:30)
      at processImmediate (internal/timers.js:461:21)

  87) Contract: SafeMath
       "before each" hook for "reverts on addition overflow":
     Uncaught RuntimeError: abort(Error: Returned error: VM exception: OutOfGasIntrinsic). Build with -s ASSERTIONS=1 for more info.
      at process.abort (/home/dferrer/.config/truffle/compilers/node_modules/soljson-v0.6.12+commit.27d51765.js:1:13938)
      at process.emit (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/source-map-support/source-map-support.js:495:1)
      at process.emit (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/source-map-support/source-map-support.js:495:1)
      at processEmit [as emit] (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/signal-exit/index.js:155:1)
      at processPromiseRejections (internal/process/promises.js:245:33)
      at processTicksAndRejections (internal/process/task_queues.js:94:32)

  88) Contract: SignedSafeMath
       "before each" hook for "adds correctly if it does not overflow and the result is positive":
     Error: Returned error: invalid character 'W' looking for beginning of value
      at Context.<anonymous> (test/math/SignedSafeMath.test.js:10:49)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  89) Contract: SafeMath
       "before each" hook for "reverts on addition overflow":
     Error: done() called multiple times in hook <Contract: SafeMath "before each" hook for "reverts on addition overflow"> of file /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/math/SafeMath.test.js
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  90) Contract: ConditionalEscrow
       when withdrawal is allowed
         as an escrow
           deposits
             can accept a single deposit:
     Error: Returned error: qtum [code: -3] Invalid amount
      at Context.<anonymous> (test/payment/escrow/Escrow.behavior.js:11:27)
      at processImmediate (internal/timers.js:461:21)

  91) Contract: ConditionalEscrow
       when withdrawal is allowed
         as an escrow
           deposits
             only the owner can deposit:

      Wrong kind of exception received
      + expected - actual

      -Returned error: qtum [code: -4] Private key not available
      +Ownable: caller is not the owner

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/payment/escrow/Escrow.behavior.js:23:9)

  92) Contract: ConditionalEscrow
       when withdrawal is allowed
         as an escrow
           deposits
             emits a deposited event:
     Error: Returned error: invalid character 'W' looking for beginning of value
      at Context.<anonymous> (test/payment/escrow/Escrow.behavior.js:29:44)
      at processImmediate (internal/timers.js:461:21)

  93) Contract: ConditionalEscrow
       when withdrawal is allowed
         as an escrow
           deposits
             can add multiple deposits on a single account:
     Error: Returned error: qtum [code: -3] Invalid amount
      at Context.<anonymous> (test/payment/escrow/Escrow.behavior.js:37:27)
      at processImmediate (internal/timers.js:461:21)

  94) Contract: ConditionalEscrow
       when withdrawal is allowed
         as an escrow
           deposits
             can track deposits to multiple accounts:
     Error: Returned error: qtum [code: -3] Invalid amount
      at Context.<anonymous> (test/payment/escrow/Escrow.behavior.js:46:27)
      at processImmediate (internal/timers.js:461:21)

  95) Contract: ConditionalEscrow
       when withdrawal is allowed
         as an escrow
           withdrawals
             can withdraw payments:
     Error: Returned error: qtum [code: -3] Invalid amount
      at Context.<anonymous> (test/payment/escrow/Escrow.behavior.js:61:27)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  96) Contract: ConditionalEscrow
       when withdrawal is allowed
         as an escrow
           withdrawals
             can do an empty withdrawal:
     Transaction: 0x01c4368dd1a309ee8986d85876b68fef2eaf84378fb43174a7ea9deb4d07527f exited with an error (status 0) after consuming all gas.
     Please check that the transaction:
     - satisfies all conditions set by Solidity `assert` statements.
     - has enough gas to execute the full transaction.
     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
  StatusError: Transaction: 0x01c4368dd1a309ee8986d85876b68fef2eaf84378fb43174a7ea9deb4d07527f exited with an error (status 0) after consuming all gas.
      at Context.<anonymous> (test/payment/escrow/Escrow.behavior.js:71:27)
      at processImmediate (internal/timers.js:461:21)

  97) Contract: ConditionalEscrow
       when withdrawal is allowed
         as an escrow
           withdrawals
             only the owner can withdraw:

      Wrong kind of exception received
      + expected - actual

      -Returned error: qtum [code: -4] Private key not available
      +Ownable: caller is not the owner

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/payment/escrow/Escrow.behavior.js:75:9)

  98) Contract: ConditionalEscrow
       when withdrawal is allowed
         as an escrow
           withdrawals
             emits a withdrawn event:
     Error: Returned error: qtum [code: -3] Invalid amount
      at Context.<anonymous> (test/payment/escrow/Escrow.behavior.js:81:27)
      at processImmediate (internal/timers.js:461:21)

  99) Contract: ConditionalEscrow
       when withdrawal is disallowed
         reverts on withdrawals:
     Error: Returned error: qtum [code: -3] Invalid amount
      at Context.<anonymous> (test/payment/escrow/ConditionalEscrow.test.js:29:25)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  100) Contract: Escrow
       as an escrow
         deposits
           can accept a single deposit:
     Error: Returned error: qtum [code: -3] Invalid amount
      at Context.<anonymous> (test/payment/escrow/Escrow.behavior.js:11:27)
      at processImmediate (internal/timers.js:461:21)

  101) Contract: Escrow
       as an escrow
         deposits
           only the owner can deposit:

      Wrong kind of exception received
      + expected - actual

      -Returned error: qtum [code: -4] Private key not available
      +Ownable: caller is not the owner

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/payment/escrow/Escrow.behavior.js:23:9)

  102) Contract: Escrow
       as an escrow
         deposits
           emits a deposited event:
     Error: Returned error: qtum [code: -3] Invalid amount
      at Context.<anonymous> (test/payment/escrow/Escrow.behavior.js:29:44)
      at processImmediate (internal/timers.js:461:21)

  103) Contract: Escrow
       as an escrow
         deposits
           can add multiple deposits on a single account:
     Error: Returned error: qtum [code: -3] Invalid amount
      at Context.<anonymous> (test/payment/escrow/Escrow.behavior.js:37:27)
      at processImmediate (internal/timers.js:461:21)

  104) Contract: Escrow
       as an escrow
         deposits
           can track deposits to multiple accounts:
     Error: Returned error: qtum [code: -3] Invalid amount
      at Context.<anonymous> (test/payment/escrow/Escrow.behavior.js:46:27)
      at processImmediate (internal/timers.js:461:21)

  105) Contract: Escrow
       as an escrow
         withdrawals
           can withdraw payments:
     Error: Returned error: precision error:  float64 value does not represent the original decimal precisely
      at Object.ErrorResponse (node_modules/web3/node_modules/web3-core-helpers/lib/errors.js:28:19)
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/node_modules/web3/node_modules/web3-core-requestmanager/lib/index.js:303:36
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1
      at XMLHttpRequest.request.onreadystatechange (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (internal/streams/readable.js:1327:12)
      at processTicksAndRejections (internal/process/task_queues.js:80:21)

  106) Contract: Escrow
       as an escrow
         withdrawals
           can do an empty withdrawal:
     Transaction: 0x9411d7474c78d062e3b149ac3f94a34ad017feef04f69f0d123e1968f90f652b exited with an error (status 0) after consuming all gas.
     Please check that the transaction:
     - satisfies all conditions set by Solidity `assert` statements.
     - has enough gas to execute the full transaction.
     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
  StatusError: Transaction: 0x9411d7474c78d062e3b149ac3f94a34ad017feef04f69f0d123e1968f90f652b exited with an error (status 0) after consuming all gas.
      at Context.<anonymous> (test/payment/escrow/Escrow.behavior.js:71:27)
      at processImmediate (internal/timers.js:461:21)

  107) Contract: Escrow
       as an escrow
         withdrawals
           only the owner can withdraw:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xd074e5463a8f485c60e76267e006315dd30665e656749caf87caa7c6a1cced28 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +Ownable: caller is not the owner

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/payment/escrow/Escrow.behavior.js:75:9)

  108) Contract: Escrow
       as an escrow
         withdrawals
           emits a withdrawn event:
     Error: Returned error: invalid character 'W' looking for beginning of value
      at Context.<anonymous> (test/payment/escrow/Escrow.behavior.js:81:27)
      at processImmediate (internal/timers.js:461:21)

  109) Contract: RefundEscrow
       "before each" hook: before test for "requires a non-null beneficiary":
     Error: Returned error: invalid character 'W' looking for beginning of value
      at Object.ErrorResponse (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1
      at XMLHttpRequest.request.onreadystatechange (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (internal/streams/readable.js:1327:12)
      at processTicksAndRejections (internal/process/task_queues.js:80:21)

  110) Contract: PaymentSplitter
       "before each" hook: before test for "rejects an empty set of payees":
     Error: Returned error: invalid character 'W' looking for beginning of value
      at Object.ErrorResponse (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1
      at XMLHttpRequest.request.onreadystatechange (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (internal/streams/readable.js:1327:12)
      at processTicksAndRejections (internal/process/task_queues.js:80:21)

  111) Contract: PullPayment
       payments
         can record an async payment correctly:
     Transaction: 0xa7f3f6839b97a623782487eb560d6014c67ac9aa3d8d1364573a233c0454d573 exited with an error (status 0).
     Please check that the transaction:
     - satisfies all conditions set by Solidity `require` statements.
     - does not trigger a Solidity `revert` statement.

  StatusError: Transaction: 0xa7f3f6839b97a623782487eb560d6014c67ac9aa3d8d1364573a233c0454d573 exited with an error (status 0).
      at Context.<anonymous> (test/payment/PullPayment.test.js:18:27)
      at processImmediate (internal/timers.js:461:21)

  112) Contract: PullPayment
       payments
         can add multiple balances on one account:
     Transaction: 0x04c8a66484a97add949a9b5148196bf5f8212be7600f2a5ad89d2156a8bdf13d exited with an error (status 0).
     Please check that the transaction:
     - satisfies all conditions set by Solidity `require` statements.
     - does not trigger a Solidity `revert` statement.

  StatusError: Transaction: 0x04c8a66484a97add949a9b5148196bf5f8212be7600f2a5ad89d2156a8bdf13d exited with an error (status 0).
      at Context.<anonymous> (test/payment/PullPayment.test.js:23:27)
      at processImmediate (internal/timers.js:461:21)

  113) Contract: PullPayment
       payments
         can add balances on multiple accounts:
     Transaction: 0x44946a6d550b4239339e3c6b5587f0a5ff87200acee9f40a91023a9bfafb5a8c exited with an error (status 0).
     Please check that the transaction:
     - satisfies all conditions set by Solidity `require` statements.
     - does not trigger a Solidity `revert` statement.

  StatusError: Transaction: 0x44946a6d550b4239339e3c6b5587f0a5ff87200acee9f40a91023a9bfafb5a8c exited with an error (status 0).
      at Context.<anonymous> (test/payment/PullPayment.test.js:29:27)
      at processImmediate (internal/timers.js:461:21)

  114) Contract: PullPayment
       "before each" hook for "can withdraw payment":
     Error: Returned error: invalid character 'W' looking for beginning of value
      at Context.<anonymous> (test/payment/PullPayment.test.js:13:46)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  115) Contract: ERC1155PresetMinterPauser
       deployer has the default admin role:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/presets/ERC1155PresetMinterPauser.test.js:28:29)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  116) Contract: ERC1155PresetMinterPauser
       deployer has the minter role:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/presets/ERC1155PresetMinterPauser.test.js:33:29)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  117) Contract: ERC1155PresetMinterPauser
       deployer has the pauser role:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/presets/ERC1155PresetMinterPauser.test.js:38:29)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  118) Contract: ERC1155PresetMinterPauser
       minter and pauser role admin is the default admin:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/presets/ERC1155PresetMinterPauser.test.js:43:29)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  119) Contract: ERC1155PresetMinterPauser
       minting
         deployer can mint tokens:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/presets/ERC1155PresetMinterPauser.test.js:54:31)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  120) Contract: ERC1155PresetMinterPauser
       minting
         other accounts cannot mint tokens:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x4977c5f31d82086b9d68861bf2079126eebcde7f8ae4abf7f0ae9ba5dce1b091 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC1155PresetMinterPauser: must have minter role to mint

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/presets/ERC1155PresetMinterPauser.test.js:58:7)

  121) Contract: ERC1155PresetMinterPauser
       batched minting
         deployer can batch mint tokens:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/presets/ERC1155PresetMinterPauser.test.js:75:31)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  122) Contract: ERC1155PresetMinterPauser
       batched minting
         other accounts cannot batch mint tokens:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x831bac9d6304bf63790d9f980f185ab9daf2352b2af5908b8c1d2fe6df9c1d7f exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC1155PresetMinterPauser: must have minter role to mint

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/presets/ERC1155PresetMinterPauser.test.js:79:7)

  123) Contract: ERC1155PresetMinterPauser
       pausing
         deployer can pause:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/presets/ERC1155PresetMinterPauser.test.js:93:31)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  124) Contract: ERC1155PresetMinterPauser
       pausing
         deployer can unpause:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/presets/ERC1155PresetMinterPauser.test.js:102:31)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  125) Contract: ERC1155PresetMinterPauser
       pausing
         cannot mint while paused:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x332c48805d620bfd042b6af617ddf6cefe5d6381721ca2ba0d1d55e48ff625f6 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC1155Pausable: token transfer while paused

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/presets/ERC1155PresetMinterPauser.test.js:108:7)

  126) Contract: ERC1155PresetMinterPauser
       pausing
         other accounts cannot pause:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x76233aeb5ee7ff354d88eb38512f65719d0831439bfa0b5e79059203110399e7 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC1155PresetMinterPauser: must have pauser role to pause

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/presets/ERC1155PresetMinterPauser.test.js:115:7)

  127) Contract: ERC1155PresetMinterPauser
       burning
         holders can burn their tokens:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/presets/ERC1155PresetMinterPauser.test.js:131:31)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  128) Contract: ERC20PresetFixedSupply
       "before all" hook for "deployer has the balance equal to initial supply":
     Error: Returned error: invalid character 'W' looking for beginning of value
      at Context.<anonymous> (test/presets/ERC20PresetFixedSupply.test.js:18:50)

  129) Contract: ERC20PresetMinterPauser
       deployer has the default admin role:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/presets/ERC20PresetMinterPauser.test.js:25:29)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  130) Contract: ERC20PresetMinterPauser
       deployer has the minter role:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/presets/ERC20PresetMinterPauser.test.js:30:29)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  131) Contract: ERC20PresetMinterPauser
       deployer has the pauser role:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/presets/ERC20PresetMinterPauser.test.js:35:29)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  132) Contract: ERC20PresetMinterPauser
       minter and pauser role admin is the default admin:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/presets/ERC20PresetMinterPauser.test.js:40:29)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  133) Contract: ERC20PresetMinterPauser
       minting
         deployer can mint tokens:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/presets/ERC20PresetMinterPauser.test.js:49:31)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  134) Contract: ERC20PresetMinterPauser
       minting
         other accounts cannot mint tokens:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x4a15a28c2902dcc9a6907f7b5d93e90f38787c898445db0a9069d7b55fe31e34 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC20PresetMinterPauser: must have minter role to mint

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/presets/ERC20PresetMinterPauser.test.js:53:7)

  135) Contract: ERC20PresetMinterPauser
       pausing
         deployer can pause:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/presets/ERC20PresetMinterPauser.test.js:65:31)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  136) Contract: ERC20PresetMinterPauser
       pausing
         deployer can unpause:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/presets/ERC20PresetMinterPauser.test.js:74:31)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  137) Contract: ERC20PresetMinterPauser
       pausing
         cannot mint while paused:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x412a5a23d9cee210f4e72deb4e3e2f80e036880b3a558debe7453bb054a7bb66 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC20Pausable: token transfer while paused

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/presets/ERC20PresetMinterPauser.test.js:80:7)

  138) Contract: ERC20PresetMinterPauser
       pausing
         other accounts cannot pause:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x88e122e65f35da534e6f81e31df0b4cd31a75654f720874814e8555a6edfde0a exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC20PresetMinterPauser: must have pauser role to pause

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/presets/ERC20PresetMinterPauser.test.js:87:7)

  139) Contract: ERC20PresetMinterPauser
       burning
         holders can burn their tokens:
     Error: Returned error: invalid character 'W' looking for beginning of value
      at Context.<anonymous> (test/presets/ERC20PresetMinterPauser.test.js:93:24)
      at processImmediate (internal/timers.js:461:21)

  140) Contract: ERC721PresetMinterPauserAutoId
       "before each" hook for "token has correct name":
     Error: Returned error: invalid character 'W' looking for beginning of value
      at Context.<anonymous> (test/presets/ERC721PresetMinterPauserAutoId.test.js:19:58)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  141) Contract: ERC777PresetFixedSupply
       "before all" hook for "returns the name":
     Error: Returned error: invalid address
      at Object.ErrorResponse (node_modules/web3/node_modules/web3-core-helpers/lib/errors.js:28:19)
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/node_modules/web3/node_modules/web3-core-requestmanager/lib/index.js:303:36
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1
      at XMLHttpRequest.request.onreadystatechange (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (internal/streams/readable.js:1327:12)
      at processTicksAndRejections (internal/process/task_queues.js:80:21)

  142) Contract: BeaconProxy
       upgrade a proxy by upgrading its beacon:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/BeaconProxy.test.js:117:24)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  143) Contract: BeaconProxy
       upgrade 2 proxies by upgrading shared beacon:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/BeaconProxy.test.js:149:25)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  144) Contract: BeaconProxy
       bad beacon is not accepted
         non-contract beacon:
     Error: Timeout of 300000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/proxy/BeaconProxy.test.js)
      at listOnTimeout (internal/timers.js:554:17)
      at processTimers (internal/timers.js:497:7)

  145) Contract: BeaconProxy
       bad beacon is not accepted
         non-compliant beacon:
     Error: Timeout of 300000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/proxy/BeaconProxy.test.js)
      at listOnTimeout (internal/timers.js:554:17)
      at processTimers (internal/timers.js:497:7)

  146) Contract: BeaconProxy
       bad beacon is not accepted
         non-contract implementation:
     Error: Timeout of 300000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/proxy/BeaconProxy.test.js)
      at listOnTimeout (internal/timers.js:554:17)
      at processTimers (internal/timers.js:497:7)

  147) Contract: BeaconProxy
       initialization
         no initialization:
     Error: Returned error: method eth_getStorageAt is unsupported
      at Object.ErrorResponse (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1
      at XMLHttpRequest.request.onreadystatechange (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (internal/streams/readable.js:1327:12)
      at processTicksAndRejections (internal/process/task_queues.js:80:21)

  148) Contract: BeaconProxy
       initialization
         non-payable initialization:
     Error: Returned error: method eth_getStorageAt is unsupported
      at Object.ErrorResponse (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1
      at XMLHttpRequest.request.onreadystatechange (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (internal/streams/readable.js:1327:12)
      at processTicksAndRejections (internal/process/task_queues.js:80:21)

  149) Contract: BeaconProxy
       initialization
         payable initialization:
     Error: Returned error: method eth_getStorageAt is unsupported
      at Object.ErrorResponse (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1
      at XMLHttpRequest.request.onreadystatechange (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (internal/streams/readable.js:1327:12)
      at processTicksAndRejections (internal/process/task_queues.js:80:21)

  150) Contract: BeaconProxy
       initialization
         reverting initialization:
     Error: Timeout of 300000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/proxy/BeaconProxy.test.js)
      at listOnTimeout (internal/timers.js:554:17)
      at processTimers (internal/timers.js:497:7)

  151) Contract: Clones
       clone
         initialization without parameters
           non payable
             when not sending balance
               "before each" hook: creating proxy for "initializes the proxy":
     Transaction: 0xc834b0d8fa46a0a94343005cb1a710f3743d9fe97a5c6c93d16cf6918b6e7b59 exited with an error (status 0) after consuming all gas.
     Please check that the transaction:
     - satisfies all conditions set by Solidity `assert` statements.
     - has enough gas to execute the full transaction.
     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
  StatusError: Transaction: 0xc834b0d8fa46a0a94343005cb1a710f3743d9fe97a5c6c93d16cf6918b6e7b59 exited with an error (status 0) after consuming all gas.
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/proxy/Clones.test.js:11:37
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at Context.<anonymous> (test/proxy/Clones.behaviour.js:31:13)

  152) Contract: Clones
       clone
         initialization without parameters
           non payable
             when sending some balance
               reverts:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x5f79e80f4d4b934b321b29e1ec8dcc9e18aa9c2adfa6b11bd3f20ba0b7db8616 exited with an error (status 0) after consuming all gas.
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `assert` statements.
      -     - has enough gas to execute the full transaction.
      -     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
      +revert

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at Context.<anonymous> (test/proxy/Clones.behaviour.js:45:11)

  153) Contract: Clones
       clone
         initialization without parameters
           payable
             when not sending balance
               "before each" hook: creating proxy for "initializes the proxy":
     Transaction: 0x320fe5a83ee7d3fcde46f280f47edf7bcbd2dabaa5815cb3b11abcc4c6a7aca8 exited with an error (status 0) after consuming all gas.
     Please check that the transaction:
     - satisfies all conditions set by Solidity `assert` statements.
     - has enough gas to execute the full transaction.
     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
  StatusError: Transaction: 0x320fe5a83ee7d3fcde46f280f47edf7bcbd2dabaa5815cb3b11abcc4c6a7aca8 exited with an error (status 0) after consuming all gas.
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/proxy/Clones.test.js:11:37
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at Context.<anonymous> (test/proxy/Clones.behaviour.js:59:13)

  154) Contract: Clones
       clone
         initialization without parameters
           payable
             when sending some balance
               "before each" hook: creating proxy for "initializes the proxy":
     Transaction: 0x4214063eda1dcad79d257a9d98c6c911066c6bc85a104da4d1d1834728f17dd5 exited with an error (status 0) after consuming all gas.
     Please check that the transaction:
     - satisfies all conditions set by Solidity `assert` statements.
     - has enough gas to execute the full transaction.
     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
  StatusError: Transaction: 0x4214063eda1dcad79d257a9d98c6c911066c6bc85a104da4d1d1834728f17dd5 exited with an error (status 0) after consuming all gas.
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/proxy/Clones.test.js:11:37
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at Context.<anonymous> (test/proxy/Clones.behaviour.js:74:13)

  155) Contract: Clones
       clone
         initialization with parameters
           non payable
             when not sending balance
               "before each" hook: creating proxy for "initializes the proxy":
     Transaction: 0x750deb411ff887cd09edd050b7f30c9dd7e8c79b12bf64204ef14e1aad751838 exited with an error (status 0) after consuming all gas.
     Please check that the transaction:
     - satisfies all conditions set by Solidity `assert` statements.
     - has enough gas to execute the full transaction.
     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
  StatusError: Transaction: 0x750deb411ff887cd09edd050b7f30c9dd7e8c79b12bf64204ef14e1aad751838 exited with an error (status 0) after consuming all gas.
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/proxy/Clones.test.js:11:37
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at Context.<anonymous> (test/proxy/Clones.behaviour.js:95:13)

  156) Contract: Clones
       clone
         initialization with parameters
           non payable
             when sending some balance
               reverts:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xaa691ac9b54bdda0b3ba16710aa3a66f6ec3abee2f4339eb9ff9af4532d30532 exited with an error (status 0) after consuming all gas.
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `assert` statements.
      -     - has enough gas to execute the full transaction.
      -     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
      +revert

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at Context.<anonymous> (test/proxy/Clones.behaviour.js:109:11)

  157) Contract: Clones
       clone
         initialization with parameters
           payable
             when not sending balance
               "before each" hook: creating proxy for "initializes the proxy":
     Transaction: 0x688c9955d67a668c4d9c58c878f3043f861ea7d1a0aee0a16a27a26e02e82dfd exited with an error (status 0) after consuming all gas.
     Please check that the transaction:
     - satisfies all conditions set by Solidity `assert` statements.
     - has enough gas to execute the full transaction.
     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
  StatusError: Transaction: 0x688c9955d67a668c4d9c58c878f3043f861ea7d1a0aee0a16a27a26e02e82dfd exited with an error (status 0) after consuming all gas.
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/proxy/Clones.test.js:11:37
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at Context.<anonymous> (test/proxy/Clones.behaviour.js:124:13)

  158) Contract: Clones
       clone
         initialization with parameters
           payable
             when sending some balance
               "before each" hook: creating proxy for "initializes the proxy":
     Transaction: 0x1e0db57bba04c4b7c9270ff377bf5d1508a72a7b1c881c258f0927aa84b28275 exited with an error (status 0) after consuming all gas.
     Please check that the transaction:
     - satisfies all conditions set by Solidity `assert` statements.
     - has enough gas to execute the full transaction.
     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
  StatusError: Transaction: 0x1e0db57bba04c4b7c9270ff377bf5d1508a72a7b1c881c258f0927aa84b28275 exited with an error (status 0) after consuming all gas.
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/proxy/Clones.test.js:11:37
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at Context.<anonymous> (test/proxy/Clones.behaviour.js:139:13)

  159) Contract: Clones
       cloneDeterministic
         address already used:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x17de323783cccd30474f4b23e6a5e06a54255748db755c894da90c85028000de exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC1167: create2 failed

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/proxy/Clones.test.js:36:7)

  160) Contract: Clones
       cloneDeterministic
         address prediction:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/Clones.test.js:46:39)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  161) Contract: Clones
       cloneDeterministic
         initialization without parameters
           non payable
             when not sending balance
               "before each" hook: creating proxy for "initializes the proxy":
     Transaction: 0x544f1aff22cbd7ef9566e0bd1ea184c248907485102f1f10f74312e6e23b9431 exited with an error (status 0) after consuming all gas.
     Please check that the transaction:
     - satisfies all conditions set by Solidity `assert` statements.
     - has enough gas to execute the full transaction.
     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
  StatusError: Transaction: 0x544f1aff22cbd7ef9566e0bd1ea184c248907485102f1f10f74312e6e23b9431 exited with an error (status 0) after consuming all gas.
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/proxy/Clones.test.js:21:37
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at Context.<anonymous> (test/proxy/Clones.behaviour.js:31:13)

  162) Contract: Clones
       cloneDeterministic
         initialization without parameters
           non payable
             when sending some balance
               reverts:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x804d3f948dbb5e1f7490bd0b932a5dbaba236ec8c88fa556289e3c9df50eed46 exited with an error (status 0) after consuming all gas.
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `assert` statements.
      -     - has enough gas to execute the full transaction.
      -     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
      +revert

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at Context.<anonymous> (test/proxy/Clones.behaviour.js:45:11)

  163) Contract: Clones
       cloneDeterministic
         initialization without parameters
           payable
             when not sending balance
               "before each" hook: creating proxy for "initializes the proxy":
     Transaction: 0x30c6ff2436369a0cff1b4f20c8a57a6d32007c6b17503a56b7113196bd3dd0d5 exited with an error (status 0) after consuming all gas.
     Please check that the transaction:
     - satisfies all conditions set by Solidity `assert` statements.
     - has enough gas to execute the full transaction.
     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
  StatusError: Transaction: 0x30c6ff2436369a0cff1b4f20c8a57a6d32007c6b17503a56b7113196bd3dd0d5 exited with an error (status 0) after consuming all gas.
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/proxy/Clones.test.js:21:37
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at Context.<anonymous> (test/proxy/Clones.behaviour.js:59:13)

  164) Contract: Clones
       cloneDeterministic
         initialization without parameters
           payable
             when sending some balance
               "before each" hook: creating proxy for "initializes the proxy":
     Transaction: 0x78226a2bd5d895460b76cd6a4e4984b05f030288a268fe6edaf8f180935686ab exited with an error (status 0) after consuming all gas.
     Please check that the transaction:
     - satisfies all conditions set by Solidity `assert` statements.
     - has enough gas to execute the full transaction.
     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
  StatusError: Transaction: 0x78226a2bd5d895460b76cd6a4e4984b05f030288a268fe6edaf8f180935686ab exited with an error (status 0) after consuming all gas.
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/proxy/Clones.test.js:21:37
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at Context.<anonymous> (test/proxy/Clones.behaviour.js:74:13)

  165) Contract: Clones
       cloneDeterministic
         initialization with parameters
           non payable
             when not sending balance
               "before each" hook: creating proxy for "initializes the proxy":
     Transaction: 0x88ba4b7bcd28ee229610d9638437bcf2f7023fd27d1833585cb2f293a58e1356 exited with an error (status 0) after consuming all gas.
     Please check that the transaction:
     - satisfies all conditions set by Solidity `assert` statements.
     - has enough gas to execute the full transaction.
     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
  StatusError: Transaction: 0x88ba4b7bcd28ee229610d9638437bcf2f7023fd27d1833585cb2f293a58e1356 exited with an error (status 0) after consuming all gas.
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/proxy/Clones.test.js:21:37
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at Context.<anonymous> (test/proxy/Clones.behaviour.js:95:13)

  166) Contract: Clones
       cloneDeterministic
         initialization with parameters
           non payable
             when sending some balance
               reverts:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x96d23f4f8f7c2f7330fa5ab34929dffaa142d9138d9c1fbbbfda461c62d3c5b1 exited with an error (status 0) after consuming all gas.
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `assert` statements.
      -     - has enough gas to execute the full transaction.
      -     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
      +revert

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at Context.<anonymous> (test/proxy/Clones.behaviour.js:109:11)

  167) Contract: Clones
       cloneDeterministic
         initialization with parameters
           payable
             when not sending balance
               "before each" hook: creating proxy for "initializes the proxy":
     Transaction: 0x1c9655bd4a06f2108faa3489f8be1ffbd43a7adca2d51769601ce669e9113c50 exited with an error (status 0) after consuming all gas.
     Please check that the transaction:
     - satisfies all conditions set by Solidity `assert` statements.
     - has enough gas to execute the full transaction.
     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
  StatusError: Transaction: 0x1c9655bd4a06f2108faa3489f8be1ffbd43a7adca2d51769601ce669e9113c50 exited with an error (status 0) after consuming all gas.
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/proxy/Clones.test.js:21:37
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at Context.<anonymous> (test/proxy/Clones.behaviour.js:124:13)

  168) Contract: Clones
       cloneDeterministic
         initialization with parameters
           payable
             when sending some balance
               "before each" hook: creating proxy for "initializes the proxy":
     Transaction: 0x185dfe6b826aafbba7dcc73d15744379e5574dad2bf8d9f57138f0accab1d9b2 exited with an error (status 0) after consuming all gas.
     Please check that the transaction:
     - satisfies all conditions set by Solidity `assert` statements.
     - has enough gas to execute the full transaction.
     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
  StatusError: Transaction: 0x185dfe6b826aafbba7dcc73d15744379e5574dad2bf8d9f57138f0accab1d9b2 exited with an error (status 0) after consuming all gas.
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/proxy/Clones.test.js:21:37
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at Context.<anonymous> (test/proxy/Clones.behaviour.js:139:13)

  169) Contract: Initializable
       basic testing without inheritance
         before initialize
           initializer has not run:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/Initializable.test.js:16:44)
      at processImmediate (internal/timers.js:461:21)

  170) Contract: Initializable
       basic testing without inheritance
         after initialize
           initializer has run:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/Initializable.test.js:26:43)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  171) Contract: Initializable
       basic testing without inheritance
         after initialize
           initializer does not run again:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xf6a7fd89c0edde5e9ce47c4b6d430ce576cc01cf639ff3fc2370594e18c4f909 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +Initializable: contract is already initialized

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/proxy/Initializable.test.js:30:9)

  172) Contract: Initializable
       basic testing without inheritance
         after nested initialize
           initializer has run:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/Initializable.test.js:40:43)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  173) Contract: Initializable
       complex testing with inheritance
         initializes human:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/Initializable.test.js:60:40)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  174) Contract: Initializable
       complex testing with inheritance
         initializes mother:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/Initializable.test.js:64:40)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  175) Contract: Initializable
       complex testing with inheritance
         initializes gramps:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/Initializable.test.js:68:40)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  176) Contract: Initializable
       complex testing with inheritance
         initializes father:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/Initializable.test.js:72:40)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  177) Contract: Initializable
       complex testing with inheritance
         initializes child:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/Initializable.test.js:76:40)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  178) Contract: ProxyAdmin
       has an owner:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/ProxyAdmin.test.js:30:34)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  179) Contract: ProxyAdmin
       #getProxyAdmin
         returns proxyAdmin as admin of the proxy:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/ProxyAdmin.test.js:35:43)
      at processImmediate (internal/timers.js:461:21)

  180) Contract: ProxyAdmin
       #changeProxyAdmin
         fails to change proxy admin if its not the proxy owner:

      Wrong kind of exception received
      + expected - actual

      -Returned error: qtum [code: -4] Private key not available
      +caller is not the owner

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/proxy/ProxyAdmin.test.js:42:7)

  181) Contract: ProxyAdmin
       #changeProxyAdmin
         changes proxy admin:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/ProxyAdmin.test.js:50:37)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  182) Contract: ProxyAdmin
       #getProxyImplementation
         returns proxy implementation address:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/ProxyAdmin.test.js:56:59)
      at processImmediate (internal/timers.js:461:21)

  183) Contract: ProxyAdmin
       #upgrade
         with unauthorized account
           fails to upgrade:

      Wrong kind of exception received
      + expected - actual

      -Returned error: qtum [code: -4] Private key not available
      +caller is not the owner

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/proxy/ProxyAdmin.test.js:64:9)

  184) Contract: ProxyAdmin
       #upgrade
         with authorized account
           upgrades implementation:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/ProxyAdmin.test.js:74:61)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  185) Contract: ProxyAdmin
       #upgradeAndCall
         with unauthorized account
           fails to upgrade:

      Wrong kind of exception received
      + expected - actual

      -Returned error: qtum [code: -4] Private key not available
      +caller is not the owner

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/proxy/ProxyAdmin.test.js:84:9)

  186) Contract: ProxyAdmin
       #upgradeAndCall
         with authorized account
           with valid callData
             upgrades implementation:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/ProxyAdmin.test.js:111:63)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  187) Contract: TransparentUpgradeableProxy
       cannot be initialized with a non-contract address:
     Error: Timeout of 300000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/proxy/TransparentUpgradeableProxy.test.js)
      at listOnTimeout (internal/timers.js:554:17)
      at processTimers (internal/timers.js:497:7)

  188) Contract: TransparentUpgradeableProxy
       without initialization
         when not sending balance
           sets the implementation address:
     Error: Returned error: method eth_getStorageAt is unsupported
      at Object.ErrorResponse (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1
      at XMLHttpRequest.request.onreadystatechange (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (internal/streams/readable.js:1327:12)
      at processTicksAndRejections (internal/process/task_queues.js:80:21)

  189) Contract: TransparentUpgradeableProxy
       without initialization
         when not sending balance
           initializes the proxy:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/UpgradeableProxy.behaviour.js:38:26)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  190) Contract: TransparentUpgradeableProxy
       without initialization
         when sending some balance
           sets the implementation address:
     Error: Returned error: method eth_getStorageAt is unsupported
      at Object.ErrorResponse (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1
      at XMLHttpRequest.request.onreadystatechange (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (internal/streams/readable.js:1327:12)
      at processTicksAndRejections (internal/process/task_queues.js:80:21)

  191) Contract: TransparentUpgradeableProxy
       without initialization
         when sending some balance
           initializes the proxy:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/UpgradeableProxy.behaviour.js:38:26)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  192) Contract: TransparentUpgradeableProxy
       without initialization
         when sending some balance
           has expected balance:

      AssertionError: expected '0' to equal '1000000'
      + expected - actual

      -0
      +1000000

      at Context.<anonymous> (test/proxy/UpgradeableProxy.behaviour.js:42:69)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  193) Contract: TransparentUpgradeableProxy
       initialization without parameters
         non payable
           when not sending balance
             sets the implementation address:
     Error: Returned error: method eth_getStorageAt is unsupported
      at Object.ErrorResponse (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1
      at XMLHttpRequest.request.onreadystatechange (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (internal/streams/readable.js:1327:12)
      at processTicksAndRejections (internal/process/task_queues.js:80:21)

  194) Contract: TransparentUpgradeableProxy
       initialization without parameters
         non payable
           when not sending balance
             initializes the proxy:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/UpgradeableProxy.behaviour.js:38:26)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  195) Contract: TransparentUpgradeableProxy
       initialization without parameters
         non payable
           when sending some balance
             reverts:
     AssertionError: Expected an exception but none was received
      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at Context.<anonymous> (test/proxy/UpgradeableProxy.behaviour.js:101:11)

  196) Contract: TransparentUpgradeableProxy
       initialization without parameters
         payable
           when not sending balance
             sets the implementation address:
     Error: Returned error: method eth_getStorageAt is unsupported
      at Object.ErrorResponse (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1
      at XMLHttpRequest.request.onreadystatechange (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (internal/streams/readable.js:1327:12)
      at processTicksAndRejections (internal/process/task_queues.js:80:21)

  197) Contract: TransparentUpgradeableProxy
       initialization without parameters
         payable
           when not sending balance
             initializes the proxy:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/UpgradeableProxy.behaviour.js:38:26)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  198) Contract: TransparentUpgradeableProxy
       initialization without parameters
         payable
           when sending some balance
             sets the implementation address:
     Error: Returned error: method eth_getStorageAt is unsupported
      at Object.ErrorResponse (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1
      at XMLHttpRequest.request.onreadystatechange (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (internal/streams/readable.js:1327:12)
      at processTicksAndRejections (internal/process/task_queues.js:80:21)

  199) Contract: TransparentUpgradeableProxy
       initialization without parameters
         payable
           when sending some balance
             initializes the proxy:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/UpgradeableProxy.behaviour.js:38:26)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  200) Contract: TransparentUpgradeableProxy
       initialization without parameters
         payable
           when sending some balance
             has expected balance:

      AssertionError: expected '0' to equal '1000000'
      + expected - actual

      -0
      +1000000

      at Context.<anonymous> (test/proxy/UpgradeableProxy.behaviour.js:42:69)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  201) Contract: TransparentUpgradeableProxy
       initialization with parameters
         non payable
           when not sending balance
             sets the implementation address:
     Error: Returned error: method eth_getStorageAt is unsupported
      at Object.ErrorResponse (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1
      at XMLHttpRequest.request.onreadystatechange (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (internal/streams/readable.js:1327:12)
      at processTicksAndRejections (internal/process/task_queues.js:80:21)

  202) Contract: TransparentUpgradeableProxy
       initialization with parameters
         non payable
           when not sending balance
             initializes the proxy:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/UpgradeableProxy.behaviour.js:38:26)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  203) Contract: TransparentUpgradeableProxy
       initialization with parameters
         non payable
           when sending some balance
             reverts:
     AssertionError: Expected an exception but none was received
      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at Context.<anonymous> (test/proxy/UpgradeableProxy.behaviour.js:172:11)

  204) Contract: TransparentUpgradeableProxy
       initialization with parameters
         payable
           when not sending balance
             sets the implementation address:
     Error: Returned error: method eth_getStorageAt is unsupported
      at Object.ErrorResponse (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1
      at XMLHttpRequest.request.onreadystatechange (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (internal/streams/readable.js:1327:12)
      at processTicksAndRejections (internal/process/task_queues.js:80:21)

  205) Contract: TransparentUpgradeableProxy
       initialization with parameters
         payable
           when not sending balance
             initializes the proxy:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/UpgradeableProxy.behaviour.js:38:26)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  206) Contract: TransparentUpgradeableProxy
       initialization with parameters
         payable
           when sending some balance
             sets the implementation address:
     Error: Returned error: method eth_getStorageAt is unsupported
      at Object.ErrorResponse (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1
      at XMLHttpRequest.request.onreadystatechange (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (internal/streams/readable.js:1327:12)
      at processTicksAndRejections (internal/process/task_queues.js:80:21)

  207) Contract: TransparentUpgradeableProxy
       initialization with parameters
         payable
           when sending some balance
             initializes the proxy:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/UpgradeableProxy.behaviour.js:38:26)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  208) Contract: TransparentUpgradeableProxy
       initialization with parameters
         payable
           when sending some balance
             has expected balance:

      AssertionError: expected '0' to equal '1000000'
      + expected - actual

      -0
      +1000000

      at Context.<anonymous> (test/proxy/UpgradeableProxy.behaviour.js:42:69)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  209) Contract: TransparentUpgradeableProxy
       initialization with parameters
         reverting initialization
           reverts:
     Error: Timeout of 300000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/proxy/TransparentUpgradeableProxy.test.js)
      at listOnTimeout (internal/timers.js:554:17)
      at processTimers (internal/timers.js:497:7)

  210) Contract: TransparentUpgradeableProxy
       implementation
         returns the current implementation address:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/TransparentUpgradeableProxy.behaviour.js:44:62)
      at processImmediate (internal/timers.js:461:21)

  211) Contract: TransparentUpgradeableProxy
       implementation
         delegates to the implementation:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/TransparentUpgradeableProxy.behaviour.js:51:33)
      at processImmediate (internal/timers.js:461:21)

  212) Contract: TransparentUpgradeableProxy
       upgradeTo
         when the sender is the admin
           when the given implementation is different from the current one
             upgrades to the requested implementation:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/TransparentUpgradeableProxy.behaviour.js:65:66)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  213) Contract: TransparentUpgradeableProxy
       upgradeTo
         when the sender is the admin
           when the given implementation is the zero address
             reverts:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x0610cea6d4cbda307af69d34838f6a7a519a1c7be8f8fe173fabf347b444a305 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +UpgradeableProxy: new implementation is not a contract

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/proxy/TransparentUpgradeableProxy.behaviour.js:81:11)

  214) Contract: TransparentUpgradeableProxy
       upgradeTo
         when the sender is not the admin
           reverts:

      Wrong kind of exception received
      + expected - actual

      -Returned error: qtum [code: -4] Private key not available
      +revert

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at Context.<anonymous> (test/proxy/TransparentUpgradeableProxy.behaviour.js:93:9)

  215) Contract: TransparentUpgradeableProxy
       upgradeToAndCall
         without migrations
           when the call does not fail
             when the sender is the admin
               upgrades to the requested implementation:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/TransparentUpgradeableProxy.behaviour.js:118:68)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  216) Contract: TransparentUpgradeableProxy
       upgradeToAndCall
         without migrations
           when the call does not fail
             when the sender is the admin
               calls the initializer function:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/TransparentUpgradeableProxy.behaviour.js:128:40)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  217) Contract: TransparentUpgradeableProxy
       upgradeToAndCall
         without migrations
           when the call does not fail
             when the sender is not the admin
               reverts:

      Wrong kind of exception received
      + expected - actual

      -Returned error: qtum [code: -4] Private key not available
      +revert

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at Context.<anonymous> (test/proxy/TransparentUpgradeableProxy.behaviour.js:150:13)

  218) Contract: TransparentUpgradeableProxy
       upgradeToAndCall
         with migrations
           when the sender is the admin
             when upgrading to V1
               upgrades to the requested version and emits an event:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/TransparentUpgradeableProxy.behaviour.js:183:68)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  219) Contract: TransparentUpgradeableProxy
       upgradeToAndCall
         with migrations
           when the sender is the admin
             when upgrading to V1
               calls the 'initialize' function and sends given value to the proxy:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/TransparentUpgradeableProxy.behaviour.js:191:40)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  220) Contract: TransparentUpgradeableProxy
       upgradeToAndCall
         with migrations
           when the sender is the admin
             when upgrading to V1
               when upgrading to V2
                 upgrades to the requested version and emits an event:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/TransparentUpgradeableProxy.behaviour.js:209:70)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  221) Contract: TransparentUpgradeableProxy
       upgradeToAndCall
         with migrations
           when the sender is the admin
             when upgrading to V1
               when upgrading to V2
                 calls the 'migrate' function and sends given value to the proxy:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/TransparentUpgradeableProxy.behaviour.js:217:42)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  222) Contract: TransparentUpgradeableProxy
       upgradeToAndCall
         with migrations
           when the sender is the admin
             when upgrading to V1
               when upgrading to V2
                 when upgrading to V3
                   upgrades to the requested version and emits an event:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/TransparentUpgradeableProxy.behaviour.js:238:72)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  223) Contract: TransparentUpgradeableProxy
       upgradeToAndCall
         with migrations
           when the sender is the admin
             when upgrading to V1
               when upgrading to V2
                 when upgrading to V3
                   calls the 'migrate' function and sends given value to the proxy:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/TransparentUpgradeableProxy.behaviour.js:246:44)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  224) Contract: TransparentUpgradeableProxy
       upgradeToAndCall
         with migrations
           when the sender is not the admin
             reverts:

      Wrong kind of exception received
      + expected - actual

      -Returned error: qtum [code: -4] Private key not available
      +revert

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at Context.<anonymous> (test/proxy/TransparentUpgradeableProxy.behaviour.js:266:11)

  225) Contract: TransparentUpgradeableProxy
       changeAdmin
         when the new proposed admin is not the zero address
           when the sender is the admin
             assigns new proxy admin:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/TransparentUpgradeableProxy.behaviour.js:284:56)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  226) Contract: TransparentUpgradeableProxy
       changeAdmin
         when the new proposed admin is not the zero address
           when the sender is not the admin
             reverts:

      Wrong kind of exception received
      + expected - actual

      -Returned error: qtum [code: -4] Private key not available
      +revert

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at Context.<anonymous> (test/proxy/TransparentUpgradeableProxy.behaviour.js:298:11)

  227) Contract: TransparentUpgradeableProxy
       changeAdmin
         when the new proposed admin is the zero address
           reverts:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x6c0a25241b559f792bfd0e34f13583364de4066f72ccbed40b3d6a63a3aaa5a9 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +TransparentUpgradeableProxy: new admin is the zero address

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/proxy/TransparentUpgradeableProxy.behaviour.js:305:9)

  228) Contract: TransparentUpgradeableProxy
       storage
         should store the implementation address in specified location:
     Error: Returned error: method eth_getStorageAt is unsupported
      at Object.ErrorResponse (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1
      at XMLHttpRequest.request.onreadystatechange (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (internal/streams/readable.js:1327:12)
      at processTicksAndRejections (internal/process/task_queues.js:80:21)

  229) Contract: TransparentUpgradeableProxy
       storage
         should store the admin proxy in specified location:
     Error: Returned error: method eth_getStorageAt is unsupported
      at Object.ErrorResponse (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1
      at XMLHttpRequest.request.onreadystatechange (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (internal/streams/readable.js:1327:12)
      at processTicksAndRejections (internal/process/task_queues.js:80:21)

  230) Contract: TransparentUpgradeableProxy
       transparent proxy
         proxy admin cannot call delegated functions:

      Wrong kind of exception received
      + expected - actual

      -Returned error: VM exception: OutOfGasIntrinsic
      +TransparentUpgradeableProxy: admin cannot fallback to proxy target

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/proxy/TransparentUpgradeableProxy.behaviour.js:337:7)

  231) Contract: TransparentUpgradeableProxy
       transparent proxy
         when function names clash
           when sender is proxy admin should run the proxy function:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/TransparentUpgradeableProxy.behaviour.js:345:46)
      at processImmediate (internal/timers.js:461:21)

  232) Contract: TransparentUpgradeableProxy
       transparent proxy
         when function names clash
           when sender is other should delegate to implementation:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/TransparentUpgradeableProxy.behaviour.js:350:46)
      at processImmediate (internal/timers.js:461:21)

  233) Contract: TransparentUpgradeableProxy
       regression
         should add new function:
     Transaction: 0xcb62132162e181c78e205613b29bc81322ccc330f1d2b623339d3fef9141626d exited with an error (status 0).
     Please check that the transaction:
     - satisfies all conditions set by Solidity `require` statements.
     - does not trigger a Solidity `revert` statement.

  StatusError: Transaction: 0xcb62132162e181c78e205613b29bc81322ccc330f1d2b623339d3fef9141626d exited with an error (status 0).
      at Context.<anonymous> (test/proxy/TransparentUpgradeableProxy.behaviour.js:364:28)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  234) Contract: TransparentUpgradeableProxy
       regression
         should remove function:
     Transaction: 0x1daa5d695ecb9fcae4b89fd356c531dfb852bb2660122f644112804f7c243ccc exited with an error (status 0).
     Please check that the transaction:
     - satisfies all conditions set by Solidity `require` statements.
     - does not trigger a Solidity `revert` statement.

  StatusError: Transaction: 0x1daa5d695ecb9fcae4b89fd356c531dfb852bb2660122f644112804f7c243ccc exited with an error (status 0).
      at Context.<anonymous> (test/proxy/TransparentUpgradeableProxy.behaviour.js:379:28)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  235) Contract: TransparentUpgradeableProxy
       regression
         should change function signature:
     Transaction: 0x3791fe263ca869a9b11c37ce715ebb36c721722758689860596d25c083a66cae exited with an error (status 0).
     Please check that the transaction:
     - satisfies all conditions set by Solidity `require` statements.
     - does not trigger a Solidity `revert` statement.

  StatusError: Transaction: 0x3791fe263ca869a9b11c37ce715ebb36c721722758689860596d25c083a66cae exited with an error (status 0).
      at Context.<anonymous> (test/proxy/TransparentUpgradeableProxy.behaviour.js:395:28)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  236) Contract: TransparentUpgradeableProxy
       regression
         should add fallback function:
     ProviderError:
Could not connect to your Ethereum client with the following parameters:
    - host       > 127.0.0.1
    - port       > 23889
    - network_id > 4132
Please check that your Ethereum client:
    - is running
    - is accepting RPC connections (i.e., "--rpc" option is used in geth)
    - is accessible over the network
    - is properly configured in your Truffle configuration file (truffle-config.js)

      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:73:1
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:102:1
      at XMLHttpRequest.request.onreadystatechange (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpRequestError (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:349:1)
      at ClientRequest.<anonymous> (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:252:47)
      at Socket.socketOnEnd (_http_client.js:493:9)
      at endReadableNT (internal/streams/readable.js:1327:12)
      at processTicksAndRejections (internal/process/task_queues.js:80:21)

  237) Contract: TransparentUpgradeableProxy
       regression
         should remove fallback function:

      Wrong kind of exception received
      + expected - actual

      -
      -Could not connect to your Ethereum client with the following parameters:
      -    - host       > 127.0.0.1
      -    - port       > 23889
      -    - network_id > 4132
      -Please check that your Ethereum client:
      -    - is running
      -    - is accepting RPC connections (i.e., "--rpc" option is used in geth)
      -    - is accessible over the network
      -    - is properly configured in your Truffle configuration file (truffle-config.js)
      +revert

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at runNextTicks (internal/process/task_queues.js:58:5)
      at listOnTimeout (internal/timers.js:523:9)
      at processTimers (internal/timers.js:497:7)
      at Context.<anonymous> (test/proxy/TransparentUpgradeableProxy.behaviour.js:429:7)

  238) Contract: UpgradeableBeacon
       cannot be created with non-contract implementation:
     Error: Timeout of 300000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/proxy/UpgradeableBeacon.test.js)
      at listOnTimeout (internal/timers.js:554:17)
      at processTimers (internal/timers.js:497:7)

  239) Contract: UpgradeableBeacon
       once deployed
         returns implementation:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/UpgradeableBeacon.test.js:25:32)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  240) Contract: UpgradeableBeacon
       once deployed
         can be upgraded by the owner:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/UpgradeableBeacon.test.js:32:32)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  241) Contract: UpgradeableBeacon
       once deployed
         cannot be upgraded to a non-contract:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x46a401af9d54bae8eaef4dabcdb1ad2215cf3be68bf92c2536ff37fe8f575aaa exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +UpgradeableBeacon: implementation is not a contract

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/proxy/UpgradeableBeacon.test.js:36:7)

  242) Contract: UpgradeableBeacon
       once deployed
         cannot be upgraded by other account:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x4e35f529ddaa8695ac6f53e45039b4b6eb598dd55d3e62dddabfd362ed8b547b exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +Ownable: caller is not the owner

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/proxy/UpgradeableBeacon.test.js:44:7)

  243) Contract: UpgradeableProxy
       cannot be initialized with a non-contract address:
     Error: Timeout of 300000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/proxy/UpgradeableProxy.test.js)
      at listOnTimeout (internal/timers.js:554:17)
      at processTimers (internal/timers.js:497:7)

  244) Contract: UpgradeableProxy
       without initialization
         when not sending balance
           sets the implementation address:
     Error: Returned error: method eth_getStorageAt is unsupported
      at Object.ErrorResponse (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1
      at XMLHttpRequest.request.onreadystatechange (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (internal/streams/readable.js:1327:12)
      at processTicksAndRejections (internal/process/task_queues.js:80:21)

  245) Contract: UpgradeableProxy
       without initialization
         when not sending balance
           initializes the proxy:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/UpgradeableProxy.behaviour.js:38:26)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  246) Contract: UpgradeableProxy
       without initialization
         when sending some balance
           sets the implementation address:
     Error: Returned error: method eth_getStorageAt is unsupported
      at Object.ErrorResponse (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1
      at XMLHttpRequest.request.onreadystatechange (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (internal/streams/readable.js:1327:12)
      at processTicksAndRejections (internal/process/task_queues.js:80:21)

  247) Contract: UpgradeableProxy
       without initialization
         when sending some balance
           initializes the proxy:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/UpgradeableProxy.behaviour.js:38:26)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  248) Contract: UpgradeableProxy
       without initialization
         when sending some balance
           has expected balance:

      AssertionError: expected '0' to equal '1000000'
      + expected - actual

      -0
      +1000000

      at Context.<anonymous> (test/proxy/UpgradeableProxy.behaviour.js:42:69)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  249) Contract: UpgradeableProxy
       initialization without parameters
         non payable
           when not sending balance
             sets the implementation address:
     Error: Returned error: method eth_getStorageAt is unsupported
      at Object.ErrorResponse (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1
      at XMLHttpRequest.request.onreadystatechange (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (internal/streams/readable.js:1327:12)
      at processTicksAndRejections (internal/process/task_queues.js:80:21)

  250) Contract: UpgradeableProxy
       initialization without parameters
         non payable
           when not sending balance
             initializes the proxy:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/UpgradeableProxy.behaviour.js:38:26)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  251) Contract: UpgradeableProxy
       initialization without parameters
         non payable
           when sending some balance
             reverts:
     AssertionError: Expected an exception but none was received
      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at Context.<anonymous> (test/proxy/UpgradeableProxy.behaviour.js:101:11)

  252) Contract: UpgradeableProxy
       initialization without parameters
         payable
           when not sending balance
             sets the implementation address:
     Error: Returned error: method eth_getStorageAt is unsupported
      at Object.ErrorResponse (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1
      at XMLHttpRequest.request.onreadystatechange (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (internal/streams/readable.js:1327:12)
      at processTicksAndRejections (internal/process/task_queues.js:80:21)

  253) Contract: UpgradeableProxy
       initialization without parameters
         payable
           when not sending balance
             initializes the proxy:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/UpgradeableProxy.behaviour.js:38:26)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  254) Contract: UpgradeableProxy
       initialization without parameters
         payable
           when sending some balance
             sets the implementation address:
     Error: Returned error: method eth_getStorageAt is unsupported
      at Object.ErrorResponse (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1
      at XMLHttpRequest.request.onreadystatechange (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (internal/streams/readable.js:1327:12)
      at processTicksAndRejections (internal/process/task_queues.js:80:21)

  255) Contract: UpgradeableProxy
       initialization without parameters
         payable
           when sending some balance
             initializes the proxy:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/UpgradeableProxy.behaviour.js:38:26)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  256) Contract: UpgradeableProxy
       initialization without parameters
         payable
           when sending some balance
             has expected balance:

      AssertionError: expected '0' to equal '1000000'
      + expected - actual

      -0
      +1000000

      at Context.<anonymous> (test/proxy/UpgradeableProxy.behaviour.js:42:69)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  257) Contract: UpgradeableProxy
       initialization with parameters
         non payable
           when not sending balance
             sets the implementation address:
     Error: Returned error: method eth_getStorageAt is unsupported
      at Object.ErrorResponse (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1
      at XMLHttpRequest.request.onreadystatechange (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (internal/streams/readable.js:1327:12)
      at processTicksAndRejections (internal/process/task_queues.js:80:21)

  258) Contract: UpgradeableProxy
       initialization with parameters
         non payable
           when not sending balance
             initializes the proxy:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/UpgradeableProxy.behaviour.js:38:26)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  259) Contract: UpgradeableProxy
       initialization with parameters
         non payable
           when sending some balance
             reverts:
     AssertionError: Expected an exception but none was received
      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:25:10)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at Context.<anonymous> (test/proxy/UpgradeableProxy.behaviour.js:172:11)

  260) Contract: UpgradeableProxy
       initialization with parameters
         payable
           when not sending balance
             sets the implementation address:
     Error: Returned error: method eth_getStorageAt is unsupported
      at Object.ErrorResponse (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1
      at XMLHttpRequest.request.onreadystatechange (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (internal/streams/readable.js:1327:12)
      at processTicksAndRejections (internal/process/task_queues.js:80:21)

  261) Contract: UpgradeableProxy
       initialization with parameters
         payable
           when not sending balance
             initializes the proxy:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/UpgradeableProxy.behaviour.js:38:26)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  262) Contract: UpgradeableProxy
       initialization with parameters
         payable
           when sending some balance
             sets the implementation address:
     Error: Returned error: method eth_getStorageAt is unsupported
      at Object.ErrorResponse (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1
      at XMLHttpRequest.request.onreadystatechange (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (internal/streams/readable.js:1327:12)
      at processTicksAndRejections (internal/process/task_queues.js:80:21)

  263) Contract: UpgradeableProxy
       initialization with parameters
         payable
           when sending some balance
             initializes the proxy:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/proxy/UpgradeableProxy.behaviour.js:38:26)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  264) Contract: UpgradeableProxy
       initialization with parameters
         payable
           when sending some balance
             has expected balance:

      AssertionError: expected '0' to equal '1000000'
      + expected - actual

      -0
      +1000000

      at Context.<anonymous> (test/proxy/UpgradeableProxy.behaviour.js:42:69)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  265) Contract: UpgradeableProxy
       initialization with parameters
         reverting initialization
           reverts:
     Error: Timeout of 300000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/proxy/UpgradeableProxy.test.js)
      at listOnTimeout (internal/timers.js:554:17)
      at processTimers (internal/timers.js:497:7)

  266) Contract: ERC1155
       like an ERC1155
         balanceOf
           reverts when queried about the zero address:

      Wrong kind of exception received
      + expected - actual

      -Returned error: VM exception: OutOfGasIntrinsic
      +ERC1155: balance query for the zero address

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC1155/ERC1155.behavior.js:24:9)

  267) Contract: ERC1155
       like an ERC1155
         balanceOf
           when accounts don't own tokens
             returns zero for given addresses:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC1155/ERC1155.behavior.js:32:35)
      at processImmediate (internal/timers.js:461:21)

  268) Contract: ERC1155
       like an ERC1155
         balanceOf
           when accounts own some tokens
             "before each" hook for "returns the amount of tokens owned by the given addresses":
     Error: Returned error: qtum [code: -4] Private key not available
      at Context.<anonymous> (test/token/ERC1155/ERC1155.behavior.js:51:28)
      at processImmediate (internal/timers.js:461:21)

  269) Contract: ERC1155
       like an ERC1155
         balanceOfBatch
           reverts when input arrays don't match up:

      Wrong kind of exception received
      + expected - actual

      -Returned error: VM exception: OutOfGasIntrinsic
      +ERC1155: accounts and ids length mismatch

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC1155/ERC1155.behavior.js:86:9)

  270) Contract: ERC1155
       like an ERC1155
         balanceOfBatch
           reverts when one of the addresses is the zero address:

      Wrong kind of exception received
      + expected - actual

      -Returned error: VM exception: OutOfGasIntrinsic
      +ERC1155: batch balance query for the zero address

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC1155/ERC1155.behavior.js:104:9)

  271) Contract: ERC1155
       like an ERC1155
         balanceOfBatch
           when accounts don't own tokens
             returns zeros for each account:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC1155/ERC1155.behavior.js:115:43)
      at processImmediate (internal/timers.js:461:21)

  272) Contract: ERC1155
       like an ERC1155
         balanceOfBatch
           when accounts own some tokens
             "before each" hook for "returns amounts owned by each account in order passed":
     Error: Returned error: qtum [code: -4] Private key not available
      at Context.<anonymous> (test/token/ERC1155/ERC1155.behavior.js:128:28)
      at processImmediate (internal/timers.js:461:21)

  273) Contract: ERC1155
       like an ERC1155
         setApprovalForAll
           "before each" hook for "sets approval status which can be queried via isApprovedForAll":
     Error: invalid address (argument="address", value=undefined, code=INVALID_ARGUMENT, version=address/5.0.5) (argument="operator", value=undefined, code=INVALID_ARGUMENT, version=abi/5.0.0-beta.153)
      at Context.<anonymous> (test/token/ERC1155/ERC1155.behavior.js:170:38)
      at processImmediate (internal/timers.js:461:21)

  274) Contract: ERC1155
       like an ERC1155
         safeTransferFrom
           "before each" hook for "reverts when transferring more than balance":
     Error: invalid address (argument="address", value=undefined, code=INVALID_ARGUMENT, version=address/5.0.5) (argument="to", value=undefined, code=INVALID_ARGUMENT, version=abi/5.0.0-beta.153)
      at Context.<anonymous> (test/token/ERC1155/ERC1155.behavior.js:196:26)
      at processImmediate (internal/timers.js:461:21)

  275) Contract: ERC1155
       like an ERC1155
         safeBatchTransferFrom
           "before each" hook for "reverts when transferring amount more than any of balances":
     Error: invalid address (argument="address", value=undefined, code=INVALID_ARGUMENT, version=address/5.0.5) (argument="to", value=undefined, code=INVALID_ARGUMENT, version=abi/5.0.0-beta.153)
      at Context.<anonymous> (test/token/ERC1155/ERC1155.behavior.js:452:26)
      at processImmediate (internal/timers.js:461:21)

  276) Contract: ERC1155
       like an ERC1155
         Contract interface
           ERC165
             ERC165's supportsInterface(bytes4)
               claims support:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/introspection/SupportsInterface.behavior.js:69:49)
      at processImmediate (internal/timers.js:461:21)

  277) Contract: ERC1155
       like an ERC1155
         Contract interface
           ERC1155
             ERC165's supportsInterface(bytes4)
               claims support:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/introspection/SupportsInterface.behavior.js:69:49)
      at processImmediate (internal/timers.js:461:21)

  278) Contract: ERC1155
       internal functions
         _mint
           reverts with a zero destination address:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x6bf443a170d3e35cfd564faf07cd12ad447fc0a9f3edc512c394f47c107c76fe exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC1155: mint to the zero address

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC1155/ERC1155.test.js:33:9)

  279) Contract: ERC1155
       internal functions
         _mint
           with minted tokens
             credits the minted amount of tokens:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC1155/ERC1155.test.js:55:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  280) Contract: ERC1155
       internal functions
         _mintBatch
           reverts with a zero destination address:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x8592ceacec6c9bf14b3d0c8c955464a4d3da75e0156318628e983b84c78c1022 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC1155: mint to the zero address

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC1155/ERC1155.test.js:62:9)

  281) Contract: ERC1155
       internal functions
         _mintBatch
           reverts if length of inputs do not match:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xf84f0a0dfa96b859d68fa3519bb392f3390992bdbc93441240d31afe84f182a1 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC1155: ids and amounts length mismatch

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC1155/ERC1155.test.js:69:9)

  282) Contract: ERC1155
       internal functions
         _mintBatch
           with minted batch of tokens
             credits the minted batch of tokens:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC1155/ERC1155.test.js:100:56)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  283) Contract: ERC1155
       internal functions
         _burn
           reverts when burning the zero account's tokens:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x0e7131e33ea0141b960c3602efc453e5bdbda39643f88f3f41fc1621709f6694 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC1155: burn from the zero address

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC1155/ERC1155.test.js:114:9)

  284) Contract: ERC1155
       internal functions
         _burn
           reverts when burning a non-existent token id:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x54b64685e6e432665ae692f043a04a6666ef7c836b91a480a0c763f6076e929c exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC1155: burn amount exceeds balance

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC1155/ERC1155.test.js:121:9)

  285) Contract: ERC1155
       internal functions
         _burn
           reverts when burning more than available tokens:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x404eaf284c5561a76d603f940c1bb8146dcf20f0fb95fe8f66a1f08a17900a38 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC1155: burn amount exceeds balance

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC1155/ERC1155.test.js:136:9)

  286) Contract: ERC1155
       internal functions
         _burn
           with minted-then-burnt tokens
             accounts for both minting and burning:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC1155/ERC1155.test.js:164:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  287) Contract: ERC1155
       internal functions
         _burnBatch
           reverts when burning the zero account's tokens:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x92dc8babfb38c82be7a9f8805a83f4c3d0fdd0f44205c51d5d83c2bdc2fbe59c exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC1155: burn from the zero address

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC1155/ERC1155.test.js:174:9)

  288) Contract: ERC1155
       internal functions
         _burnBatch
           reverts if length of inputs do not match:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xd54ba870a6426ac800e34fcb26970e19e17cc0767d986e3c56c1c519eeb4ec5f exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC1155: ids and amounts length mismatch

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC1155/ERC1155.test.js:181:9)

  289) Contract: ERC1155
       internal functions
         _burnBatch
           reverts when burning a non-existent token id:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xd02a21ad4370cfe2dde98e7514edd8ef1feee1cff5f39fd124a5d00b73aa6909 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC1155: burn amount exceeds balance

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC1155/ERC1155.test.js:193:9)

  290) Contract: ERC1155
       internal functions
         _burnBatch
           with minted-then-burnt tokens
             accounts for both minting and burning:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC1155/ERC1155.test.js:221:56)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  291) Contract: ERC1155
       ERC1155MetadataURI
         sets the initial URI for all token types:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC1155/ERC1155.test.js:243:31)
      at processImmediate (internal/timers.js:461:21)

  292) Contract: ERC1155
       ERC1155MetadataURI
         _setURI
           sets the new URI for all token types:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC1155/ERC1155.test.js:259:33)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  293) Contract: ERC1155Burnable
       "before each" hook: before test for "holder can burn their tokens":
     Error: Returned error: invalid character 'W' looking for beginning of value
      at Object.ErrorResponse (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1
      at XMLHttpRequest.request.onreadystatechange (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (internal/streams/readable.js:1327:12)
      at processTicksAndRejections (internal/process/task_queues.js:80:21)

  294) Contract: ERC1155Holder
       receives ERC1155 tokens from a single ID:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC1155/ERC1155Holder.test.js:35:34)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  295) Contract: ERC1155Holder
       receives ERC1155 tokens from a multiple IDs:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC1155/ERC1155Holder.test.js:45:36)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  296) Contract: ERC1155Holder
       Contract interface
         ERC165
           ERC165's supportsInterface(bytes4)
             claims support:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/introspection/SupportsInterface.behavior.js:69:49)
      at processImmediate (internal/timers.js:461:21)

  297) Contract: ERC1155Holder
       Contract interface
         ERC1155Receiver
           ERC165's supportsInterface(bytes4)
             claims support:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/introspection/SupportsInterface.behavior.js:69:49)
      at processImmediate (internal/timers.js:461:21)

  298) Contract: ERC1155Pausable
       when token is paused
         reverts when trying to safeTransferFrom from holder:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x1168a2bbc7e1f2861aabea88a275da9f8621979e2729e722e094282c17c7eeaf exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC1155Pausable: token transfer while paused

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC1155/ERC1155Pausable.test.js:31:7)

  299) Contract: ERC1155Pausable
       when token is paused
         reverts when trying to safeTransferFrom from operator:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x1df916b5302ab8e7f2d2bc3bec0febb04914138b32d06b7b449206f013be057e exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC1155Pausable: token transfer while paused

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC1155/ERC1155Pausable.test.js:38:7)

  300) Contract: ERC1155Pausable
       when token is paused
         reverts when trying to safeBatchTransferFrom from holder:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x6b7b0520f89e6d5f26307f6ddf52e2f250986d02531cf4bb04b7500f87ab0fb0 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC1155Pausable: token transfer while paused

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC1155/ERC1155Pausable.test.js:45:7)

  301) Contract: ERC1155Pausable
       when token is paused
         reverts when trying to safeBatchTransferFrom from operator:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xc42af367a9109e745d30ccb20c405638b65e21d67817ed3c0c8b40c57a5c5cb5 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC1155Pausable: token transfer while paused

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC1155/ERC1155Pausable.test.js:52:7)

  302) Contract: ERC1155Pausable
       when token is paused
         reverts when trying to mint:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xa10e0cf47deaa93d857be1975d88f58921f3014dbf158ba25edba5b45c6dcd1e exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC1155Pausable: token transfer while paused

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC1155/ERC1155Pausable.test.js:61:7)

  303) Contract: ERC1155Pausable
       when token is paused
         reverts when trying to mintBatch:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x456112afd2d52c3f1c547a01fbcaf16d80b107e726588eadff343dc5c3902e11 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC1155Pausable: token transfer while paused

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC1155/ERC1155Pausable.test.js:68:7)

  304) Contract: ERC1155Pausable
       when token is paused
         reverts when trying to burn:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xa04948490991455d1c152a66018ddadb7aab67b66099c4ff8d2912a39fa1f015 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC1155Pausable: token transfer while paused

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC1155/ERC1155Pausable.test.js:75:7)

  305) Contract: ERC1155Pausable
       when token is paused
         reverts when trying to burnBatch:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xc84ba281e86f7415eaaa3c091a7ed4e9dce39a39819915286596de8112a2607a exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC1155Pausable: token transfer while paused

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC1155/ERC1155Pausable.test.js:82:7)

  306) Contract: ERC1155Pausable
       when token is paused
         setApprovalForAll
           approves an operator:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC1155/ERC1155Pausable.test.js:91:33)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  307) Contract: ERC1155Pausable
       when token is paused
         balanceOf
           returns the amount of tokens owned by the given address:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC1155/ERC1155Pausable.test.js:97:42)
      at processImmediate (internal/timers.js:461:21)

  308) Contract: ERC1155Pausable
       when token is paused
         isApprovedForAll
           returns the approval of the operator:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC1155/ERC1155Pausable.test.js:104:33)
      at processImmediate (internal/timers.js:461:21)

  309) Contract: ERC20
       has a name:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC20/ERC20.test.js:27:29)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  310) Contract: ERC20
       has a symbol:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC20/ERC20.test.js:31:29)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  311) Contract: ERC20
       has 18 decimals:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC20/ERC20.test.js:35:29)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  312) Contract: ERC20
       _setupDecimals
         can set decimals during construction:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC20/ERC20.test.js:43:26)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  313) Contract: ERC20
       total supply
         returns the total amount of tokens:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC20/ERC20.behavior.js:8:31)
      at processImmediate (internal/timers.js:461:21)

  314) Contract: ERC20
       balanceOf
         when the requested account has no tokens
           returns zero:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC20/ERC20.behavior.js:15:33)
      at processImmediate (internal/timers.js:461:21)

  315) Contract: ERC20
       balanceOf
         when the requested account has some tokens
           returns the total amount of tokens:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC20/ERC20.behavior.js:21:33)
      at processImmediate (internal/timers.js:461:21)

  316) Contract: ERC20
       transfer
         when the recipient is not the zero address
           when the sender does not have enough balance
             reverts:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xfd0a2fc5f585ec040279a1248c75448855f07b213b41976c53e971e294363125 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC20: transfer amount exceeds balance

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC20/ERC20.behavior.js:168:9)

  317) Contract: ERC20
       transfer
         when the recipient is not the zero address
           when the sender transfers all balance
             transfers the requested amount:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC20/ERC20.behavior.js:180:33)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  318) Contract: ERC20
       "after each" hook: after test for "transfers the requested amount":
     Error: Returned error: invalid character 'W' looking for beginning of value
      at Object.ErrorResponse (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1
      at XMLHttpRequest.request.onreadystatechange (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (internal/streams/readable.js:1327:12)
      at processTicksAndRejections (internal/process/task_queues.js:80:21)

  319) Contract: ERC20Burnable
       burn
         when the given amount is not greater than balance of the sender
           for a zero amount
             burns the requested amount:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC20/behaviors/ERC20Burnable.behavior.js:23:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  320) Contract: ERC20Burnable
       burn
         when the given amount is not greater than balance of the sender
           for a zero amount
             "before each" hook for "emits a transfer event":
     Error: Returned error: invalid character 'W' looking for beginning of value
      at Context.<anonymous> (test/token/ERC20/behaviors/ERC20Burnable.behavior.js:19:51)
      at processImmediate (internal/timers.js:461:21)

  321) Contract: ERC20Burnable
       burn
         when the given amount is not greater than balance of the sender
           for a non-zero amount
             burns the requested amount:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC20/behaviors/ERC20Burnable.behavior.js:23:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  322) Contract: ERC20Burnable
       burn
         when the given amount is greater than the balance of the sender
           reverts:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xf9bd5795b9b21a58e2ce6a3f8f4d7f02dd557669c099d890fd734e6eef45cfc9 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC20: burn amount exceeds balance

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC20/behaviors/ERC20Burnable.behavior.js:40:9)

  323) Contract: ERC20Burnable
       burnFrom
         on success
           for a zero amount
             burns the requested amount:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC20/behaviors/ERC20Burnable.behavior.js:67:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  324) Contract: ERC20Burnable
       burnFrom
         on success
           for a zero amount
             decrements allowance:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC20/behaviors/ERC20Burnable.behavior.js:71:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  325) Contract: ERC20Burnable
       burnFrom
         on success
           for a non-zero amount
             burns the requested amount:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC20/behaviors/ERC20Burnable.behavior.js:67:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  326) Contract: ERC20Burnable
       burnFrom
         on success
           for a non-zero amount
             decrements allowance:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC20/behaviors/ERC20Burnable.behavior.js:71:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  327) Contract: ERC20Burnable
       "before each" hook for "reverts":
     Error: Returned error: invalid character 'W' looking for beginning of value
      at Context.<anonymous> (test/token/ERC20/ERC20Burnable.test.js:15:45)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  328) Contract: ERC20Capped
       requires a non-zero cap:
     Error: Timeout of 300000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/token/ERC20/ERC20Capped.test.js)
      at listOnTimeout (internal/timers.js:554:17)
      at processTimers (internal/timers.js:497:7)

  329) Contract: ERC20Capped
       once deployed
         capped token
           starts with the correct cap:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC20/behaviors/ERC20Capped.behavior.js:10:31)
      at processImmediate (internal/timers.js:461:21)

  330) Contract: ERC20Capped
       once deployed
         capped token
           mints when amount is less than cap:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC20/behaviors/ERC20Capped.behavior.js:15:31)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  331) Contract: ERC20Capped
       once deployed
         capped token
           fails to mint if the amount exceeds the cap:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x04a031252bf191b45b6c089cd510fbe4474dbd77b24ba5f731c94766e5022cac exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC20Capped: cap exceeded

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC20/behaviors/ERC20Capped.behavior.js:20:7)

  332) Contract: ERC20Capped
       once deployed
         capped token
           fails to mint after cap is reached:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x9cf0e7acab120179a238953dcd050989e6a917e740a1ff6771ada50fe9eab562 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC20Capped: cap exceeded

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC20/behaviors/ERC20Capped.behavior.js:25:7)

  333) Contract: ERC20Pausable
       pausable token
         transfer
           allows to transfer when unpaused:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC20/ERC20Pausable.test.js:24:33)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  334) Contract: ERC20Pausable
       pausable token
         transfer
           allows to transfer when paused and then unpaused:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC20/ERC20Pausable.test.js:34:33)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  335) Contract: ERC20Pausable
       pausable token
         transfer
           reverts when trying to transfer when paused:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x27ce049145a4b8013b0e6c28950d9701b32a60c5ec7006a6cbcf6835283c9d74 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC20Pausable: token transfer while paused

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC20/ERC20Pausable.test.js:41:9)

  336) Contract: ERC20Pausable
       pausable token
         transfer from
           allows to transfer from when unpaused:
     Error: Returned error: qtum [code: -4] Private key not available
      at Context.<anonymous> (test/token/ERC20/ERC20Pausable.test.js:55:26)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  337) Contract: ERC20Pausable
       pausable token
         transfer from
           allows to transfer when paused and then unpaused:
     Error: Returned error: qtum [code: -4] Private key not available
      at Context.<anonymous> (test/token/ERC20/ERC20Pausable.test.js:65:26)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  338) Contract: ERC20Pausable
       pausable token
         transfer from
           reverts when trying to transfer from when paused:

      Wrong kind of exception received
      + expected - actual

      -Returned error: qtum [code: -4] Private key not available
      +ERC20Pausable: token transfer while paused

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC20/ERC20Pausable.test.js:74:9)

  339) Contract: ERC20Pausable
       pausable token
         mint
           allows to mint when unpaused:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC20/ERC20Pausable.test.js:86:33)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  340) Contract: ERC20Pausable
       pausable token
         mint
           allows to mint when paused and then unpaused:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC20/ERC20Pausable.test.js:95:33)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  341) Contract: ERC20Pausable
       pausable token
         mint
           reverts when trying to mint when paused:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x134a6e225b7a72b9a999876ef86676c1935abe267ad16f20ff63ae6792ba72bd exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC20Pausable: token transfer while paused

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC20/ERC20Pausable.test.js:101:9)

  342) Contract: ERC20Pausable
       pausable token
         burn
           allows to burn when unpaused:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC20/ERC20Pausable.test.js:113:33)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  343) Contract: ERC20Pausable
       pausable token
         burn
           allows to burn when paused and then unpaused:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC20/ERC20Pausable.test.js:122:33)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  344) Contract: ERC20Pausable
       pausable token
         burn
           reverts when trying to burn when paused:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x64ef0fef350c4c86cd8e1b0a97c12af007c3bd6ac9107301e39fdfd03fc13925 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC20Pausable: token transfer while paused

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC20/ERC20Pausable.test.js:128:9)

  345) Contract: ERC20Snapshot
       totalSupplyAt
         reverts with a snapshot id of 0:

      Wrong kind of exception received
      + expected - actual

      -Returned error: VM exception: OutOfGasIntrinsic
      +ERC20Snapshot: id is 0

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC20/ERC20Snapshot.test.js:34:7)

  346) Contract: ERC20Snapshot
       totalSupplyAt
         reverts with a not-yet-created snapshot id:

      Wrong kind of exception received
      + expected - actual

      -Returned error: VM exception: OutOfGasIntrinsic
      +ERC20Snapshot: nonexistent id

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC20/ERC20Snapshot.test.js:38:7)

  347) Contract: ERC20Snapshot
       totalSupplyAt
         with initial snapshot
           with no supply changes after the snapshot
             returns the current total supply:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC20/ERC20Snapshot.test.js:51:35)
      at processImmediate (internal/timers.js:461:21)

  348) Contract: ERC20Snapshot
       totalSupplyAt
         with initial snapshot
           with supply changes after the snapshot
             returns the total supply before the changes:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC20/ERC20Snapshot.test.js:62:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  349) Contract: ERC20Snapshot
       totalSupplyAt
         with initial snapshot
           with supply changes after the snapshot
             with a second snapshot after supply changes
               snapshots return the supply before and after the changes:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC20/ERC20Snapshot.test.js:74:37)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  350) Contract: ERC20Snapshot
       totalSupplyAt
         with initial snapshot
           with supply changes after the snapshot
             with multiple snapshots after supply changes
               all posterior snapshots return the supply after the changes:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC20/ERC20Snapshot.test.js:93:37)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  351) Contract: ERC20Snapshot
       balanceOfAt
         reverts with a snapshot id of 0:

      Wrong kind of exception received
      + expected - actual

      -Returned error: VM exception: OutOfGasIntrinsic
      +ERC20Snapshot: id is 0

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC20/ERC20Snapshot.test.js:108:7)

  352) Contract: ERC20Snapshot
       balanceOfAt
         reverts with a not-yet-created snapshot id:

      Wrong kind of exception received
      + expected - actual

      -Returned error: VM exception: OutOfGasIntrinsic
      +ERC20Snapshot: nonexistent id

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC20/ERC20Snapshot.test.js:112:7)

  353) Contract: ERC20Snapshot
       balanceOfAt
         with initial snapshot
           with no balance changes after the snapshot
             returns the current balance for all accounts:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC20/ERC20Snapshot.test.js:125:35)
      at processImmediate (internal/timers.js:461:21)

  354) Contract: ERC20Snapshot
       balanceOfAt
         with initial snapshot
           with balance changes after the snapshot
             returns the balances before the changes:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC20/ERC20Snapshot.test.js:140:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  355) Contract: ERC20Snapshot
       balanceOfAt
         with initial snapshot
           with balance changes after the snapshot
             with a second snapshot after supply changes
               snapshots return the balances before and after the changes:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC20/ERC20Snapshot.test.js:155:37)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  356) Contract: ERC20Snapshot
       balanceOfAt
         with initial snapshot
           with balance changes after the snapshot
             with multiple snapshots after supply changes
               all posterior snapshots return the supply after the changes:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC20/ERC20Snapshot.test.js:183:37)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  357) Contract: SafeERC20
       with address that has no contract code
         reverts on transfer:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xf657570202cb752819a816bb796112b4429aef67d1cd5893612c8d5d9a3bf135 exited with an error (status 0) after consuming all gas.
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `assert` statements.
      -     - has enough gas to execute the full transaction.
      -     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
      +Address: call to non-contract

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC20/SafeERC20.test.js:46:5)

  358) Contract: SafeERC20
       with address that has no contract code
         reverts on transferFrom:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xd8b00d2dd939c29b1e96441f9f2c4ae1d9dfc9fa2133b9510053ec88b2301e11 exited with an error (status 0) after consuming all gas.
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `assert` statements.
      -     - has enough gas to execute the full transaction.
      -     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
      +Address: call to non-contract

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC20/SafeERC20.test.js:50:5)

  359) Contract: SafeERC20
       with address that has no contract code
         reverts on approve:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xb86345fb9ca218483667f95ae8bf51ea36ed200c1734c56277bd5cb51e616960 exited with an error (status 0) after consuming all gas.
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `assert` statements.
      -     - has enough gas to execute the full transaction.
      -     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
      +Address: call to non-contract

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC20/SafeERC20.test.js:54:5)

  360) Contract: SafeERC20
       with token that returns false on all calls
         reverts on transfer:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x5f5b57214fbbdfa1d0dfb8781400bd1b0573e0d90d0f1f2b1b0505491f96de5f exited with an error (status 0) after consuming all gas.
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `assert` statements.
      -     - has enough gas to execute the full transaction.
      -     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
      +SafeERC20: ERC20 operation did not succeed

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC20/SafeERC20.test.js:46:5)

  361) Contract: SafeERC20
       with token that returns false on all calls
         reverts on transferFrom:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x6ac518fc1cce6c440d6143733136a2e451f7e0fb1b2971c7a58fddcf4df32c3d exited with an error (status 0) after consuming all gas.
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `assert` statements.
      -     - has enough gas to execute the full transaction.
      -     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
      +SafeERC20: ERC20 operation did not succeed

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC20/SafeERC20.test.js:50:5)

  362) Contract: SafeERC20
       with token that returns false on all calls
         reverts on approve:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xce151539cf83ea3608383ffa9ac4f4524ba56c31e00aa685f6d72f87de8fa3f4 exited with an error (status 0) after consuming all gas.
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `assert` statements.
      -     - has enough gas to execute the full transaction.
      -     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
      +SafeERC20: ERC20 operation did not succeed

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC20/SafeERC20.test.js:54:5)

  363) Contract: SafeERC20
       with token that returns false on all calls
         reverts on increaseAllowance:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xa0e6719f892aff7e9123366645623ad5910d59f1e9dee7dbfda44faddca0bae2 exited with an error (status 0) after consuming all gas.
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `assert` statements.
      -     - has enough gas to execute the full transaction.
      -     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
      +revert

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at Context.<anonymous> (test/token/ERC20/SafeERC20.test.js:59:5)

  364) Contract: SafeERC20
       with token that returns false on all calls
         reverts on decreaseAllowance:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xe80f203d1b399a87a34b71a14efcddfd3419dd264a504150300d943d082e7fcd exited with an error (status 0) after consuming all gas.
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `assert` statements.
      -     - has enough gas to execute the full transaction.
      -     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
      +revert

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at Context.<anonymous> (test/token/ERC20/SafeERC20.test.js:64:5)

  365) Contract: SafeERC20
       with token that returns true on all calls
         doesn't revert on transfer:
     Transaction: 0xba2f03b31a0fd4188e980716f85c5c11f4f7c8e604715a37f0422b61d61b3490 exited with an error (status 0) after consuming all gas.
     Please check that the transaction:
     - satisfies all conditions set by Solidity `assert` statements.
     - has enough gas to execute the full transaction.
     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
  StatusError: Transaction: 0xba2f03b31a0fd4188e980716f85c5c11f4f7c8e604715a37f0422b61d61b3490 exited with an error (status 0) after consuming all gas.
      at Context.<anonymous> (test/token/ERC20/SafeERC20.test.js:70:24)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  366) Contract: SafeERC20
       with token that returns true on all calls
         doesn't revert on transferFrom:
     Transaction: 0x084b59c5d19eedf7525a79ca33530bfb86ee7d7aeb749b0a7b2ff8f5007db5a8 exited with an error (status 0) after consuming all gas.
     Please check that the transaction:
     - satisfies all conditions set by Solidity `assert` statements.
     - has enough gas to execute the full transaction.
     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
  StatusError: Transaction: 0x084b59c5d19eedf7525a79ca33530bfb86ee7d7aeb749b0a7b2ff8f5007db5a8 exited with an error (status 0) after consuming all gas.
      at Context.<anonymous> (test/token/ERC20/SafeERC20.test.js:74:24)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  367) Contract: SafeERC20
       with token that returns true on all calls
         approvals
           with zero allowance
             doesn't revert when approving a non-zero allowance:
     Transaction: 0x06bd3a2055fb7593385f146ba1dd4476d9a6af6c3c57d6faf25ff7a61ac748b7 exited with an error (status 0) after consuming all gas.
     Please check that the transaction:
     - satisfies all conditions set by Solidity `assert` statements.
     - has enough gas to execute the full transaction.
     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
  StatusError: Transaction: 0x06bd3a2055fb7593385f146ba1dd4476d9a6af6c3c57d6faf25ff7a61ac748b7 exited with an error (status 0) after consuming all gas.
      at Context.<anonymous> (test/token/ERC20/SafeERC20.test.js:84:28)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  368) Contract: SafeERC20
       with token that returns true on all calls
         approvals
           with zero allowance
             doesn't revert when approving a zero allowance:
     Transaction: 0xfa2569cdf736160eba17af063872b07f72eeb826594de7c9ac44283e22d79b81 exited with an error (status 0) after consuming all gas.
     Please check that the transaction:
     - satisfies all conditions set by Solidity `assert` statements.
     - has enough gas to execute the full transaction.
     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
  StatusError: Transaction: 0xfa2569cdf736160eba17af063872b07f72eeb826594de7c9ac44283e22d79b81 exited with an error (status 0) after consuming all gas.
      at Context.<anonymous> (test/token/ERC20/SafeERC20.test.js:88:28)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  369) Contract: SafeERC20
       with token that returns true on all calls
         approvals
           with zero allowance
             doesn't revert when increasing the allowance:
     Transaction: 0x0404d41367ef514be245d4926cc3868f7784ca30f3e130e11a76634b6365b79b exited with an error (status 0) after consuming all gas.
     Please check that the transaction:
     - satisfies all conditions set by Solidity `assert` statements.
     - has enough gas to execute the full transaction.
     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
  StatusError: Transaction: 0x0404d41367ef514be245d4926cc3868f7784ca30f3e130e11a76634b6365b79b exited with an error (status 0) after consuming all gas.
      at Context.<anonymous> (test/token/ERC20/SafeERC20.test.js:92:28)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  370) Contract: SafeERC20
       with token that returns true on all calls
         approvals
           with zero allowance
             reverts when decreasing the allowance:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x0b1add561562981f5a6b9434b80271e9084fca24da6fb649a858367a0ed8ec64 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +SafeERC20: decreased allowance below zero

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC20/SafeERC20.test.js:96:9)

  371) Contract: SafeERC20
       with token that returns true on all calls
         approvals
           with non-zero allowance
             reverts when approving a non-zero allowance:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x8175ffd6a1bd1aa93232a35d11bd348ef89ad25847d71ef2f1c0f33fd7ba539d exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +SafeERC20: approve from non-zero to non-zero allowance

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC20/SafeERC20.test.js:109:9)

  372) Contract: SafeERC20
       with token that returns true on all calls
         approvals
           with non-zero allowance
             doesn't revert when approving a zero allowance:
     Transaction: 0x6e039769ada314c65ef1c67eab181be842b42f347f5b9586db611716ee692eca exited with an error (status 0) after consuming all gas.
     Please check that the transaction:
     - satisfies all conditions set by Solidity `assert` statements.
     - has enough gas to execute the full transaction.
     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
  StatusError: Transaction: 0x6e039769ada314c65ef1c67eab181be842b42f347f5b9586db611716ee692eca exited with an error (status 0) after consuming all gas.
      at Context.<anonymous> (test/token/ERC20/SafeERC20.test.js:116:28)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  373) Contract: SafeERC20
       with token that returns true on all calls
         approvals
           with non-zero allowance
             doesn't revert when increasing the allowance:
     Transaction: 0xa5d63e1b8ad560e3491a3b1c29758987629865874cc5f86a3c0317035a7e4ccc exited with an error (status 0) after consuming all gas.
     Please check that the transaction:
     - satisfies all conditions set by Solidity `assert` statements.
     - has enough gas to execute the full transaction.
     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
  StatusError: Transaction: 0xa5d63e1b8ad560e3491a3b1c29758987629865874cc5f86a3c0317035a7e4ccc exited with an error (status 0) after consuming all gas.
      at Context.<anonymous> (test/token/ERC20/SafeERC20.test.js:120:28)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  374) Contract: SafeERC20
       with token that returns true on all calls
         approvals
           with non-zero allowance
             doesn't revert when decreasing the allowance to a positive value:
     Transaction: 0xaa298bdeb6b7e703760368016e0783e518bfdce5a6974836616bf02408878ef8 exited with an error (status 0) after consuming all gas.
     Please check that the transaction:
     - satisfies all conditions set by Solidity `assert` statements.
     - has enough gas to execute the full transaction.
     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
  StatusError: Transaction: 0xaa298bdeb6b7e703760368016e0783e518bfdce5a6974836616bf02408878ef8 exited with an error (status 0) after consuming all gas.
      at Context.<anonymous> (test/token/ERC20/SafeERC20.test.js:124:28)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  375) Contract: SafeERC20
       with token that returns true on all calls
         approvals
           with non-zero allowance
             reverts when decreasing the allowance to a negative value:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xde7067b55c57e5cce4ccbba00c4d563c66d4462f44ecbeed8fa1674e0bd3113c exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +SafeERC20: decreased allowance below zero

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC20/SafeERC20.test.js:128:9)

  376) Contract: SafeERC20
       with token that returns no boolean values
         doesn't revert on transfer:
     Transaction: 0x0e96f7665349a3f4b77c660bd842a8bbbf851e16ba5f139023b9bf64bc806e91 exited with an error (status 0) after consuming all gas.
     Please check that the transaction:
     - satisfies all conditions set by Solidity `assert` statements.
     - has enough gas to execute the full transaction.
     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
  StatusError: Transaction: 0x0e96f7665349a3f4b77c660bd842a8bbbf851e16ba5f139023b9bf64bc806e91 exited with an error (status 0) after consuming all gas.
      at Context.<anonymous> (test/token/ERC20/SafeERC20.test.js:70:24)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  377) Contract: SafeERC20
       with token that returns no boolean values
         doesn't revert on transferFrom:
     Transaction: 0x085fb3be3b203f2276acf518f7e88ff760354905a32a50654ca73924a7d2b27b exited with an error (status 0) after consuming all gas.
     Please check that the transaction:
     - satisfies all conditions set by Solidity `assert` statements.
     - has enough gas to execute the full transaction.
     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
  StatusError: Transaction: 0x085fb3be3b203f2276acf518f7e88ff760354905a32a50654ca73924a7d2b27b exited with an error (status 0) after consuming all gas.
      at Context.<anonymous> (test/token/ERC20/SafeERC20.test.js:74:24)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  378) Contract: SafeERC20
       with token that returns no boolean values
         approvals
           with zero allowance
             doesn't revert when approving a non-zero allowance:
     Transaction: 0x7b778602f4c85ef87d3d88050adc2efa1e4638b14a9c69db1503c16a20f9e17a exited with an error (status 0) after consuming all gas.
     Please check that the transaction:
     - satisfies all conditions set by Solidity `assert` statements.
     - has enough gas to execute the full transaction.
     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
  StatusError: Transaction: 0x7b778602f4c85ef87d3d88050adc2efa1e4638b14a9c69db1503c16a20f9e17a exited with an error (status 0) after consuming all gas.
      at Context.<anonymous> (test/token/ERC20/SafeERC20.test.js:84:28)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  379) Contract: SafeERC20
       with token that returns no boolean values
         approvals
           with zero allowance
             doesn't revert when approving a zero allowance:
     Transaction: 0xb3d7c1360c5b4ce76e2475a0a700625ca8f0a2f464121099d897472dbfc62d85 exited with an error (status 0) after consuming all gas.
     Please check that the transaction:
     - satisfies all conditions set by Solidity `assert` statements.
     - has enough gas to execute the full transaction.
     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
  StatusError: Transaction: 0xb3d7c1360c5b4ce76e2475a0a700625ca8f0a2f464121099d897472dbfc62d85 exited with an error (status 0) after consuming all gas.
      at Context.<anonymous> (test/token/ERC20/SafeERC20.test.js:88:28)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  380) Contract: SafeERC20
       with token that returns no boolean values
         approvals
           with zero allowance
             doesn't revert when increasing the allowance:
     Transaction: 0x6606f4499549f48d822e8f5529efcfde5aefe3e7e8767c6b2079e3e8097bab11 exited with an error (status 0) after consuming all gas.
     Please check that the transaction:
     - satisfies all conditions set by Solidity `assert` statements.
     - has enough gas to execute the full transaction.
     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
  StatusError: Transaction: 0x6606f4499549f48d822e8f5529efcfde5aefe3e7e8767c6b2079e3e8097bab11 exited with an error (status 0) after consuming all gas.
      at Context.<anonymous> (test/token/ERC20/SafeERC20.test.js:92:28)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  381) Contract: SafeERC20
       with token that returns no boolean values
         approvals
           with zero allowance
             reverts when decreasing the allowance:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x034790ac4536e2fe54f87cff9f6f6d4f82da8120f8d58b0443788d5f3753a07b exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +SafeERC20: decreased allowance below zero

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC20/SafeERC20.test.js:96:9)

  382) Contract: SafeERC20
       with token that returns no boolean values
         approvals
           with non-zero allowance
             reverts when approving a non-zero allowance:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x0605b6ac8c54cc993b23719e1261eb45d92f9050109b891da69dde5869f0654b exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +SafeERC20: approve from non-zero to non-zero allowance

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC20/SafeERC20.test.js:109:9)

  383) Contract: SafeERC20
       with token that returns no boolean values
         approvals
           with non-zero allowance
             doesn't revert when approving a zero allowance:
     Transaction: 0xeea2a001576d7c32b291df8c60461efa1122ee1b7685a77e80bc82d6a5a84b85 exited with an error (status 0) after consuming all gas.
     Please check that the transaction:
     - satisfies all conditions set by Solidity `assert` statements.
     - has enough gas to execute the full transaction.
     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
  StatusError: Transaction: 0xeea2a001576d7c32b291df8c60461efa1122ee1b7685a77e80bc82d6a5a84b85 exited with an error (status 0) after consuming all gas.
      at Context.<anonymous> (test/token/ERC20/SafeERC20.test.js:116:28)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  384) Contract: SafeERC20
       with token that returns no boolean values
         approvals
           with non-zero allowance
             doesn't revert when increasing the allowance:
     Transaction: 0xeaf5b537ac65fc829a2aaa6aed3101fe188f16d509363bf87f5a558c20a65794 exited with an error (status 0) after consuming all gas.
     Please check that the transaction:
     - satisfies all conditions set by Solidity `assert` statements.
     - has enough gas to execute the full transaction.
     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
  StatusError: Transaction: 0xeaf5b537ac65fc829a2aaa6aed3101fe188f16d509363bf87f5a558c20a65794 exited with an error (status 0) after consuming all gas.
      at Context.<anonymous> (test/token/ERC20/SafeERC20.test.js:120:28)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  385) Contract: SafeERC20
       with token that returns no boolean values
         approvals
           with non-zero allowance
             doesn't revert when decreasing the allowance to a positive value:
     Transaction: 0xae1541ac73e6f55e3ff2e0399b7e562d8886b7ab1f2bfbf2b5f2420d5936dda0 exited with an error (status 0) after consuming all gas.
     Please check that the transaction:
     - satisfies all conditions set by Solidity `assert` statements.
     - has enough gas to execute the full transaction.
     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
  StatusError: Transaction: 0xae1541ac73e6f55e3ff2e0399b7e562d8886b7ab1f2bfbf2b5f2420d5936dda0 exited with an error (status 0) after consuming all gas.
      at Context.<anonymous> (test/token/ERC20/SafeERC20.test.js:124:28)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  386) Contract: SafeERC20
       with token that returns no boolean values
         approvals
           with non-zero allowance
             reverts when decreasing the allowance to a negative value:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xb405fa9aa7ecd5fc15f12d669fc36a7d37e278591a9f0adb2e05b5237800273d exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +SafeERC20: decreased allowance below zero

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC20/SafeERC20.test.js:128:9)

  387) Contract: TokenTimelock
       with token
         rejects a release time in the past:
     Error: Timeout of 300000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/token/ERC20/TokenTimelock.test.js)
      at listOnTimeout (internal/timers.js:554:17)
      at processTimers (internal/timers.js:497:7)

  388) Contract: TokenTimelock
       with token
         once deployed
           can get state:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC20/TokenTimelock.test.js:37:36)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  389) Contract: TokenTimelock
       with token
         once deployed
           cannot be released before time limit:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x3620dd3c98448b2f781fdbcad305149ad60ababb4e74e10cecbe03242ac5a040 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +TokenTimelock: current time is before release time

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC20/TokenTimelock.test.js:43:9)

  390) Contract: TokenTimelock
       with token
         once deployed
           cannot be released just before time limit:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x12fe615d3d4adde74fcde496947871c1d229b2f2469048626e5d383369203294 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +TokenTimelock: current time is before release time

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC20/TokenTimelock.test.js:48:9)

  391) Contract: TokenTimelock
       with token
         once deployed
           can be released just after limit:
     Transaction: 0xa7bb380e8edeedc9c9c9ef87283399707bd0300758c60c081db4fb664d50ac14 exited with an error (status 0).
     Please check that the transaction:
     - satisfies all conditions set by Solidity `require` statements.
     - does not trigger a Solidity `revert` statement.

  StatusError: Transaction: 0xa7bb380e8edeedc9c9c9ef87283399707bd0300758c60c081db4fb664d50ac14 exited with an error (status 0).
      at Context.<anonymous> (test/token/ERC20/TokenTimelock.test.js:53:29)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  392) Contract: TokenTimelock
       with token
         once deployed
           can be released after time limit:
     Transaction: 0x4e5c482ccbf25d12daf3b99faf0234b2dc0840ba13c6a2a48c9b30c2ce92b072 exited with an error (status 0).
     Please check that the transaction:
     - satisfies all conditions set by Solidity `require` statements.
     - does not trigger a Solidity `revert` statement.

  StatusError: Transaction: 0x4e5c482ccbf25d12daf3b99faf0234b2dc0840ba13c6a2a48c9b30c2ce92b072 exited with an error (status 0).
      at Context.<anonymous> (test/token/ERC20/TokenTimelock.test.js:59:29)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  393) Contract: TokenTimelock
       with token
         once deployed
           cannot be released twice:
     Transaction: 0x1e6adcbadd57c72c94b06dfdcbe32da11843bd6557e04365f3632e6794dbea00 exited with an error (status 0).
     Please check that the transaction:
     - satisfies all conditions set by Solidity `require` statements.
     - does not trigger a Solidity `revert` statement.

  StatusError: Transaction: 0x1e6adcbadd57c72c94b06dfdcbe32da11843bd6557e04365f3632e6794dbea00 exited with an error (status 0).
      at Context.<anonymous> (test/token/ERC20/TokenTimelock.test.js:65:29)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  394) Contract: ERC721
       Contract interface
         ERC165
           ERC165's supportsInterface(bytes4)
             claims support:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/introspection/SupportsInterface.behavior.js:69:49)
      at processImmediate (internal/timers.js:461:21)

  395) Contract: ERC721
       Contract interface
         ERC721
           ERC165's supportsInterface(bytes4)
             claims support:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/introspection/SupportsInterface.behavior.js:69:49)
      at processImmediate (internal/timers.js:461:21)

  396) Contract: ERC721
       Contract interface
         ERC721Enumerable
           ERC165's supportsInterface(bytes4)
             claims support:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/introspection/SupportsInterface.behavior.js:69:49)
      at processImmediate (internal/timers.js:461:21)

  397) Contract: ERC721
       Contract interface
         ERC721Metadata
           ERC165's supportsInterface(bytes4)
             claims support:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/introspection/SupportsInterface.behavior.js:69:49)
      at processImmediate (internal/timers.js:461:21)

  398) Contract: ERC721
       metadata
         has a name:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:36:31)
      at processImmediate (internal/timers.js:461:21)

  399) Contract: ERC721
       metadata
         has a symbol:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:40:31)
      at processImmediate (internal/timers.js:461:21)

  400) Contract: ERC721
       metadata
         token URI
           it is empty by default:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:52:33)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  401) Contract: ERC721
       metadata
         token URI
           reverts when queried for non existent token id:

      Wrong kind of exception received
      + expected - actual

      -Returned error: VM exception: OutOfGasIntrinsic
      +ERC721Metadata: URI query for nonexistent token

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:56:9)

  402) Contract: ERC721
       metadata
         token URI
           can be set for a token id:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:63:33)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  403) Contract: ERC721
       metadata
         token URI
           reverts when setting for non existent token id:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x8ca4774705d08b57bab232ba1069ee6fac65cb494c066dad3c18b62e8cb287b3 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC721Metadata: URI set of nonexistent token

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:67:9)

  404) Contract: ERC721
       metadata
         token URI
           base URI can be set:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:74:33)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  405) Contract: ERC721
       metadata
         token URI
           base URI is added as a prefix to the token URI:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:81:33)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  406) Contract: ERC721
       metadata
         token URI
           token URI can be changed by changing the base URI:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:90:33)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  407) Contract: ERC721
       metadata
         token URI
           tokenId is appended to base URI for tokens with no URI:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:96:33)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  408) Contract: ERC721
       metadata
         token URI
           tokens with URI can be burnt :
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:104:33)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  409) Contract: ERC721
       with minted tokens
         balanceOf
           when the given address owns some tokens
             returns the amount of tokens owned by the given address:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:122:35)
      at processImmediate (internal/timers.js:461:21)

  410) Contract: ERC721
       with minted tokens
         balanceOf
           when the given address does not own any tokens
             returns 0:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:128:35)
      at processImmediate (internal/timers.js:461:21)

  411) Contract: ERC721
       with minted tokens
         balanceOf
           when querying the zero address
             throws:

      Wrong kind of exception received
      + expected - actual

      -Returned error: VM exception: OutOfGasIntrinsic
      +ERC721: balance query for the zero address

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:134:11)

  412) Contract: ERC721
       with minted tokens
         ownerOf
           when the given token ID was tracked by this token
             returns the owner of the given token ID:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:146:35)
      at processImmediate (internal/timers.js:461:21)

  413) Contract: ERC721
       with minted tokens
         ownerOf
           when the given token ID was not tracked by this token
             reverts:

      Wrong kind of exception received
      + expected - actual

      -Returned error: VM exception: OutOfGasIntrinsic
      +ERC721: owner query for nonexistent token

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:154:11)

  414) Contract: ERC721
       with minted tokens
         transfers
           via transferFrom
             when called by the owner
               transfers the ownership of the given token ID to the given address:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:174:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  415) Contract: ERC721
       with minted tokens
         transfers
           via transferFrom
             when called by the owner
               clears the approval for the token ID:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:182:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  416) Contract: ERC721
       with minted tokens
         transfers
           via transferFrom
             when called by the owner
               adjusts owners balances:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:190:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  417) Contract: ERC721
       with minted tokens
         transfers
           via transferFrom
             when called by the owner
               adjusts owners tokens by index:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:196:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  418) Contract: ERC721
       with minted tokens
         transfers
           via transferFrom
             when called by the approved individual
               "before each" hook for "transfers the ownership of the given token ID to the given address":
     Error: Returned error: qtum [code: -4] Private key not available
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:307:29)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:212:48)
      at processImmediate (internal/timers.js:461:21)

  419) Contract: ERC721
       with minted tokens
         transfers
           via transferFrom
             when called by the operator
               "before each" hook for "transfers the ownership of the given token ID to the given address":
     Error: Returned error: qtum [code: -4] Private key not available
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:307:29)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:219:48)
      at processImmediate (internal/timers.js:461:21)

  420) Contract: ERC721
       with minted tokens
         transfers
           via transferFrom
             when called by the owner without an approved user
               "before each" hook for "transfers the ownership of the given token ID to the given address":
     Error: Returned error: qtum [code: -4] Private key not available
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:307:29)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:227:48)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  421) Contract: ERC721
       with minted tokens
         transfers
           via transferFrom
             when sent to the owner
               keeps ownership of the token:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:238:37)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  422) Contract: ERC721
       with minted tokens
         transfers
           via transferFrom
             when sent to the owner
               clears the approval for the token ID:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:242:37)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  423) Contract: ERC721
       with minted tokens
         transfers
           via transferFrom
             when sent to the owner
               keeps the owner balance:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:254:37)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  424) Contract: ERC721
       with minted tokens
         transfers
           via transferFrom
             when sent to the owner
               keeps same tokens by index:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/token/ERC721/ERC721.test.js:260:42
      at Array.map (<anonymous>)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:260:22)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  425) Contract: ERC721
       with minted tokens
         transfers
           via transferFrom
             when the address of the previous owner is incorrect
               reverts:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x5f32e67b001f2a3a6ea5877e4afc0984bf233b66a4c84bf6a5c8e613ead86a5e exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC721: transfer of token that is not own

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:270:13)

  426) Contract: ERC721
       with minted tokens
         transfers
           via transferFrom
             when the sender is not authorized for the token id
               reverts:

      Wrong kind of exception received
      + expected - actual

      -Returned error: qtum [code: -4] Private key not available
      +ERC721: transfer caller is not owner nor approved

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:279:13)

  427) Contract: ERC721
       with minted tokens
         transfers
           via transferFrom
             when the given token ID does not exist
               reverts:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x56bdc9a1570acc2c9e27cc408cd236d888c382f47a14294000ef5b9631d9ad55 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC721: operator query for nonexistent token

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:288:13)

  428) Contract: ERC721
       with minted tokens
         transfers
           via transferFrom
             when the address to transfer the token to is the zero address
               reverts:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x12640580bec65e38eb6672e069c1aac6f59e9c4c18774689b0922e2adb7e006b exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC721: transfer to the zero address

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:297:13)

  429) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             with data
               to a user account
                 when called by the owner
                   transfers the ownership of the given token ID to the given address:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:174:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  430) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             with data
               to a user account
                 when called by the owner
                   clears the approval for the token ID:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:182:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  431) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             with data
               to a user account
                 when called by the owner
                   adjusts owners balances:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:190:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  432) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             with data
               to a user account
                 when called by the owner
                   adjusts owners tokens by index:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:196:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  433) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             with data
               to a user account
                 when called by the approved individual
                   "before each" hook for "transfers the ownership of the given token ID to the given address":
     Error: Returned error: qtum [code: -4] Private key not available
      at Context.safeTransferFromWithData (test/token/ERC721/ERC721.test.js:313:87)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:212:48)
      at processImmediate (internal/timers.js:461:21)

  434) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             with data
               to a user account
                 when called by the operator
                   "before each" hook for "transfers the ownership of the given token ID to the given address":
     Error: Returned error: qtum [code: -4] Private key not available
      at Context.safeTransferFromWithData (test/token/ERC721/ERC721.test.js:313:87)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:219:48)
      at processImmediate (internal/timers.js:461:21)

  435) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             with data
               to a user account
                 when called by the owner without an approved user
                   "before each" hook for "transfers the ownership of the given token ID to the given address":
     Error: Returned error: qtum [code: -4] Private key not available
      at Context.safeTransferFromWithData (test/token/ERC721/ERC721.test.js:313:87)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:227:48)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  436) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             with data
               to a user account
                 when sent to the owner
                   keeps ownership of the token:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:238:37)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  437) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             with data
               to a user account
                 when sent to the owner
                   clears the approval for the token ID:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:242:37)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  438) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             with data
               to a user account
                 when sent to the owner
                   keeps the owner balance:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:254:37)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  439) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             with data
               to a user account
                 when sent to the owner
                   keeps same tokens by index:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/token/ERC721/ERC721.test.js:260:42
      at Array.map (<anonymous>)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:260:22)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

 440) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             with data
               to a user account
                 when the address of the previous owner is incorrect
                   reverts:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xe316babffc20f1a102e499a075e2dfbb9ed67fe66fbd8f2891daf585c162816d exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC721: transfer of token that is not own

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:270:13)

  441) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             with data
               to a user account
                 when the sender is not authorized for the token id
                   reverts:

      Wrong kind of exception received
      + expected - actual

      -Returned error: qtum [code: -4] Private key not available
      +ERC721: transfer caller is not owner nor approved

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:279:13)

  442) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             with data
               to a user account
                 when the given token ID does not exist
                   reverts:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xdaf0e0581d0bd05c82e48d8c62d9b02464b953ca8bb5396606b69b8bd7f82b74 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC721: operator query for nonexistent token

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:288:13)

  443) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             with data
               to a user account
                 when the address to transfer the token to is the zero address
                   reverts:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x30cc71f212d93c74b02310909f389a14af12059f513e6f38884c4fcea70d1c56 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC721: transfer to the zero address

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:297:13)

  444) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             with data
               to a valid receiver contract
                 calls onERC721Received from approved:
     Error: Returned error: qtum [code: -4] Private key not available
      at Context.safeTransferFromWithData (test/token/ERC721/ERC721.test.js:313:87)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:345:49)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  445) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             with data
               to a valid receiver contract
                 when called by the owner
                   transfers the ownership of the given token ID to the given address:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:174:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  446) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             with data
               to a valid receiver contract
                 when called by the owner
                   clears the approval for the token ID:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:182:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  447) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             with data
               to a valid receiver contract
                 when called by the owner
                   adjusts owners balances:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:190:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  448) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             with data
               to a valid receiver contract
                 when called by the owner
                   adjusts owners tokens by index:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:196:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  449) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             with data
               to a valid receiver contract
                 when called by the approved individual
                   "before each" hook for "transfers the ownership of the given token ID to the given address":
     Error: Returned error: qtum [code: -4] Private key not available
      at Context.safeTransferFromWithData (test/token/ERC721/ERC721.test.js:313:87)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:212:48)
      at processImmediate (internal/timers.js:461:21)

  450) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             with data
               to a valid receiver contract
                 when called by the operator
                   "before each" hook for "transfers the ownership of the given token ID to the given address":
     Error: Returned error: qtum [code: -4] Private key not available
      at Context.safeTransferFromWithData (test/token/ERC721/ERC721.test.js:313:87)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:219:48)
      at processImmediate (internal/timers.js:461:21)

  451) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             with data
               to a valid receiver contract
                 when called by the owner without an approved user
                   "before each" hook for "transfers the ownership of the given token ID to the given address":
     Error: Returned error: qtum [code: -4] Private key not available
      at Context.safeTransferFromWithData (test/token/ERC721/ERC721.test.js:313:87)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:227:48)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  452) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             with data
               to a valid receiver contract
                 when sent to the owner
                   keeps ownership of the token:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:238:37)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  453) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             with data
               to a valid receiver contract
                 when sent to the owner
                   clears the approval for the token ID:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:242:37)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  454) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             with data
               to a valid receiver contract
                 when sent to the owner
                   keeps the owner balance:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:254:37)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  455) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             with data
               to a valid receiver contract
                 when sent to the owner
                   keeps same tokens by index:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/token/ERC721/ERC721.test.js:260:42
      at Array.map (<anonymous>)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:260:22)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  456) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             with data
               to a valid receiver contract
                 when the address of the previous owner is incorrect
                   reverts:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x6a156aca325264b9f3f691d083e4ad0492caa64d1d25b17ebfda0b69d29468e3 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC721: transfer of token that is not own

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:270:13)

  457) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             with data
               to a valid receiver contract
                 when the sender is not authorized for the token id
                   reverts:

      Wrong kind of exception received
      + expected - actual

      -Returned error: qtum [code: -4] Private key not available
      +ERC721: transfer caller is not owner nor approved

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:279:13)

  458) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             with data
               to a valid receiver contract
                 when the given token ID does not exist
                   reverts:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xc27a541d2d4b1036f5bc02b5631d88e34a0d0ac2d3169fef3cd7f6cc4b7dc1d4 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC721: operator query for nonexistent token

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:288:13)

  459) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             with data
               to a valid receiver contract
                 when the address to transfer the token to is the zero address
                   reverts:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xbd35557500a6e19c3d85c1d3c2642e140c5e0d261ec7a54a8b8274964a5995c2 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC721: transfer to the zero address

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:297:13)

  460) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             with data
               to a valid receiver contract
                 with an invalid token id
                   reverts:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x75692d4066b63c1f85b32b33ff4f6f0c1f1f1acda475eb4412ad29eb6c4431e3 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC721: operator query for nonexistent token

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:357:17)

  461) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             without data
               to a user account
                 when called by the owner
                   transfers the ownership of the given token ID to the given address:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:174:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  462) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             without data
               to a user account
                 when called by the owner
                   clears the approval for the token ID:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:182:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  463) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             without data
               to a user account
                 when called by the owner
                   adjusts owners balances:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:190:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  464) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             without data
               to a user account
                 when called by the owner
                   adjusts owners tokens by index:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:196:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  465) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             without data
               to a user account
                 when called by the approved individual
                   "before each" hook for "transfers the ownership of the given token ID to the given address":
     Error: Returned error: qtum [code: -4] Private key not available
      at Context.safeTransferFromWithoutData (test/token/ERC721/ERC721.test.js:317:81)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:212:48)
      at processImmediate (internal/timers.js:461:21)

  466) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             without data
               to a user account
                 when called by the operator
                   "before each" hook for "transfers the ownership of the given token ID to the given address":
     Error: Returned error: qtum [code: -4] Private key not available
      at Context.safeTransferFromWithoutData (test/token/ERC721/ERC721.test.js:317:81)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:219:48)
      at processImmediate (internal/timers.js:461:21)

  467) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             without data
               to a user account
                 when called by the owner without an approved user
                   "before each" hook for "transfers the ownership of the given token ID to the given address":
     Error: Returned error: qtum [code: -4] Private key not available
      at Context.safeTransferFromWithoutData (test/token/ERC721/ERC721.test.js:317:81)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:227:48)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  468) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             without data
               to a user account
                 when sent to the owner
                   keeps ownership of the token:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:238:37)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  469) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             without data
               to a user account
                 when sent to the owner
                   clears the approval for the token ID:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:242:37)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  470) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             without data
               to a user account
                 when sent to the owner
                   keeps the owner balance:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:254:37)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  471) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             without data
               to a user account
                 when sent to the owner
                   keeps same tokens by index:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/token/ERC721/ERC721.test.js:260:42
      at Array.map (<anonymous>)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:260:22)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  472) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             without data
               to a user account
                 when the address of the previous owner is incorrect
                   reverts:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x510f44b8a162a2b658a85e82cd0769768159b70c35e28d5cbb1ad6a7b3745eac exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC721: transfer of token that is not own

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:270:13)

  473) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             without data
               to a user account
                 when the sender is not authorized for the token id
                   reverts:

      Wrong kind of exception received
      + expected - actual

      -Returned error: qtum [code: -4] Private key not available
      +ERC721: transfer caller is not owner nor approved

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:279:13)

  474) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             without data
               to a user account
                 when the given token ID does not exist
                   reverts:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xf319a0795040f765f6eaefdbadd1968cf3f888513c87f9b1e04095837531318e exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC721: operator query for nonexistent token

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:288:13)

  475) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             without data
               to a user account
                 when the address to transfer the token to is the zero address
                   reverts:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xc202e43aef9bc3a9e01c8d38a92392c3389dfba9bb82e285ad7b1a090d64fa8c exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC721: transfer to the zero address

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:297:13)

  476) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             without data
               to a valid receiver contract
                 calls onERC721Received from approved:
     Error: Returned error: qtum [code: -4] Private key not available
      at Context.safeTransferFromWithoutData (test/token/ERC721/ERC721.test.js:317:81)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:345:49)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  477) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             without data
               to a valid receiver contract
                 when called by the owner
                   transfers the ownership of the given token ID to the given address:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:174:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  478) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             without data
               to a valid receiver contract
                 when called by the owner
                   clears the approval for the token ID:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:182:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  479) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             without data
               to a valid receiver contract
                 when called by the owner
                   adjusts owners balances:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:190:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  480) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             without data
               to a valid receiver contract
                 when called by the owner
                   adjusts owners tokens by index:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:196:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  481) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             without data
               to a valid receiver contract
                 when called by the approved individual
                   "before each" hook for "transfers the ownership of the given token ID to the given address":
     Error: Returned error: qtum [code: -4] Private key not available
      at Context.safeTransferFromWithoutData (test/token/ERC721/ERC721.test.js:317:81)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:212:48)
      at processImmediate (internal/timers.js:461:21)

  482) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             without data
               to a valid receiver contract
                 when called by the operator
                   "before each" hook for "transfers the ownership of the given token ID to the given address":
     Error: Returned error: qtum [code: -4] Private key not available
      at Context.safeTransferFromWithoutData (test/token/ERC721/ERC721.test.js:317:81)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:219:48)
      at processImmediate (internal/timers.js:461:21)

  483) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             without data
               to a valid receiver contract
                 when called by the owner without an approved user
                   "before each" hook for "transfers the ownership of the given token ID to the given address":
     Error: Returned error: qtum [code: -4] Private key not available
      at Context.safeTransferFromWithoutData (test/token/ERC721/ERC721.test.js:317:81)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:227:48)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  484) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             without data
               to a valid receiver contract
                 when sent to the owner
                   keeps ownership of the token:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:238:37)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  485) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             without data
               to a valid receiver contract
                 when sent to the owner
                   clears the approval for the token ID:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:242:37)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  486) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             without data
               to a valid receiver contract
                 when sent to the owner
                   keeps the owner balance:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:254:37)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  487) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             without data
               to a valid receiver contract
                 when sent to the owner
                   keeps same tokens by index:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/token/ERC721/ERC721.test.js:260:42
      at Array.map (<anonymous>)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:260:22)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  488) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             without data
               to a valid receiver contract
                 when the address of the previous owner is incorrect
                   reverts:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x34110891e4c2d3738b37079d82bae7fdcd915056be531ac80cf14781f4ba52fa exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC721: transfer of token that is not own

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:270:13)

  489) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             without data
               to a valid receiver contract
                 when the sender is not authorized for the token id
                   reverts:

      Wrong kind of exception received
      + expected - actual

      -Returned error: qtum [code: -4] Private key not available
      +ERC721: transfer caller is not owner nor approved

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:279:13)

  490) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             without data
               to a valid receiver contract
                 when the given token ID does not exist
                   reverts:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xc708b640836e8ce59396b9745f70f7b9ddf682054bcd54f8dd35be7f62e6a336 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC721: operator query for nonexistent token

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:288:13)

  491) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             without data
               to a valid receiver contract
                 when the address to transfer the token to is the zero address
                   reverts:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x72d97ef289e2a6143db582612e75f25601ea5d2f85f08c7ae65b12155a98971d exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC721: transfer to the zero address

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:297:13)

  492) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             without data
               to a valid receiver contract
                 with an invalid token id
                   reverts:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xe7e32a00427f8e0b25305c8dd7111d08a684149e6a66ab3ec3aad5acd1cc78bb exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC721: operator query for nonexistent token

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:357:17)

  493) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             to a receiver contract returning unexpected value
               reverts:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x61934cec001e072fba27c36274dedda7055371c437e8019797a9a921e0fb3ad8 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC721: transfer to non ERC721Receiver implementer

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:383:13)

  494) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             to a receiver contract that throws
               reverts:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xe5f5da653b9bd4e6ad32c8eeeb562c9820b7d24ddffbb358d5584de9d60b56a0 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC721ReceiverMock: reverting

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:393:13)

  495) Contract: ERC721
       with minted tokens
         transfers
           via safeTransferFrom
             to a contract that does not implement the required function
               reverts:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xb1c663a935909445d7e9d1c4cf712b52f060e82ec864752f7538d7a762506bce exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC721: transfer to non ERC721Receiver implementer

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:403:13)

  496) Contract: ERC721
       with minted tokens
         safe mint
           via safeMint
             to a receiver contract returning unexpected value
               reverts:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x54d80ca278439b383d643b74b8e0f3ca4f3ce7560d2ee2d95931bf23c70093df exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC721: transfer to non ERC721Receiver implementer

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:442:13)

  497) Contract: ERC721
       with minted tokens
         safe mint
           via safeMint
             to a receiver contract that throws
               reverts:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x6b91f933cbb553d922d219aed76b1065fbec8fdea73e660b13df3b5a11a8d80e exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC721ReceiverMock: reverting

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:452:13)

  498) Contract: ERC721
       with minted tokens
         safe mint
           via safeMint
             to a contract that does not implement the required function
               reverts:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xf02d3d0ab0a412fe2d54384b53d95a01d37915a384a4314f2a51207b1cb5f940 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC721: transfer to non ERC721Receiver implementer

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:462:13)

  499) Contract: ERC721
       with minted tokens
         approve
           when clearing approval
             when there was no prior approval
               clears approval for the token:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:478:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  500) Contract: ERC721
       with minted tokens
         approve
           when clearing approval
             when there was a prior approval
               clears approval for the token:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:478:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  501) Contract: ERC721
       with minted tokens
         approve
           when approving a non-zero address
             when there was no prior approval
               sets the approval for the target address:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:484:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  502) Contract: ERC721
       with minted tokens
         approve
           when approving a non-zero address
             when there was a prior approval to the same address
               sets the approval for the target address:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:484:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  503) Contract: ERC721
       with minted tokens
         approve
           when approving a non-zero address
             when there was a prior approval to a different address
               sets the approval for the target address:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:484:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  504) Contract: ERC721
       with minted tokens
         approve
           when the address that receives the approval is the owner
             reverts:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xc9b70a9f55649c804863c082f207519c8ddde7fa9ea521fb0fea647fd777e66e exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC721: approval to current owner

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:552:11)

  505) Contract: ERC721
       with minted tokens
         approve
           when the sender does not own the given token ID
             reverts:

      Wrong kind of exception received
      + expected - actual

      -Returned error: qtum [code: -4] Private key not available
      +ERC721: approve caller is not owner nor approved

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:560:11)

  506) Contract: ERC721
       with minted tokens
         approve
           when the sender is approved for the given token ID
             reverts:

      Wrong kind of exception received
      + expected - actual

      -Returned error: qtum [code: -4] Private key not available
      +ERC721: approve caller is not owner nor approved for all

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:568:11)

  507) Contract: ERC721
       with minted tokens
         approve
           when the sender is an operator
             "before each" hook for "sets the approval for the target address":
     Error: Returned error: qtum [code: -4] Private key not available
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:576:40)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  508) Contract: ERC721
       with minted tokens
         approve
           when the given token ID does not exist
             reverts:

      Wrong kind of exception received
      + expected - actual

      -Returned error: qtum [code: -4] Private key not available
      +ERC721: owner query for nonexistent token

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:585:11)

  509) Contract: ERC721
       with minted tokens
         setApprovalForAll
           when the operator willing to approve is not the owner
             when there is no operator approval set by the sender
               approves the operator:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:597:37)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  510) Contract: ERC721
       with minted tokens
         setApprovalForAll
           when the operator willing to approve is not the owner
             when the operator was set as not approved
               approves the operator:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:619:37)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  511) Contract: ERC721
       with minted tokens
         setApprovalForAll
           when the operator willing to approve is not the owner
             when the operator was set as not approved
               can unset the operator approval:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:635:37)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  512) Contract: ERC721
       with minted tokens
         setApprovalForAll
           when the operator willing to approve is not the owner
             when the operator was already approved
               keeps the approval to the given address:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:647:37)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  513) Contract: ERC721
       with minted tokens
         setApprovalForAll
           when the operator is the owner
             reverts:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x0e88abc8f1af07b313a79dad6d26133c9abbc7f762a6b3edafa3eb0688282e79 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC721: approve to caller

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:664:11)

  514) Contract: ERC721
       with minted tokens
         getApproved
           when token is not minted
             reverts:

      Wrong kind of exception received
      + expected - actual

      -Returned error: VM exception: OutOfGasIntrinsic
      +ERC721: approved query for nonexistent token

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:673:11)

  515) Contract: ERC721
       with minted tokens
         getApproved
           when token has been minted
             should return the zero address:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:682:35)
      at processImmediate (internal/timers.js:461:21)

  516) Contract: ERC721
       with minted tokens
         getApproved
           when token has been minted
             when account has been approved
               returns approved account:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:693:37)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  517) Contract: ERC721
       with minted tokens
         totalSupply
           returns total token supply:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:701:33)
      at processImmediate (internal/timers.js:461:21)

  518) Contract: ERC721
       with minted tokens
         tokenOfOwnerByIndex
           when the given index is lower than the amount of tokens owned by the given address
             returns the token ID placed at the given index:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:708:35)
      at processImmediate (internal/timers.js:461:21)

  519) Contract: ERC721
       with minted tokens
         tokenOfOwnerByIndex
           when the index is greater than or equal to the total tokens owned by the given address
             reverts:

      Wrong kind of exception received
      + expected - actual

      -Returned error: VM exception: OutOfGasIntrinsic
      +EnumerableSet: index out of bounds

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:714:11)

  520) Contract: ERC721
       with minted tokens
         tokenOfOwnerByIndex
           when the given address does not own any token
             reverts:

      Wrong kind of exception received
      + expected - actual

      -Returned error: VM exception: OutOfGasIntrinsic
      +EnumerableSet: index out of bounds

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:722:11)

  521) Contract: ERC721
       with minted tokens
         tokenOfOwnerByIndex
           after transferring all tokens to another user
             returns correct token IDs for target:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:735:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  522) Contract: ERC721
       with minted tokens
         tokenOfOwnerByIndex
           after transferring all tokens to another user
             returns empty collection for original owner:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:744:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  523) Contract: ERC721
       with minted tokens
         tokenByIndex
           returns all tokens:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/token/ERC721/ERC721.test.js:755:38
      at Array.map (<anonymous>)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:755:18)
      at processImmediate (internal/timers.js:461:21)

  524) Contract: ERC721
       with minted tokens
         tokenByIndex
           reverts if index is greater than supply:

      Wrong kind of exception received
      + expected - actual

      -Returned error: VM exception: OutOfGasIntrinsic
      +EnumerableMap: index out of bounds

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:762:9)

  525) Contract: ERC721
       with minted tokens
         tokenByIndex
           returns all tokens after burning token 5042 and minting new tokens:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:776:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  526) Contract: ERC721
       with minted tokens
         tokenByIndex
           returns all tokens after burning token 79217 and minting new tokens:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:776:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  527) Contract: ERC721
       _mint(address, uint256)
         reverts with a null destination address:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x312cae842d8b59b694d21b299ab528b86cf1d1644eeaed1e05a5cd34748081ea exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC721: mint to the zero address

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:792:7)

  528) Contract: ERC721
       _mint(address, uint256)
         with minted token
           creates the token:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:807:33)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  529) Contract: ERC721
       _mint(address, uint256)
         with minted token
           adjusts owner tokens by index:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:812:33)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  530) Contract: ERC721
       _mint(address, uint256)
         with minted token
           adjusts all tokens list:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:816:33)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  531) Contract: ERC721
       _mint(address, uint256)
         with minted token
           reverts when adding a token id that already exists:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x9c1825672e101a7998037e80df47c5112f21ef1a6fc4fb4119819d498b748004 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC721: token already minted

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:820:9)

  532) Contract: ERC721
       _burn
         reverts when burning a non-existent token id:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xc097c1bd68261db71d8d4d1438720abe833a139b3bc7c92d6e5b0025df8b12cf exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC721: owner query for nonexistent token

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:827:7)

  533) Contract: ERC721
       _burn
         with minted tokens
           with burnt token
             deletes the token:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:852:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  534) Contract: ERC721
       _burn
         with minted tokens
           with burnt token
             removes that token from the token list of the owner:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:859:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  535) Contract: ERC721
       _burn
         with minted tokens
           with burnt token
             adjusts all tokens list:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:863:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  536) Contract: ERC721
       _burn
         with minted tokens
           with burnt token
             burns all tokens:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:868:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  537) Contract: ERC721
       _burn
         with minted tokens
           with burnt token
             reverts when burning a token id that has been deleted:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xe0f8d4c4e29ad42981857a3e79be80d4ef15ab16618b6d06b3aec771f4caf026 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC721: owner query for nonexistent token

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721.test.js:875:11)

  538) Contract: ERC721Burnable
       like a burnable ERC721
         burn
           when successful
             burns the given token ID and adjusts the balance of the owner:

      Wrong kind of exception received
      + expected - actual

      -Returned error: VM exception: OutOfGasIntrinsic
      +ERC721: owner query for nonexistent token

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721Burnable.test.js:39:11)

  539) Contract: ERC721Burnable
       like a burnable ERC721
         burn
           when there is a previous approval burned
             getApproved
               reverts:

      Wrong kind of exception received
      + expected - actual

      -Returned error: VM exception: OutOfGasIntrinsic
      +ERC721: approved query for nonexistent token

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721Burnable.test.js:64:13)

  540) Contract: ERC721Burnable
       like a burnable ERC721
         burn
           when the given token ID was not tracked by this contract
             reverts:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x15f56fca4f2cc8e6bdc7771691ffa82380f67b5057934d7821834617a5e03e26 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC721: operator query for nonexistent token

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721Burnable.test.js:73:11)

  541) Contract: ERC721Holder
       receives an ERC721 token:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721Holder.test.js:22:24)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  542) Contract: ERC721Pausable
       when token is paused
         reverts when trying to transferFrom:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x5b42e36c2d5aba26413cd03994c47b1fb695cca1754c768087307a4364ef9c97 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC721Pausable: token transfer while paused

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721Pausable.test.js:30:7)

  543) Contract: ERC721Pausable
       when token is paused
         reverts when trying to safeTransferFrom:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x498e5d3684c2a0320dd1d1efb3379f02e94f1d378fcb1d2cb184f44eb97d56eb exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC721Pausable: token transfer while paused

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721Pausable.test.js:37:7)

  544) Contract: ERC721Pausable
       when token is paused
         reverts when trying to safeTransferFrom with data:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xb8984cf854ea1efe2b5124e4789d406d0f096026a45db9c19fca2fc39afeb00c exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC721Pausable: token transfer while paused

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721Pausable.test.js:44:7)

  545) Contract: ERC721Pausable
       when token is paused
         reverts when trying to mint:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x65589def78dc25c2224f1f873e37275d1a419b56cd2ae09e10d8689a5fb4627c exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC721Pausable: token transfer while paused

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721Pausable.test.js:52:7)

  546) Contract: ERC721Pausable
       when token is paused
         reverts when trying to burn:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xee3639eabacd72d3a686165828f6c388afe89fa08868651a6508d50c9943fa6c exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +ERC721Pausable: token transfer while paused

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/token/ERC721/ERC721Pausable.test.js:59:7)

  547) Contract: ERC721Pausable
       when token is paused
         getApproved
           returns approved address:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721Pausable.test.js:67:50)
      at processImmediate (internal/timers.js:461:21)

  548) Contract: ERC721Pausable
       when token is paused
         balanceOf
           returns the amount of tokens owned by the given address:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721Pausable.test.js:74:42)
      at processImmediate (internal/timers.js:461:21)

  549) Contract: ERC721Pausable
       when token is paused
         ownerOf
           returns the amount of tokens owned by the given address:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721Pausable.test.js:81:47)
      at processImmediate (internal/timers.js:461:21)

  550) Contract: ERC721Pausable
       when token is paused
         exists
           returns token existence:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721Pausable.test.js:88:33)
      at processImmediate (internal/timers.js:461:21)

  551) Contract: ERC721Pausable
       when token is paused
         isApprovedForAll
           returns the approval of the operator:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/token/ERC721/ERC721Pausable.test.js:94:33)
      at processImmediate (internal/timers.js:461:21)

  552) Contract: ERC777
       "before each" hook for "does not emit AuthorizedOperator events for default operators":
     Error: Returned error: invalid character 'W' looking for beginning of value
      at Object.ErrorResponse (node_modules/web3/node_modules/web3-core-helpers/lib/errors.js:28:19)
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/node_modules/web3/node_modules/web3-core-requestmanager/lib/index.js:303:36
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1
      at XMLHttpRequest.request.onreadystatechange (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (internal/streams/readable.js:1327:12)
      at processTicksAndRejections (internal/process/task_queues.js:80:21)

  553) Contract: Address
       isContract
         returns false for account address:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/Address.test.js:17:30)
      at processImmediate (internal/timers.js:461:21)

  554) Contract: Address
       isContract
         returns true for contract address:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/Address.test.js:22:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  555) Contract: Address
       sendValue
         "before each" hook for "sends 0 wei":
     Error: Returned error: precision error:  float64 value does not represent the original decimal precisely
      at Object.ErrorResponse (node_modules/web3/node_modules/web3-core-helpers/lib/errors.js:28:19)
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/node_modules/web3/node_modules/web3-core-requestmanager/lib/index.js:303:36
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1
      at XMLHttpRequest.request.onreadystatechange (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (internal/streams/readable.js:1327:12)
      at processTicksAndRejections (internal/process/task_queues.js:80:21)

  556) Contract: Address
       functionCall
         with valid contract receiver
           calls the requested function:
     Transaction: 0x22fc8fd9c048b6ebc44b11a5887ce3a36a9752d9ff5fab8bfe9521a2e7147b48 exited with an error (status 0) after consuming all gas.
     Please check that the transaction:
     - satisfies all conditions set by Solidity `assert` statements.
     - has enough gas to execute the full transaction.
     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
  StatusError: Transaction: 0x22fc8fd9c048b6ebc44b11a5887ce3a36a9752d9ff5fab8bfe9521a2e7147b48 exited with an error (status 0) after consuming all gas.
      at Context.<anonymous> (test/utils/Address.test.js:106:41)
      at processImmediate (internal/timers.js:461:21)

  557) Contract: Address
       functionCall
         with valid contract receiver
           reverts when the called function reverts with no reason:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xa48e9c97a405720e03bf344523e6cc6347f682329a28fddb22977336cf488fbb exited with an error (status 0) after consuming all gas.
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `assert` statements.
      -     - has enough gas to execute the full transaction.
      -     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
      +Address: low-level call failed

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/utils/Address.test.js:119:9)

  558) Contract: Address
       functionCall
         with valid contract receiver
           reverts when the called function reverts, bubbling up the revert reason:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x30c7206795c4d01952119268311a2a0d091829aa7257b883224e3520dc898486 exited with an error (status 0) after consuming all gas.
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `assert` statements.
      -     - has enough gas to execute the full transaction.
      -     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
      +CallReceiverMock: reverting

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/utils/Address.test.js:132:9)

  559) Contract: Address
       functionCall
         with valid contract receiver
           reverts when the called function runs out of gas:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x628ae8e2cb48925b0df6b4ee7525ebead4e8d7d07a2050c2489c74421f0ae389 exited with an error (status 0) after consuming all gas.
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `assert` statements.
      -     - has enough gas to execute the full transaction.
      -     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
      +Address: low-level call failed

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/utils/Address.test.js:145:9)

  560) Contract: Address
       functionCall
         with valid contract receiver
           reverts when the called function throws:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x12b89a399a50428cf63ab68bab0ab2124d30be952533476a2a6a09c19754ae92 exited with an error (status 0) after consuming all gas.
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `assert` statements.
      -     - has enough gas to execute the full transaction.
      -     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
      +Address: low-level call failed

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/utils/Address.test.js:158:9)

  561) Contract: Address
       functionCall
         with valid contract receiver
           reverts when function does not exist:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xed3d7286ec49a17f426ef6ffc62bb0d4a21dfb7ef57554313150e611fdb46765 exited with an error (status 0) after consuming all gas.
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `assert` statements.
      -     - has enough gas to execute the full transaction.
      -     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
      +Address: low-level call failed

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/utils/Address.test.js:171:9)

  562) Contract: Address
       functionCall
         with non-contract receiver
           reverts when address is not a contract:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x468ccd30743cfd55c1a6e194299332827a9b1672579fee1f21f0e9411f660a8b exited with an error (status 0) after consuming all gas.
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `assert` statements.
      -     - has enough gas to execute the full transaction.
      -     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
      +Address: call to non-contract

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/utils/Address.test.js:186:9)

  563) Contract: Address
       functionCallWithValue
         with zero value
           calls the requested function:
     Transaction: 0xf276994e281752056e765cf193f2bb4d393acbdbafa001c10ee5c9a8bc804a2f exited with an error (status 0) after consuming all gas.
     Please check that the transaction:
     - satisfies all conditions set by Solidity `assert` statements.
     - has enough gas to execute the full transaction.
     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
  StatusError: Transaction: 0xf276994e281752056e765cf193f2bb4d393acbdbafa001c10ee5c9a8bc804a2f exited with an error (status 0) after consuming all gas.
      at Context.<anonymous> (test/utils/Address.test.js:204:41)
      at processImmediate (internal/timers.js:461:21)

  564) Contract: Address
       functionCallWithValue
         with non-zero value
           reverts if insufficient sender balance:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xc9475efee9aeeffc4c5463d295a754200f1264563a02fc4eed6f76bd724cc7f8 exited with an error (status 0) after consuming all gas.
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `assert` statements.
      -     - has enough gas to execute the full transaction.
      -     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
      +Address: insufficient balance for call

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/utils/Address.test.js:221:9)

  565) Contract: Address
       functionCallWithValue
         with non-zero value
           calls the requested function with existing value:
     Error: Returned error: qtum [code: -3] Invalid amount
      at Object.ErrorResponse (node_modules/web3/node_modules/web3-core-helpers/lib/errors.js:28:19)
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/node_modules/web3/node_modules/web3-core-requestmanager/lib/index.js:303:36
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1
      at XMLHttpRequest.request.onreadystatechange (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (internal/streams/readable.js:1327:12)
      at processTicksAndRejections (internal/process/task_queues.js:80:21)

  566) Contract: Address
       functionCallWithValue
         with non-zero value
           calls the requested function with transaction funds:
     Error: Returned error: qtum [code: -3] Invalid amount
      at Context.<anonymous> (test/utils/Address.test.js:255:41)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  567) Contract: Address
       functionCallWithValue
         with non-zero value
           reverts when calling non-payable functions:
     Error: Returned error: qtum [code: -3] Invalid amount
      at Object.ErrorResponse (node_modules/web3/node_modules/web3-core-helpers/lib/errors.js:28:19)
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/node_modules/web3/node_modules/web3-core-requestmanager/lib/index.js:303:36
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1
      at XMLHttpRequest.request.onreadystatechange (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (internal/streams/readable.js:1327:12)
      at processTicksAndRejections (internal/process/task_queues.js:80:21)

  568) Contract: Address
       functionStaticCall
         reverts on a non-static function:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xf8548e2c17d2bba5c44b6ada5773123dd1d80a6b337ab344319b7f1cd6a03dc6 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +Address: low-level static call failed

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/utils/Address.test.js:305:7)

  569) Contract: Address
       functionStaticCall
         bubbles up revert reason:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x9b1d4ec9783f295ce110febec1ece0f4acd3ccb34d9111af53b1c522a2014d3c exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +CallReceiverMock: reverting

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/utils/Address.test.js:318:7)

  570) Contract: Address
       functionStaticCall
         reverts when address is not a contract:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x321b9d6aa09c7d53da4ac6d50df7fc3e670a35df713d1b40c60dcd1198c75ac6 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +Address: static call to non-contract

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/utils/Address.test.js:331:7)

  571) Contract: Address
       functionDelegateCall
         delegate calls the requested function:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/Address.test.js:354:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  572) Contract: Address
       functionDelegateCall
         bubbles up revert reason:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0x9b5539cbac33c35acdbbbd711e1f5721d6974d8f3d5e33c15a430da76bf5409c exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +CallReceiverMock: reverting

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/utils/Address.test.js:364:7)

  573) Contract: Address
       functionDelegateCall
         reverts when address is not a contract:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xdd59e76c71b15c87aecf34945ffa3772e1cfec8b298a1c9003c28327fa83b199 exited with an error (status 0).
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `require` statements.
      -     - does not trigger a Solidity `revert` statement.
      +Address: delegate call to non-contract

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/utils/Address.test.js:377:7)

  574) Contract: Arrays
       findUpperBound
         Even number of elements
           returns correct index for the basic case:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/Arrays.test.js:17:34)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  575) Contract: Arrays
       findUpperBound
         Even number of elements
           returns 0 for the first element:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/Arrays.test.js:21:34)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  576) Contract: Arrays
       findUpperBound
         Even number of elements
           returns index of the last element:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/Arrays.test.js:25:34)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  577) Contract: Arrays
       findUpperBound
         Even number of elements
           returns first index after last element if searched value is over the upper boundary:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/Arrays.test.js:29:34)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  578) Contract: Arrays
       findUpperBound
         Even number of elements
           returns 0 for the element under the lower boundary:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/Arrays.test.js:33:34)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  579) Contract: Arrays
       findUpperBound
         Odd number of elements
           returns correct index for the basic case:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/Arrays.test.js:45:34)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  580) Contract: Arrays
       findUpperBound
         Odd number of elements
           returns 0 for the first element:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/Arrays.test.js:49:34)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  581) Contract: Arrays
       findUpperBound
         Odd number of elements
           returns index of the last element:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/Arrays.test.js:53:34)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  582) Contract: Arrays
       findUpperBound
         Odd number of elements
           returns first index after last element if searched value is over the upper boundary:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/Arrays.test.js:57:34)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  583) Contract: Arrays
       findUpperBound
         Odd number of elements
           returns 0 for the element under the lower boundary:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/Arrays.test.js:61:34)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  584) Contract: Arrays
       findUpperBound
         Array with gap
           returns index of first element in next filled range:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/Arrays.test.js:73:34)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  585) Contract: Arrays
       findUpperBound
         Empty array
           always returns 0 for empty array:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/Arrays.test.js:83:34)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  586) Contract: Counters
       starts at zero:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/Counters.test.js:13:31)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  587) Contract: Counters
       increment
         starting from 0
           increments the current value by one:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/Counters.test.js:20:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  588) Contract: Counters
       increment
         starting from 0
           can be called multiple times:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/Counters.test.js:28:35)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  589) Contract: Counters
       decrement
         "before each" hook for "decrements the current value by one":
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/Counters.test.js:36:33)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  590) Contract: Create2
       computeAddress
         computes the correct contract address:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/Create2.test.js:28:10)
      at processImmediate (internal/timers.js:461:21)

  591) Contract: Create2
       computeAddress
         computes the correct contract address with deployer:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/Create2.test.js:36:10)
      at processImmediate (internal/timers.js:461:21)

  592) Contract: Create2
       deploy
         deploys a ERC1820Implementer from inline assembly code:
     Transaction: 0xbffe7115efd05ba572c3dc0cd12bfe7d9c9a3e03496a16b416b95c99234159a2 exited with an error (status 0) after consuming all gas.
     Please check that the transaction:
     - satisfies all conditions set by Solidity `assert` statements.
     - has enough gas to execute the full transaction.
     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
  StatusError: Transaction: 0xbffe7115efd05ba572c3dc0cd12bfe7d9c9a3e03496a16b416b95c99234159a2 exited with an error (status 0) after consuming all gas.
      at Context.<anonymous> (test/utils/Create2.test.js:47:26)
      at processImmediate (internal/timers.js:461:21)

  593) Contract: Create2
       deploy
         deploys a ERC20Mock with correct balances:
     Transaction: 0x232cb09b2bc673f561212de0c323897cf6b0e1040541ebb20a8054b23e0844e8 exited with an error (status 0) after consuming all gas.
     Please check that the transaction:
     - satisfies all conditions set by Solidity `assert` statements.
     - has enough gas to execute the full transaction.
     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
  StatusError: Transaction: 0x232cb09b2bc673f561212de0c323897cf6b0e1040541ebb20a8054b23e0844e8 exited with an error (status 0) after consuming all gas.
      at Context.<anonymous> (test/utils/Create2.test.js:54:26)
      at processImmediate (internal/timers.js:461:21)

  594) Contract: Create2
       deploy
         deploys a contract with funds deposited in the factory:
     Error: Returned error: qtum [code: -3] Invalid amount
      at Object.ErrorResponse (node_modules/web3/node_modules/web3-core-helpers/lib/errors.js:28:19)
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/node_modules/web3/node_modules/web3-core-requestmanager/lib/index.js:303:36
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1
      at XMLHttpRequest.request.onreadystatechange (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (internal/streams/readable.js:1327:12)
      at processTicksAndRejections (internal/process/task_queues.js:80:21)

  595) Contract: Create2
       deploy
         fails deploying a contract in an existent address:
     Transaction: 0xb7b613b393d3887d4e40fe988730d4fac4cc11a8c2a7e55eadb51d0f89f02135 exited with an error (status 0) after consuming all gas.
     Please check that the transaction:
     - satisfies all conditions set by Solidity `assert` statements.
     - has enough gas to execute the full transaction.
     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
  StatusError: Transaction: 0xb7b613b393d3887d4e40fe988730d4fac4cc11a8c2a7e55eadb51d0f89f02135 exited with an error (status 0) after consuming all gas.
      at Context.<anonymous> (test/utils/Create2.test.js:73:26)
      at processImmediate (internal/timers.js:461:21)

  596) Contract: Create2
       deploy
         fails deploying a contract if the bytecode length is zero:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xb50eae770891d488cbc4dfab667a91a6a6eac6320fd1b712d035a018b47d2596 exited with an error (status 0) after consuming all gas.
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `assert` statements.
      -     - has enough gas to execute the full transaction.
      -     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
      +Create2: bytecode length is zero

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/utils/Create2.test.js:80:7)

  597) Contract: Create2
       deploy
         fails deploying a contract if factory contract does not have sufficient balance:

      Wrong kind of exception received
      + expected - actual

      -Transaction: 0xd585704c57afcd29757668a6ffd908c840d3ac55b323e8b845beec9b1e42fa96 exited with an error (status 0) after consuming all gas.
      -     Please check that the transaction:
      -     - satisfies all conditions set by Solidity `assert` statements.
      -     - has enough gas to execute the full transaction.
      -     - does not trigger an invalid opcode by other means (ex: accessing an array out of bounds).
      +Create2: insufficient balance

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/utils/Create2.test.js:86:7)

  598) Contract: EnumerableMap
       starts empty:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/EnumerableMap.test.js:43:27)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  599) Contract: EnumerableMap
       set
         adds a key:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/utils/EnumerableMap.test.js:23:24
      at Array.map (<anonymous>)
      at expectMembersMatch (test/utils/EnumerableMap.test.js:22:28)
      at Context.<anonymous> (test/utils/EnumerableMap.test.js:53:13)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  600) Contract: EnumerableMap
       set
         adds several keys:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/utils/EnumerableMap.test.js:23:24
      at Array.map (<anonymous>)
      at expectMembersMatch (test/utils/EnumerableMap.test.js:22:28)
      at Context.<anonymous> (test/utils/EnumerableMap.test.js:60:13)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  601) Contract: EnumerableMap
       set
         returns false when adding keys already in the set:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/utils/EnumerableMap.test.js:23:24
      at Array.map (<anonymous>)
      at expectMembersMatch (test/utils/EnumerableMap.test.js:22:28)
      at Context.<anonymous> (test/utils/EnumerableMap.test.js:70:13)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  602) Contract: EnumerableMap
       set
         updates values for keys already in the set:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/utils/EnumerableMap.test.js:23:24
      at Array.map (<anonymous>)
      at expectMembersMatch (test/utils/EnumerableMap.test.js:22:28)
      at Context.<anonymous> (test/utils/EnumerableMap.test.js:78:13)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  603) Contract: EnumerableMap
       remove
         removes added keys:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/EnumerableMap.test.js:89:29)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  604) Contract: EnumerableMap
       remove
         returns false when removing keys not in the set:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/EnumerableMap.test.js:97:29)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  605) Contract: EnumerableMap
       remove
         adds and removes multiple keys:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/utils/EnumerableMap.test.js:23:24
      at Array.map (<anonymous>)
      at expectMembersMatch (test/utils/EnumerableMap.test.js:22:28)
      at Context.<anonymous> (test/utils/EnumerableMap.test.js:137:13)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  606) Contract: EnumerableMap
       read
         get
           existing value:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/EnumerableMap.test.js:150:31)
      at processImmediate (internal/timers.js:461:21)

  607) Contract: EnumerableMap
       read
         get
           missing value:

      Wrong kind of exception received
      + expected - actual

      -Returned error: VM exception: OutOfGasIntrinsic
      +EnumerableMap: nonexistent key

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/utils/EnumerableMap.test.js:153:9)

  608) Contract: EnumerableMap
       read
         get with message
           existing value:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/EnumerableMap.test.js:159:31)
      at processImmediate (internal/timers.js:461:21)

  609) Contract: EnumerableMap
       read
         get with message
           missing value:

      Wrong kind of exception received
      + expected - actual

      -Returned error: VM exception: OutOfGasIntrinsic
      +custom error string

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/utils/EnumerableMap.test.js:162:9)

  610) Contract: EnumerableMap
       read
         tryGet
           existing value:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/EnumerableMap.test.js:168:31)
      at processImmediate (internal/timers.js:461:21)

  611) Contract: EnumerableMap
       read
         tryGet
           missing value:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/EnumerableMap.test.js:174:31)
      at processImmediate (internal/timers.js:461:21)

  612) Contract: EnumerableSet
       EnumerableBytes32Set
         starts empty:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/EnumerableSet.behavior.js:21:27)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  613) Contract: EnumerableSet
       EnumerableBytes32Set
         add
           adds a value:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/utils/EnumerableSet.behavior.js:7:24
      at Array.map (<anonymous>)
      at expectMembersMatch (test/utils/EnumerableSet.behavior.js:6:30)
      at Context.<anonymous> (test/utils/EnumerableSet.behavior.js:31:13)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  614) Contract: EnumerableSet
       EnumerableBytes32Set
         add
           adds several values:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/utils/EnumerableSet.behavior.js:7:24
      at Array.map (<anonymous>)
      at expectMembersMatch (test/utils/EnumerableSet.behavior.js:6:30)
      at Context.<anonymous> (test/utils/EnumerableSet.behavior.js:38:13)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  615) Contract: EnumerableSet
       EnumerableBytes32Set
         add
           returns false when adding values already in the set:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/utils/EnumerableSet.behavior.js:7:24
      at Array.map (<anonymous>)
      at expectMembersMatch (test/utils/EnumerableSet.behavior.js:6:30)
      at Context.<anonymous> (test/utils/EnumerableSet.behavior.js:48:13)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  616) Contract: EnumerableSet
       EnumerableBytes32Set
         at
           reverts when retrieving non-existent elements:

      Wrong kind of exception received
      + expected - actual

      -Returned error: VM exception: OutOfGasIntrinsic
      +EnumerableSet: index out of bounds

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/utils/EnumerableSet.behavior.js:54:7)

  617) Contract: EnumerableSet
       EnumerableBytes32Set
         remove
           removes added values:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/EnumerableSet.behavior.js:65:29)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  618) Contract: EnumerableSet
       EnumerableBytes32Set
         remove
           returns false when removing values not in the set:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/EnumerableSet.behavior.js:73:29)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  619) Contract: EnumerableSet
       EnumerableBytes32Set
         remove
           adds and removes multiple values:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/utils/EnumerableSet.behavior.js:7:24
      at Array.map (<anonymous>)
      at expectMembersMatch (test/utils/EnumerableSet.behavior.js:6:30)
      at Context.<anonymous> (test/utils/EnumerableSet.behavior.js:113:13)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  620) Contract: EnumerableSet
       EnumerableAddressSet
         starts empty:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/EnumerableSet.behavior.js:21:27)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  621) Contract: EnumerableSet
       EnumerableAddressSet
         add
           adds a value:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/utils/EnumerableSet.behavior.js:7:24
      at Array.map (<anonymous>)
      at expectMembersMatch (test/utils/EnumerableSet.behavior.js:6:30)
      at Context.<anonymous> (test/utils/EnumerableSet.behavior.js:31:13)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  622) Contract: EnumerableSet
       EnumerableAddressSet
         add
           adds several values:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/utils/EnumerableSet.behavior.js:7:24
      at Array.map (<anonymous>)
      at expectMembersMatch (test/utils/EnumerableSet.behavior.js:6:30)
      at Context.<anonymous> (test/utils/EnumerableSet.behavior.js:38:13)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  623) Contract: EnumerableSet
       EnumerableAddressSet
         add
           returns false when adding values already in the set:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/utils/EnumerableSet.behavior.js:7:24
      at Array.map (<anonymous>)
      at expectMembersMatch (test/utils/EnumerableSet.behavior.js:6:30)
      at Context.<anonymous> (test/utils/EnumerableSet.behavior.js:48:13)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  624) Contract: EnumerableSet
       EnumerableAddressSet
         at
           reverts when retrieving non-existent elements:

      Wrong kind of exception received
      + expected - actual

      -Returned error: VM exception: OutOfGasIntrinsic
      +EnumerableSet: index out of bounds

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/utils/EnumerableSet.behavior.js:54:7)

  625) Contract: EnumerableSet
       EnumerableAddressSet
         remove
           removes added values:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/EnumerableSet.behavior.js:65:29)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  626) Contract: EnumerableSet
       EnumerableAddressSet
         remove
           returns false when removing values not in the set:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/EnumerableSet.behavior.js:73:29)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  627) Contract: EnumerableSet
       EnumerableAddressSet
         remove
           adds and removes multiple values:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/utils/EnumerableSet.behavior.js:7:24
      at Array.map (<anonymous>)
      at expectMembersMatch (test/utils/EnumerableSet.behavior.js:6:30)
      at Context.<anonymous> (test/utils/EnumerableSet.behavior.js:113:13)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  628) Contract: EnumerableSet
       EnumerableUintSet
         starts empty:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/EnumerableSet.behavior.js:21:27)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  629) Contract: EnumerableSet
       EnumerableUintSet
         add
           adds a value:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/utils/EnumerableSet.behavior.js:7:24
      at Array.map (<anonymous>)
      at expectMembersMatch (test/utils/EnumerableSet.behavior.js:6:30)
      at Context.<anonymous> (test/utils/EnumerableSet.behavior.js:31:13)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  630) Contract: EnumerableSet
       EnumerableUintSet
         add
           adds several values:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/utils/EnumerableSet.behavior.js:7:24
      at Array.map (<anonymous>)
      at expectMembersMatch (test/utils/EnumerableSet.behavior.js:6:30)
      at Context.<anonymous> (test/utils/EnumerableSet.behavior.js:38:13)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  631) Contract: EnumerableSet
       EnumerableUintSet
         add
           returns false when adding values already in the set:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/utils/EnumerableSet.behavior.js:7:24
      at Array.map (<anonymous>)
      at expectMembersMatch (test/utils/EnumerableSet.behavior.js:6:30)
      at Context.<anonymous> (test/utils/EnumerableSet.behavior.js:48:13)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  632) Contract: EnumerableSet
       EnumerableUintSet
         at
           reverts when retrieving non-existent elements:

      Wrong kind of exception received
      + expected - actual

      -Returned error: VM exception: OutOfGasIntrinsic
      +EnumerableSet: index out of bounds

      at expectException (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:20:30)
      at expectRevert (node_modules/@openzeppelin/test-helpers/src/expectRevert.js:75:3)
      at Context.<anonymous> (test/utils/EnumerableSet.behavior.js:54:7)

  633) Contract: EnumerableSet
       EnumerableUintSet
         remove
           removes added values:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/EnumerableSet.behavior.js:65:29)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  634) Contract: EnumerableSet
       EnumerableUintSet
         remove
           returns false when removing values not in the set:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/EnumerableSet.behavior.js:73:29)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  635) Contract: EnumerableSet
       EnumerableUintSet
         remove
           adds and removes multiple values:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at /d/go-workspace/src/github.com/qtumproject/janus/testing/openzeppelin/test/utils/EnumerableSet.behavior.js:7:24
      at Array.map (<anonymous>)
      at expectMembersMatch (test/utils/EnumerableSet.behavior.js:6:30)
      at Context.<anonymous> (test/utils/EnumerableSet.behavior.js:113:13)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  636) Contract: Pausable
       when unpaused
         "before each" hook for "can perform normal process in non-pause":
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/Pausable.test.js:16:34)
      at processImmediate (internal/timers.js:461:21)

  637) Contract: ReentrancyGuard
       "before each" hook for "does not allow remote callback":
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/ReentrancyGuard.test.js:11:38)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)

  638) Contract: SafeCast
       "before each" hook: before test for "downcasts 0":
     Error: Returned error: invalid character 'W' looking for beginning of value
      at Object.ErrorResponse (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3-core-helpers/src/errors.js:29:1)
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-core-requestmanager/src/index.js:170:1
      at /home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/packages/provider/wrapper.js:107:1
      at XMLHttpRequest.request.onreadystatechange (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/web3/node_modules/web3-providers-http/src/index.js:111:1)
      at XMLHttpRequestEventTarget.dispatchEvent (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request-event-target.js:34:1)
      at XMLHttpRequest._setReadyState (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:208:1)
      at XMLHttpRequest._onHttpResponseEnd (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:318:1)
      at IncomingMessage.<anonymous> (/home/dferrer/.nvm/versions/node/v14.15.4/lib/node_modules/truffle/build/webpack:/node_modules/xhr2-cookies/dist/xml-http-request.js:289:47)
      at endReadableNT (internal/streams/readable.js:1327:12)
      at processTicksAndRejections (internal/process/task_queues.js:80:21)

  639) Contract: Strings
       from uint256
         converts 0:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/Strings.test.js:14:33)
      at processImmediate (internal/timers.js:461:21)

  640) Contract: Strings
       from uint256
         converts a positive number:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/Strings.test.js:18:33)
      at processImmediate (internal/timers.js:461:21)

  641) Contract: Strings
       from uint256
         converts MAX_UINT256:
     Error: Returned error: VM exception: OutOfGasIntrinsic
      at Context.<anonymous> (test/utils/Strings.test.js:22:33)
      at processImmediate (internal/timers.js:461:21)